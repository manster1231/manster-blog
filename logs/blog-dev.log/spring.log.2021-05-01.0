2021-05-01 08:55:13.931  INFO 8516 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 8516 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 08:55:13.938 DEBUG 8516 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 08:55:13.939  INFO 8516 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 08:55:14.165  INFO 8516 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 08:55:14.165  INFO 8516 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 08:55:16.535  INFO 8516 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 08:55:16.542  INFO 8516 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 08:55:16.542  INFO 8516 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 08:55:16.544  INFO 8516 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 08:55:16.544  INFO 8516 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 08:55:16.544  INFO 8516 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 08:55:16.585  INFO 8516 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 08:55:16.661  INFO 8516 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 08:55:16.661  INFO 8516 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2495 ms
2021-05-01 08:55:16.802  INFO 8516 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 08:55:17.363  INFO 8516 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 08:55:18.744  INFO 8516 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 08:55:18.834  INFO 8516 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 08:55:19.483  INFO 8516 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 08:55:19.535  INFO 8516 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 08:55:19.545  INFO 8516 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 6.339 seconds (JVM running for 7.625)
2021-05-01 08:55:51.763  INFO 8516 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 08:55:51.763  INFO 8516 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 08:55:51.764  INFO 8516 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 08:55:51.820  INFO 8516 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 08:55:51.836  INFO 8516 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 08:55:56.312  INFO 8516 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@3059da90, {}]}
2021-05-01 08:55:56.458 DEBUG 8516 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 08:55:56.506 DEBUG 8516 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 08:55:56.548 DEBUG 8516 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 08:55:56.552  INFO 8516 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : main
2021-05-01 08:55:57.971  INFO 8516 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs;jsessionid=40949B4912B1C132A33B2126D09BE821', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 08:55:58.033 DEBUG 8516 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 08:55:58.034 DEBUG 8516 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 08:55:58.036 DEBUG 8516 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 08:55:58.042 DEBUG 8516 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 08:55:58.043 DEBUG 8516 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 08:55:58.048 DEBUG 8516 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 08:55:58.056 DEBUG 8516 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 08:55:58.056 DEBUG 8516 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 08:55:58.059 DEBUG 8516 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 08:55:58.060  INFO 8516 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 08:56:07.462  INFO 8516 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/2/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[2, {}]}
2021-05-01 08:56:07.465 DEBUG 8516 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 08:56:07.466 DEBUG 8516 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 08:56:07.469 DEBUG 8516 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 08:56:07.476 DEBUG 8516 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 08:56:07.476 DEBUG 8516 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 08:56:07.477 DEBUG 8516 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 08:56:07.482 DEBUG 8516 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 08:56:07.482 DEBUG 8516 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 2(Long)
2021-05-01 08:56:07.485 DEBUG 8516 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 08:56:07.485  INFO 8516 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 08:56:15.556  INFO 8516 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=2, title=实现前后端分页, content=# 1.环境

后端单表查询利器：[MyBatis-Plus](https://mp.baomidou.com/)

前端表格插件：[Datatables](http://datatables.club/)

MySQL8

SpringBoot

Thymeleaf

# 2.数据库表关系

![table1](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210430194454.png)

# 3.插入测试数据

```sql
insert into academy values (null,'软件学院');
insert into department values (null,'软件工程',1);
insert into building values (null,1);
insert into building values (null,0);
insert into building values (null,0);
insert into building values (null,1);
insert into building values (null,1);
insert into building values (null,1);
insert into dormitory values (101,null,1,1,6,null);
insert into dormitory values (101,null,2,1,6,null);
insert into dormitory values (101,null,3,1,6,null);
insert into dormitory values (101,null,4,1,6,null);
insert into dormitory values (101,null,5,1,6,null);
insert into dormitory values (101,null,6,1,6,null);
insert into dormitory values (304,null,1,1,6,null);
insert into dormitory values (305,null,1,3,6,null);
insert into dormitory values (306,null,1,2,6,null);
insert into dormitory values (304,null,2,2,6,null);
insert into property values (null,'桌子','1',304,50.0,1);
insert into property values (null,'椅子','1',304,30.0,1);
insert into property values (null,'桌子','1',305,50.0,1);
insert into property values (null,'椅子','1',305,30.0,0);
insert into property values (null,'桌子','1',306,50.0,1);
insert into property values (null,'窗帘','1',304,100.0,1);
insert into property values (null,'暖瓶','1',304,40.0,1);
insert into property values (null,'窗帘','1',305,100.0,1);
insert into property values (null,'暖瓶','1',305,40.0,0);
insert into property values (null,'窗帘','1',306,100.0,1);
insert into property values (null,'门','1',306,150.0,1);
insert into property values (null,'灯管','1',306,60.0,1);
insert into property values (null,'簸箕','1',306,9.99,1);
insert into property values (null,'簸箕','2',304,9.99,1);
insert into role  values (null,'管理员');
insert into administrator values ('2018006509','manster','bebd3785c6ff7d5f60573bcbde9281f1',1);
```

# 4.配置分页

1.配置主类

```java
@SpringBootApplication
@MapperScan("cn.tyut.ks.dao")
public class KsApplication {

    public static void main(String[] args) {
        SpringApplication.run(KsApplication.class, args);
    }

}
```

2.配置分页插件

```java
package cn.tyut.ks.config;

import com.baomidou.mybatisplus.annotation.DbType;
import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @Author 孟浩然
 * @Date 2021/3/1
 **/
@Configuration
public class MybatisPlusConfig {
    @Bean
    public MybatisPlusInterceptor mybatisPlusInterceptor() {
        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
        return interceptor;
    }
}
```

3.实体类

```java
package cn.tyut.ks.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * 财产
 *
 * @author
 */
@Data
public class Property implements Serializable {

    private Integer id;

    /**
     * 财产名
     */
    private String name;

    /**
     * 宿舍号
     */
    private Integer did;

    /**
     * 财产价格
     */
    private BigDecimal price;

    /**
     * 财产状态，有正常与故障两种
     */
    private String state;

    private static final long serialVersionUID = 1L;
}
```

# 5.测试分页

```java
package cn.tyut.ks.mapper;

import cn.tyut.ks.dao.PropertyMapper;
import cn.tyut.ks.entity.Property;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @Author manster
 * @Date 2021/3/2
 **/
@SpringBootTest
public class PropertyMapperTest {

    @Autowired
    private PropertyMapper propertyMapper;

    @Test
    public void selectPage(){
        LambdaQueryWrapper<Property> userLambdaQueryWrapper = Wrappers.lambdaQuery();
        userLambdaQueryWrapper.like(Property::getName , "桌");

        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , userLambdaQueryWrapper);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }

}

```

```
总页数： 2
总记录数： 3
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=3, name=桌子, did=305, price=50.00, state=1)
```

查询全部进行分页,就是将 `queryWrapper` 置为 `null`

```java
    @Test
    public void selectPage(){
        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }
```

```
总页数： 6
总记录数： 12
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=2, name=椅子, did=304, price=30.00, state=1)
```

# 6.实现分页

```sequence
    点击->>财产列表: 打开页面
    财产列表->>PropertyController:请求页面信息'/property/list'
    PropertyController-->>财产列表:返回'propertylist'页面
    财产列表->>PropertyController:ajax请求分页信息'/property/page'
    PropertyController->>PropertyService:调用allpage(Long index,Long size)方法
    PropertyService->>PropertyMapper:调用selectPage(Page<Property> page,@Param Wrapper<Property> queryWarpper)
    PropertyMapper-->>PropertyService:返回'IPage<Property> propertyIPage'
    PropertyService-->>PropertyController:返回'IPage<Property> propertyIPage'
    PropertyController-->>财产列表:返回封装好的pageUtil(页面信息类)
```

## 1.html

```html
<table id="mytable" class="table table-bordered table-hover">
<thead>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</thead>
<tbody>

</tbody>
<tfoot>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</tfoot>
</table>



<script>
    var _datatable;
    $(function () {
        var _columns = [
            {"data": "id"},
            {"data": "name"},
            {"data": "did"},
            {
                "data": "price",
                "render": function (data, type, full){
                    return data.toFixed(2);
                }
            },
            {
                "data": "state",
                "render": function (data, type, full) {
                    switch (data) {
                        case '1':
                            return "正常";
                            break;
                        case '0':
                            return "故障";
                            break;
                    }
                }
            },
            {
                "data": function (row, type, val, meta) {
                    var _id = row.id;
                    var editUrl = "/property/edit?id=" + _id;
                    var deleteUrl = "/property/delete?id=" + _id;
                    return '<a href="/property/edit?id=' + _id + '" type="button" class="btn btn-sm btn-primary"><i class="fa fa-edit">修改</i></a>&nbsp;&nbsp;'
                        + '<a href="/property/delete?id=' + _id + '" type="button" class="btn btn-sm btn-danger" ><i class="fa fa-trash">删除</i></button></a>';
                }
            }
        ];
        _datatable = App.initDataTables("/property/page",_columns);
    });

    function search(){
        var did = $("#did").val();
        var param = {
            "did": did
        };
        _datatable.settings()[0].ajax.data = param;
        _datatable.ajax.reload();
    }
</script>
```

## 2.app.js

```javascript
var App = function () {
    /**
     * 初始化DataTables
     */
    var handlerInitDataTables = function (url,columns) {
        var _datatable = $("#mytable").DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "processing": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
            "serverSide": true,
            "ajax": {
                "url": url,
                "type": "post"
            },
            "columns": columns,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
        });
        return _datatable;
    };

    return {
        /**
         * 初始化datatables
         * @param url
         * @param columns
         * @returns {jQuery}
         */
        initDataTables: function (url,columns) {
            return handlerInitDataTables(url,columns);
        },
    }
}();

```

## 3.PropertyController

```java
    /**
     * 查询全部数据
     * @param draw 请求次数
     * @param start 其实数据记录
     * @param length 页面大小
     * @param did 如果有值则为搜索
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    public PageUtil<Property> page(Integer draw, Integer start, Integer length, String did){
        //datatable服务传回的数据为start为第几条，而mybatisplus要的是页码，这里转换一下
        int index = 1;
        if(start > 0){
            index += start/length;
        }
        IPage<Property> propertyIPage;
        if(StringUtils.hasText(did)){
            propertyIPage = propertyService.searchPage(Integer.parseInt(did), index, length);
        }else {
            propertyIPage = propertyService.allPage(index, length);
        }
        pageUtil = new PageUtil();
        pageUtil.setDraw(draw);
        pageUtil.setData(propertyIPage.getRecords());
        pageUtil.setRecordsFiltered(propertyIPage.getTotal());
        pageUtil.setRecordsTotal(propertyIPage.getTotal());
        return pageUtil;
    }
```

## 4.PageUtil

```java
@Data
public class PageUtil<T> {

    private int draw;//请求次数

    private long recordsFiltered; //过滤后总数

    private long recordsTotal; //记录总数

    private List<T> data; //分页查询到的数据
}
```

## 5.PropertyServiceImpl

```java
    /**
     * 实现分页
     * @param index 页码
     * @param size 页面数据量
     * @return
     */
    public IPage<Property> allPage(long index, long size) {
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);

        return propertyIPage;
    }

    /**
     * 实现分页搜索
     * @param did 宿舍号
     * @param index 页码
     * @param size 每页数据量
     * @return
     */
    @Override
    public IPage<Property> searchPage(int did, long index, long size) {
        QueryWrapper<Property> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("did",did);
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , queryWrapper);

        return propertyIPage;
    }
```, firstPicture=https://picsum.photos/id/1073/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=null, tagIds=8), org.apache.catalina.session.StandardSessionFacade@3059da90, {}]}
2021-05-01 08:56:15.611 DEBUG 8516 --- [http-nio-9000-exec-2] c.manster.mapper.BlogMapper.updateById   : ==>  Preparing: UPDATE t_blog SET title=?, content=?, first_picture=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, user_id=?, tag_ids=? WHERE id=?
2021-05-01 08:56:15.616 DEBUG 8516 --- [http-nio-9000-exec-2] c.manster.mapper.BlogMapper.updateById   : ==> Parameters: 实现前后端分页(String), # 1.环境

后端单表查询利器：[MyBatis-Plus](https://mp.baomidou.com/)

前端表格插件：[Datatables](http://datatables.club/)

MySQL8

SpringBoot

Thymeleaf

# 2.数据库表关系

![table1](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210430194454.png)

# 3.插入测试数据

```sql
insert into academy values (null,'软件学院');
insert into department values (null,'软件工程',1);
insert into building values (null,1);
insert into building values (null,0);
insert into building values (null,0);
insert into building values (null,1);
insert into building values (null,1);
insert into building values (null,1);
insert into dormitory values (101,null,1,1,6,null);
insert into dormitory values (101,null,2,1,6,null);
insert into dormitory values (101,null,3,1,6,null);
insert into dormitory values (101,null,4,1,6,null);
insert into dormitory values (101,null,5,1,6,null);
insert into dormitory values (101,null,6,1,6,null);
insert into dormitory values (304,null,1,1,6,null);
insert into dormitory values (305,null,1,3,6,null);
insert into dormitory values (306,null,1,2,6,null);
insert into dormitory values (304,null,2,2,6,null);
insert into property values (null,'桌子','1',304,50.0,1);
insert into property values (null,'椅子','1',304,30.0,1);
insert into property values (null,'桌子','1',305,50.0,1);
insert into property values (null,'椅子','1',305,30.0,0);
insert into property values (null,'桌子','1',306,50.0,1);
insert into property values (null,'窗帘','1',304,100.0,1);
insert into property values (null,'暖瓶','1',304,40.0,1);
insert into property values (null,'窗帘','1',305,100.0,1);
insert into property values (null,'暖瓶','1',305,40.0,0);
insert into property values (null,'窗帘','1',306,100.0,1);
insert into property values (null,'门','1',306,150.0,1);
insert into property values (null,'灯管','1',306,60.0,1);
insert into property values (null,'簸箕','1',306,9.99,1);
insert into property values (null,'簸箕','2',304,9.99,1);
insert into role  values (null,'管理员');
insert into administrator values ('2018006509','manster','bebd3785c6ff7d5f60573bcbde9281f1',1);
```

# 4.配置分页

1.配置主类

```java
@SpringBootApplication
@MapperScan("cn.tyut.ks.dao")
public class KsApplication {

    public static void main(String[] args) {
        SpringApplication.run(KsApplication.class, args);
    }

}
```

2.配置分页插件

```java
package cn.tyut.ks.config;

import com.baomidou.mybatisplus.annotation.DbType;
import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @Author 孟浩然
 * @Date 2021/3/1
 **/
@Configuration
public class MybatisPlusConfig {
    @Bean
    public MybatisPlusInterceptor mybatisPlusInterceptor() {
        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
        return interceptor;
    }
}
```

3.实体类

```java
package cn.tyut.ks.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * 财产
 *
 * @author
 */
@Data
public class Property implements Serializable {

    private Integer id;

    /**
     * 财产名
     */
    private String name;

    /**
     * 宿舍号
     */
    private Integer did;

    /**
     * 财产价格
     */
    private BigDecimal price;

    /**
     * 财产状态，有正常与故障两种
     */
    private String state;

    private static final long serialVersionUID = 1L;
}
```

# 5.测试分页

```java
package cn.tyut.ks.mapper;

import cn.tyut.ks.dao.PropertyMapper;
import cn.tyut.ks.entity.Property;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @Author manster
 * @Date 2021/3/2
 **/
@SpringBootTest
public class PropertyMapperTest {

    @Autowired
    private PropertyMapper propertyMapper;

    @Test
    public void selectPage(){
        LambdaQueryWrapper<Property> userLambdaQueryWrapper = Wrappers.lambdaQuery();
        userLambdaQueryWrapper.like(Property::getName , "桌");

        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , userLambdaQueryWrapper);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }

}

```

```
总页数： 2
总记录数： 3
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=3, name=桌子, did=305, price=50.00, state=1)
```

查询全部进行分页,就是将 `queryWrapper` 置为 `null`

```java
    @Test
    public void selectPage(){
        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }
```

```
总页数： 6
总记录数： 12
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=2, name=椅子, did=304, price=30.00, state=1)
```

# 6.实现分页

```sequence
    点击->>财产列表: 打开页面
    财产列表->>PropertyController:请求页面信息'/property/list'
    PropertyController-->>财产列表:返回'propertylist'页面
    财产列表->>PropertyController:ajax请求分页信息'/property/page'
    PropertyController->>PropertyService:调用allpage(Long index,Long size)方法
    PropertyService->>PropertyMapper:调用selectPage(Page<Property> page,@Param Wrapper<Property> queryWarpper)
    PropertyMapper-->>PropertyService:返回'IPage<Property> propertyIPage'
    PropertyService-->>PropertyController:返回'IPage<Property> propertyIPage'
    PropertyController-->>财产列表:返回封装好的pageUtil(页面信息类)
```

## 1.html

```html
<table id="mytable" class="table table-bordered table-hover">
<thead>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</thead>
<tbody>

</tbody>
<tfoot>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</tfoot>
</table>



<script>
    var _datatable;
    $(function () {
        var _columns = [
            {"data": "id"},
            {"data": "name"},
            {"data": "did"},
            {
                "data": "price",
                "render": function (data, type, full){
                    return data.toFixed(2);
                }
            },
            {
                "data": "state",
                "render": function (data, type, full) {
                    switch (data) {
                        case '1':
                            return "正常";
                            break;
                        case '0':
                            return "故障";
                            break;
                    }
                }
            },
            {
                "data": function (row, type, val, meta) {
                    var _id = row.id;
                    var editUrl = "/property/edit?id=" + _id;
                    var deleteUrl = "/property/delete?id=" + _id;
                    return '<a href="/property/edit?id=' + _id + '" type="button" class="btn btn-sm btn-primary"><i class="fa fa-edit">修改</i></a>&nbsp;&nbsp;'
                        + '<a href="/property/delete?id=' + _id + '" type="button" class="btn btn-sm btn-danger" ><i class="fa fa-trash">删除</i></button></a>';
                }
            }
        ];
        _datatable = App.initDataTables("/property/page",_columns);
    });

    function search(){
        var did = $("#did").val();
        var param = {
            "did": did
        };
        _datatable.settings()[0].ajax.data = param;
        _datatable.ajax.reload();
    }
</script>
```

## 2.app.js

```javascript
var App = function () {
    /**
     * 初始化DataTables
     */
    var handlerInitDataTables = function (url,columns) {
        var _datatable = $("#mytable").DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "processing": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
            "serverSide": true,
            "ajax": {
                "url": url,
                "type": "post"
            },
            "columns": columns,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
        });
        return _datatable;
    };

    return {
        /**
         * 初始化datatables
         * @param url
         * @param columns
         * @returns {jQuery}
         */
        initDataTables: function (url,columns) {
            return handlerInitDataTables(url,columns);
        },
    }
}();

```

## 3.PropertyController

```java
    /**
     * 查询全部数据
     * @param draw 请求次数
     * @param start 其实数据记录
     * @param length 页面大小
     * @param did 如果有值则为搜索
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    public PageUtil<Property> page(Integer draw, Integer start, Integer length, String did){
        //datatable服务传回的数据为start为第几条，而mybatisplus要的是页码，这里转换一下
        int index = 1;
        if(start > 0){
            index += start/length;
        }
        IPage<Property> propertyIPage;
        if(StringUtils.hasText(did)){
            propertyIPage = propertyService.searchPage(Integer.parseInt(did), index, length);
        }else {
            propertyIPage = propertyService.allPage(index, length);
        }
        pageUtil = new PageUtil();
        pageUtil.setDraw(draw);
        pageUtil.setData(propertyIPage.getRecords());
        pageUtil.setRecordsFiltered(propertyIPage.getTotal());
        pageUtil.setRecordsTotal(propertyIPage.getTotal());
        return pageUtil;
    }
```

## 4.PageUtil

```java
@Data
public class PageUtil<T> {

    private int draw;//请求次数

    private long recordsFiltered; //过滤后总数

    private long recordsTotal; //记录总数

    private List<T> data; //分页查询到的数据
}
```

## 5.PropertyServiceImpl

```java
    /**
     * 实现分页
     * @param index 页码
     * @param size 页面数据量
     * @return
     */
    public IPage<Property> allPage(long index, long size) {
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);

        return propertyIPage;
    }

    /**
     * 实现分页搜索
     * @param did 宿舍号
     * @param index 页码
     * @param size 每页数据量
     * @return
     */
    @Override
    public IPage<Property> searchPage(int did, long index, long size) {
        QueryWrapper<Property> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("did",did);
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , queryWrapper);

        return propertyIPage;
    }
```(String), https://picsum.photos/id/1073/800/450(String), 原创(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T08:56:15.604(LocalDateTime), 2(Long), 1(Long), 8(String), 2(Long)
2021-05-01 08:56:15.619 DEBUG 8516 --- [http-nio-9000-exec-2] c.manster.mapper.BlogMapper.updateById   : <==    Updates: 1
2021-05-01 08:56:15.676  INFO 8516 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 08:56:15.720  INFO 8516 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=修改成功}]}
2021-05-01 08:56:15.724 DEBUG 8516 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 08:56:15.724 DEBUG 8516 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 08:56:15.725 DEBUG 8516 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 08:56:15.725 DEBUG 8516 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 08:56:15.726 DEBUG 8516 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 08:56:15.727 DEBUG 8516 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 08:56:15.732 DEBUG 8516 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 08:56:15.732 DEBUG 8516 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 08:56:15.733 DEBUG 8516 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 08:56:15.734  INFO 8516 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 08:56:42.019  INFO 8516 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[3, {}]}
2021-05-01 08:56:42.024 DEBUG 8516 --- [http-nio-9000-exec-9] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 08:56:42.025 DEBUG 8516 --- [http-nio-9000-exec-9] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 08:56:42.026 DEBUG 8516 --- [http-nio-9000-exec-9] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 08:56:42.029 DEBUG 8516 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 08:56:42.030 DEBUG 8516 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 08:56:42.032 DEBUG 8516 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 08:56:42.036 DEBUG 8516 --- [http-nio-9000-exec-9] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 08:56:42.036 DEBUG 8516 --- [http-nio-9000-exec-9] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 3(Long)
2021-05-01 08:56:42.039 DEBUG 8516 --- [http-nio-9000-exec-9] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 08:56:42.039  INFO 8516 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 08:56:46.412  INFO 8516 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=3, title=微信小程序同步歌词, content=**主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```, firstPicture=https://picsum.photos/id/39/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=null, tagIds=11,12), org.apache.catalina.session.StandardSessionFacade@3059da90, {}]}
2021-05-01 08:56:46.416 DEBUG 8516 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : ==>  Preparing: UPDATE t_blog SET title=?, content=?, first_picture=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, user_id=?, tag_ids=? WHERE id=?
2021-05-01 08:56:46.417 DEBUG 8516 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : ==> Parameters: 微信小程序同步歌词(String), **主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```(String), https://picsum.photos/id/39/800/450(String), 原创(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T08:56:46.415(LocalDateTime), 2(Long), 1(Long), 11,12(String), 3(Long)
2021-05-01 08:56:46.420 DEBUG 8516 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : <==    Updates: 1
2021-05-01 08:56:46.485  INFO 8516 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 08:56:46.489  INFO 8516 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=修改成功}]}
2021-05-01 08:56:46.497 DEBUG 8516 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 08:56:46.497 DEBUG 8516 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 08:56:46.498 DEBUG 8516 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 08:56:46.499 DEBUG 8516 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 08:56:46.499 DEBUG 8516 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 08:56:46.501 DEBUG 8516 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 08:56:46.504 DEBUG 8516 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 08:56:46.505 DEBUG 8516 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 08:56:46.506 DEBUG 8516 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 08:56:46.507  INFO 8516 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 09:11:01.968  INFO 14768 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 14768 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 09:11:01.970 DEBUG 14768 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 09:11:01.971  INFO 14768 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 09:11:02.015  INFO 14768 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 09:11:02.015  INFO 14768 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 09:11:03.178  INFO 14768 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 09:11:03.184  INFO 14768 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 09:11:03.185  INFO 14768 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 09:11:03.186  INFO 14768 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 09:11:03.186  INFO 14768 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 09:11:03.186  INFO 14768 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 09:11:03.189  INFO 14768 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 09:11:03.259  INFO 14768 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 09:11:03.260  INFO 14768 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1244 ms
2021-05-01 09:11:03.330  INFO 14768 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 09:11:03.551  INFO 14768 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 09:11:04.928  INFO 14768 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 09:11:05.013  INFO 14768 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 09:11:05.354  INFO 14768 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 09:11:05.387  INFO 14768 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 09:11:05.397  INFO 14768 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.826 seconds (JVM running for 4.711)
2021-05-01 09:11:57.746  INFO 14768 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 09:11:57.746  INFO 14768 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 09:11:57.747  INFO 14768 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 09:11:57.762  INFO 14768 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 09:11:57.767  INFO 14768 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 09:12:17.833  INFO 14768 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@4efcbadb, {}]}
2021-05-01 09:12:17.899 DEBUG 14768 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 09:12:17.919 DEBUG 14768 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 09:12:17.937 DEBUG 14768 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 09:12:17.939  INFO 14768 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : main
2021-05-01 09:12:19.505  INFO 14768 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs;jsessionid=C69E800CDD6F7E777DEF9B3A88F6F12D', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 09:12:19.540 DEBUG 14768 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 09:12:19.540 DEBUG 14768 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 09:12:19.541 DEBUG 14768 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 09:12:19.547 DEBUG 14768 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 09:12:19.547 DEBUG 14768 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 09:12:19.550 DEBUG 14768 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 09:12:19.558 DEBUG 14768 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:12:19.558 DEBUG 14768 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:12:19.561 DEBUG 14768 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:12:19.561  INFO 14768 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 09:12:24.338  INFO 14768 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/2/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[2, {}]}
2021-05-01 09:12:24.341 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:12:24.342 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:12:24.345 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:12:24.352 DEBUG 14768 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 09:12:24.352 DEBUG 14768 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 09:12:24.354 DEBUG 14768 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 09:12:24.357 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 09:12:24.358 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 2(Long)
2021-05-01 09:12:24.361 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 09:12:24.361  INFO 14768 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 09:14:39.669  INFO 14768 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=2, title=实现前后端分页, content=# 1.环境

后端单表查询利器：[MyBatis-Plus](https://mp.baomidou.com/)

前端表格插件：[Datatables](http://datatables.club/)

MySQL8

SpringBoot

Thymeleaf

# 2.数据库表关系

![table1](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210430194454.png)

# 3.插入测试数据

```sql
insert into academy values (null,'软件学院');
insert into department values (null,'软件工程',1);
insert into building values (null,1);
insert into building values (null,0);
insert into building values (null,0);
insert into building values (null,1);
insert into building values (null,1);
insert into building values (null,1);
insert into dormitory values (101,null,1,1,6,null);
insert into dormitory values (101,null,2,1,6,null);
insert into dormitory values (101,null,3,1,6,null);
insert into dormitory values (101,null,4,1,6,null);
insert into dormitory values (101,null,5,1,6,null);
insert into dormitory values (101,null,6,1,6,null);
insert into dormitory values (304,null,1,1,6,null);
insert into dormitory values (305,null,1,3,6,null);
insert into dormitory values (306,null,1,2,6,null);
insert into dormitory values (304,null,2,2,6,null);
insert into property values (null,'桌子','1',304,50.0,1);
insert into property values (null,'椅子','1',304,30.0,1);
insert into property values (null,'桌子','1',305,50.0,1);
insert into property values (null,'椅子','1',305,30.0,0);
insert into property values (null,'桌子','1',306,50.0,1);
insert into property values (null,'窗帘','1',304,100.0,1);
insert into property values (null,'暖瓶','1',304,40.0,1);
insert into property values (null,'窗帘','1',305,100.0,1);
insert into property values (null,'暖瓶','1',305,40.0,0);
insert into property values (null,'窗帘','1',306,100.0,1);
insert into property values (null,'门','1',306,150.0,1);
insert into property values (null,'灯管','1',306,60.0,1);
insert into property values (null,'簸箕','1',306,9.99,1);
insert into property values (null,'簸箕','2',304,9.99,1);
insert into role  values (null,'管理员');
insert into administrator values ('2018006509','manster','bebd3785c6ff7d5f60573bcbde9281f1',1);
```

# 4.配置分页

1.配置主类

```java
@SpringBootApplication
@MapperScan("cn.tyut.ks.dao")
public class KsApplication {

    public static void main(String[] args) {
        SpringApplication.run(KsApplication.class, args);
    }

}
```

2.配置分页插件

```java
package cn.tyut.ks.config;

import com.baomidou.mybatisplus.annotation.DbType;
import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @Author 孟浩然
 * @Date 2021/3/1
 **/
@Configuration
public class MybatisPlusConfig {
    @Bean
    public MybatisPlusInterceptor mybatisPlusInterceptor() {
        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
        return interceptor;
    }
}
```

3.实体类

```java
package cn.tyut.ks.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * 财产
 *
 * @author
 */
@Data
public class Property implements Serializable {

    private Integer id;

    /**
     * 财产名
     */
    private String name;

    /**
     * 宿舍号
     */
    private Integer did;

    /**
     * 财产价格
     */
    private BigDecimal price;

    /**
     * 财产状态，有正常与故障两种
     */
    private String state;

    private static final long serialVersionUID = 1L;
}
```

# 5.测试分页

```java
package cn.tyut.ks.mapper;

import cn.tyut.ks.dao.PropertyMapper;
import cn.tyut.ks.entity.Property;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @Author manster
 * @Date 2021/3/2
 **/
@SpringBootTest
public class PropertyMapperTest {

    @Autowired
    private PropertyMapper propertyMapper;

    @Test
    public void selectPage(){
        LambdaQueryWrapper<Property> userLambdaQueryWrapper = Wrappers.lambdaQuery();
        userLambdaQueryWrapper.like(Property::getName , "桌");

        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , userLambdaQueryWrapper);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }

}

```

```
总页数： 2
总记录数： 3
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=3, name=桌子, did=305, price=50.00, state=1)
```

查询全部进行分页,就是将 `queryWrapper` 置为 `null`

```java
    @Test
    public void selectPage(){
        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }
```

```
总页数： 6
总记录数： 12
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=2, name=椅子, did=304, price=30.00, state=1)
```

# 6.实现分页

```sequence
    点击->>财产列表: 打开页面
    财产列表->>PropertyController:请求页面信息'/property/list'
    PropertyController-->>财产列表:返回'propertylist'页面
    财产列表->>PropertyController:ajax请求分页信息'/property/page'
    PropertyController->>PropertyService:调用allpage(Long index,Long size)方法
    PropertyService->>PropertyMapper:调用selectPage(Page<Property> page,@Param Wrapper<Property> queryWarpper)
    PropertyMapper-->>PropertyService:返回'IPage<Property> propertyIPage'
    PropertyService-->>PropertyController:返回'IPage<Property> propertyIPage'
    PropertyController-->>财产列表:返回封装好的pageUtil(页面信息类)
```

## 1.html

```html
<table id="mytable" class="table table-bordered table-hover">
<thead>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</thead>
<tbody>

</tbody>
<tfoot>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</tfoot>
</table>



<script>
    var _datatable;
    $(function () {
        var _columns = [
            {"data": "id"},
            {"data": "name"},
            {"data": "did"},
            {
                "data": "price",
                "render": function (data, type, full){
                    return data.toFixed(2);
                }
            },
            {
                "data": "state",
                "render": function (data, type, full) {
                    switch (data) {
                        case '1':
                            return "正常";
                            break;
                        case '0':
                            return "故障";
                            break;
                    }
                }
            },
            {
                "data": function (row, type, val, meta) {
                    var _id = row.id;
                    var editUrl = "/property/edit?id=" + _id;
                    var deleteUrl = "/property/delete?id=" + _id;
                    return '<a href="/property/edit?id=' + _id + '" type="button" class="btn btn-sm btn-primary"><i class="fa fa-edit">修改</i></a>&nbsp;&nbsp;'
                        + '<a href="/property/delete?id=' + _id + '" type="button" class="btn btn-sm btn-danger" ><i class="fa fa-trash">删除</i></button></a>';
                }
            }
        ];
        _datatable = App.initDataTables("/property/page",_columns);
    });

    function search(){
        var did = $("#did").val();
        var param = {
            "did": did
        };
        _datatable.settings()[0].ajax.data = param;
        _datatable.ajax.reload();
    }
</script>
```

## 2.app.js

```javascript
var App = function () {
    /**
     * 初始化DataTables
     */
    var handlerInitDataTables = function (url,columns) {
        var _datatable = $("#mytable").DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "processing": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
            "serverSide": true,
            "ajax": {
                "url": url,
                "type": "post"
            },
            "columns": columns,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
        });
        return _datatable;
    };

    return {
        /**
         * 初始化datatables
         * @param url
         * @param columns
         * @returns {jQuery}
         */
        initDataTables: function (url,columns) {
            return handlerInitDataTables(url,columns);
        },
    }
}();

```

## 3.PropertyController

```java
    /**
     * 查询全部数据
     * @param draw 请求次数
     * @param start 其实数据记录
     * @param length 页面大小
     * @param did 如果有值则为搜索
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    public PageUtil<Property> page(Integer draw, Integer start, Integer length, String did){
        //datatable服务传回的数据为start为第几条，而mybatisplus要的是页码，这里转换一下
        int index = 1;
        if(start > 0){
            index += start/length;
        }
        IPage<Property> propertyIPage;
        if(StringUtils.hasText(did)){
            propertyIPage = propertyService.searchPage(Integer.parseInt(did), index, length);
        }else {
            propertyIPage = propertyService.allPage(index, length);
        }
        pageUtil = new PageUtil();
        pageUtil.setDraw(draw);
        pageUtil.setData(propertyIPage.getRecords());
        pageUtil.setRecordsFiltered(propertyIPage.getTotal());
        pageUtil.setRecordsTotal(propertyIPage.getTotal());
        return pageUtil;
    }
```

## 4.PageUtil

```java
@Data
public class PageUtil<T> {

    private int draw;//请求次数

    private long recordsFiltered; //过滤后总数

    private long recordsTotal; //记录总数

    private List<T> data; //分页查询到的数据
}
```

## 5.PropertyServiceImpl

```java
    /**
     * 实现分页
     * @param index 页码
     * @param size 页面数据量
     * @return
     */
    public IPage<Property> allPage(long index, long size) {
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);

        return propertyIPage;
    }

    /**
     * 实现分页搜索
     * @param did 宿舍号
     * @param index 页码
     * @param size 每页数据量
     * @return
     */
    @Override
    public IPage<Property> searchPage(int did, long index, long size) {
        QueryWrapper<Property> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("did",did);
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , queryWrapper);

        return propertyIPage;
    }
```, firstPicture=https://picsum.photos/id/1073/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=面对大量的数据时，我们需要将数据分页，分页又分为前端分页和后端分页，我们需要前后端分页结合起来实现真分页以提高性能。这里我们使用 MyBatis-Plus 和 Datatables 来进行实现前后端分页。, tagIds=8), org.apache.catalina.session.StandardSessionFacade@4efcbadb, {}]}
2021-05-01 09:14:39.687 DEBUG 14768 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : ==>  Preparing: UPDATE t_blog SET title=?, content=?, first_picture=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, user_id=?, description=?, tag_ids=? WHERE id=?
2021-05-01 09:14:39.690 DEBUG 14768 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : ==> Parameters: 实现前后端分页(String), # 1.环境

后端单表查询利器：[MyBatis-Plus](https://mp.baomidou.com/)

前端表格插件：[Datatables](http://datatables.club/)

MySQL8

SpringBoot

Thymeleaf

# 2.数据库表关系

![table1](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210430194454.png)

# 3.插入测试数据

```sql
insert into academy values (null,'软件学院');
insert into department values (null,'软件工程',1);
insert into building values (null,1);
insert into building values (null,0);
insert into building values (null,0);
insert into building values (null,1);
insert into building values (null,1);
insert into building values (null,1);
insert into dormitory values (101,null,1,1,6,null);
insert into dormitory values (101,null,2,1,6,null);
insert into dormitory values (101,null,3,1,6,null);
insert into dormitory values (101,null,4,1,6,null);
insert into dormitory values (101,null,5,1,6,null);
insert into dormitory values (101,null,6,1,6,null);
insert into dormitory values (304,null,1,1,6,null);
insert into dormitory values (305,null,1,3,6,null);
insert into dormitory values (306,null,1,2,6,null);
insert into dormitory values (304,null,2,2,6,null);
insert into property values (null,'桌子','1',304,50.0,1);
insert into property values (null,'椅子','1',304,30.0,1);
insert into property values (null,'桌子','1',305,50.0,1);
insert into property values (null,'椅子','1',305,30.0,0);
insert into property values (null,'桌子','1',306,50.0,1);
insert into property values (null,'窗帘','1',304,100.0,1);
insert into property values (null,'暖瓶','1',304,40.0,1);
insert into property values (null,'窗帘','1',305,100.0,1);
insert into property values (null,'暖瓶','1',305,40.0,0);
insert into property values (null,'窗帘','1',306,100.0,1);
insert into property values (null,'门','1',306,150.0,1);
insert into property values (null,'灯管','1',306,60.0,1);
insert into property values (null,'簸箕','1',306,9.99,1);
insert into property values (null,'簸箕','2',304,9.99,1);
insert into role  values (null,'管理员');
insert into administrator values ('2018006509','manster','bebd3785c6ff7d5f60573bcbde9281f1',1);
```

# 4.配置分页

1.配置主类

```java
@SpringBootApplication
@MapperScan("cn.tyut.ks.dao")
public class KsApplication {

    public static void main(String[] args) {
        SpringApplication.run(KsApplication.class, args);
    }

}
```

2.配置分页插件

```java
package cn.tyut.ks.config;

import com.baomidou.mybatisplus.annotation.DbType;
import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @Author 孟浩然
 * @Date 2021/3/1
 **/
@Configuration
public class MybatisPlusConfig {
    @Bean
    public MybatisPlusInterceptor mybatisPlusInterceptor() {
        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
        return interceptor;
    }
}
```

3.实体类

```java
package cn.tyut.ks.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * 财产
 *
 * @author
 */
@Data
public class Property implements Serializable {

    private Integer id;

    /**
     * 财产名
     */
    private String name;

    /**
     * 宿舍号
     */
    private Integer did;

    /**
     * 财产价格
     */
    private BigDecimal price;

    /**
     * 财产状态，有正常与故障两种
     */
    private String state;

    private static final long serialVersionUID = 1L;
}
```

# 5.测试分页

```java
package cn.tyut.ks.mapper;

import cn.tyut.ks.dao.PropertyMapper;
import cn.tyut.ks.entity.Property;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @Author manster
 * @Date 2021/3/2
 **/
@SpringBootTest
public class PropertyMapperTest {

    @Autowired
    private PropertyMapper propertyMapper;

    @Test
    public void selectPage(){
        LambdaQueryWrapper<Property> userLambdaQueryWrapper = Wrappers.lambdaQuery();
        userLambdaQueryWrapper.like(Property::getName , "桌");

        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , userLambdaQueryWrapper);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }

}

```

```
总页数： 2
总记录数： 3
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=3, name=桌子, did=305, price=50.00, state=1)
```

查询全部进行分页,就是将 `queryWrapper` 置为 `null`

```java
    @Test
    public void selectPage(){
        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }
```

```
总页数： 6
总记录数： 12
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=2, name=椅子, did=304, price=30.00, state=1)
```

# 6.实现分页

```sequence
    点击->>财产列表: 打开页面
    财产列表->>PropertyController:请求页面信息'/property/list'
    PropertyController-->>财产列表:返回'propertylist'页面
    财产列表->>PropertyController:ajax请求分页信息'/property/page'
    PropertyController->>PropertyService:调用allpage(Long index,Long size)方法
    PropertyService->>PropertyMapper:调用selectPage(Page<Property> page,@Param Wrapper<Property> queryWarpper)
    PropertyMapper-->>PropertyService:返回'IPage<Property> propertyIPage'
    PropertyService-->>PropertyController:返回'IPage<Property> propertyIPage'
    PropertyController-->>财产列表:返回封装好的pageUtil(页面信息类)
```

## 1.html

```html
<table id="mytable" class="table table-bordered table-hover">
<thead>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</thead>
<tbody>

</tbody>
<tfoot>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</tfoot>
</table>



<script>
    var _datatable;
    $(function () {
        var _columns = [
            {"data": "id"},
            {"data": "name"},
            {"data": "did"},
            {
                "data": "price",
                "render": function (data, type, full){
                    return data.toFixed(2);
                }
            },
            {
                "data": "state",
                "render": function (data, type, full) {
                    switch (data) {
                        case '1':
                            return "正常";
                            break;
                        case '0':
                            return "故障";
                            break;
                    }
                }
            },
            {
                "data": function (row, type, val, meta) {
                    var _id = row.id;
                    var editUrl = "/property/edit?id=" + _id;
                    var deleteUrl = "/property/delete?id=" + _id;
                    return '<a href="/property/edit?id=' + _id + '" type="button" class="btn btn-sm btn-primary"><i class="fa fa-edit">修改</i></a>&nbsp;&nbsp;'
                        + '<a href="/property/delete?id=' + _id + '" type="button" class="btn btn-sm btn-danger" ><i class="fa fa-trash">删除</i></button></a>';
                }
            }
        ];
        _datatable = App.initDataTables("/property/page",_columns);
    });

    function search(){
        var did = $("#did").val();
        var param = {
            "did": did
        };
        _datatable.settings()[0].ajax.data = param;
        _datatable.ajax.reload();
    }
</script>
```

## 2.app.js

```javascript
var App = function () {
    /**
     * 初始化DataTables
     */
    var handlerInitDataTables = function (url,columns) {
        var _datatable = $("#mytable").DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "processing": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
            "serverSide": true,
            "ajax": {
                "url": url,
                "type": "post"
            },
            "columns": columns,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
        });
        return _datatable;
    };

    return {
        /**
         * 初始化datatables
         * @param url
         * @param columns
         * @returns {jQuery}
         */
        initDataTables: function (url,columns) {
            return handlerInitDataTables(url,columns);
        },
    }
}();

```

## 3.PropertyController

```java
    /**
     * 查询全部数据
     * @param draw 请求次数
     * @param start 其实数据记录
     * @param length 页面大小
     * @param did 如果有值则为搜索
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    public PageUtil<Property> page(Integer draw, Integer start, Integer length, String did){
        //datatable服务传回的数据为start为第几条，而mybatisplus要的是页码，这里转换一下
        int index = 1;
        if(start > 0){
            index += start/length;
        }
        IPage<Property> propertyIPage;
        if(StringUtils.hasText(did)){
            propertyIPage = propertyService.searchPage(Integer.parseInt(did), index, length);
        }else {
            propertyIPage = propertyService.allPage(index, length);
        }
        pageUtil = new PageUtil();
        pageUtil.setDraw(draw);
        pageUtil.setData(propertyIPage.getRecords());
        pageUtil.setRecordsFiltered(propertyIPage.getTotal());
        pageUtil.setRecordsTotal(propertyIPage.getTotal());
        return pageUtil;
    }
```

## 4.PageUtil

```java
@Data
public class PageUtil<T> {

    private int draw;//请求次数

    private long recordsFiltered; //过滤后总数

    private long recordsTotal; //记录总数

    private List<T> data; //分页查询到的数据
}
```

## 5.PropertyServiceImpl

```java
    /**
     * 实现分页
     * @param index 页码
     * @param size 页面数据量
     * @return
     */
    public IPage<Property> allPage(long index, long size) {
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);

        return propertyIPage;
    }

    /**
     * 实现分页搜索
     * @param did 宿舍号
     * @param index 页码
     * @param size 每页数据量
     * @return
     */
    @Override
    public IPage<Property> searchPage(int did, long index, long size) {
        QueryWrapper<Property> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("did",did);
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , queryWrapper);

        return propertyIPage;
    }
```(String), https://picsum.photos/id/1073/800/450(String), 原创(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T09:14:39.682(LocalDateTime), 2(Long), 1(Long), 面对大量的数据时，我们需要将数据分页，分页又分为前端分页和后端分页，我们需要前后端分页结合起来实现真分页以提高性能。这里我们使用 MyBatis-Plus 和 Datatables 来进行实现前后端分页。(String), 8(String), 2(Long)
2021-05-01 09:14:39.693 DEBUG 14768 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : <==    Updates: 1
2021-05-01 09:14:39.769  INFO 14768 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 09:14:39.784  INFO 14768 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=修改成功}]}
2021-05-01 09:14:39.788 DEBUG 14768 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 09:14:39.788 DEBUG 14768 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 09:14:39.790 DEBUG 14768 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 09:14:39.790 DEBUG 14768 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 09:14:39.791 DEBUG 14768 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 09:14:39.793 DEBUG 14768 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 09:14:39.795 DEBUG 14768 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:14:39.796 DEBUG 14768 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:14:39.797 DEBUG 14768 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:14:39.797  INFO 14768 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 09:14:43.953  INFO 14768 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/2/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[2, {}]}
2021-05-01 09:14:43.958 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:14:43.958 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:14:43.959 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:14:43.963 DEBUG 14768 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 09:14:43.964 DEBUG 14768 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 09:14:43.966 DEBUG 14768 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 09:14:43.969 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 09:14:43.970 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 2(Long)
2021-05-01 09:14:43.972 DEBUG 14768 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 09:14:43.973  INFO 14768 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 09:14:49.820  INFO 14768 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[3, {}]}
2021-05-01 09:14:49.825 DEBUG 14768 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:14:49.825 DEBUG 14768 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:14:49.826 DEBUG 14768 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:14:49.831 DEBUG 14768 --- [http-nio-9000-exec-8] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 09:14:49.832 DEBUG 14768 --- [http-nio-9000-exec-8] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 09:14:49.833 DEBUG 14768 --- [http-nio-9000-exec-8] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 09:14:49.838 DEBUG 14768 --- [http-nio-9000-exec-8] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 09:14:49.838 DEBUG 14768 --- [http-nio-9000-exec-8] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 3(Long)
2021-05-01 09:14:49.840 DEBUG 14768 --- [http-nio-9000-exec-8] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 09:14:49.841  INFO 14768 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 09:20:16.634  INFO 14768 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=3, title=微信小程序同步歌词, content=**主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```, firstPicture=https://picsum.photos/id/39/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=播放歌曲时我们总希望歌词同步显示出来，这里以微信小程序为例，实现歌曲播放时歌词的同步显示, tagIds=11,12), org.apache.catalina.session.StandardSessionFacade@4efcbadb, {}]}
2021-05-01 09:20:16.641 DEBUG 14768 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.updateById   : ==>  Preparing: UPDATE t_blog SET title=?, content=?, first_picture=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, user_id=?, description=?, tag_ids=? WHERE id=?
2021-05-01 09:20:16.642 DEBUG 14768 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.updateById   : ==> Parameters: 微信小程序同步歌词(String), **主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```(String), https://picsum.photos/id/39/800/450(String), 原创(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T09:20:16.640(LocalDateTime), 2(Long), 1(Long), 播放歌曲时我们总希望歌词同步显示出来，这里以微信小程序为例，实现歌曲播放时歌词的同步显示(String), 11,12(String), 3(Long)
2021-05-01 09:20:16.645 DEBUG 14768 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.updateById   : <==    Updates: 1
2021-05-01 09:20:16.711  INFO 14768 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 09:20:16.715  INFO 14768 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=修改成功}]}
2021-05-01 09:20:16.721 DEBUG 14768 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 09:20:16.721 DEBUG 14768 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 09:20:16.722 DEBUG 14768 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 09:20:16.723 DEBUG 14768 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 09:20:16.723 DEBUG 14768 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 09:20:16.725 DEBUG 14768 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 09:20:16.727 DEBUG 14768 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:20:16.728 DEBUG 14768 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:20:16.729 DEBUG 14768 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:20:16.729  INFO 14768 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 09:31:35.031  INFO 14156 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 14156 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 09:31:35.033 DEBUG 14156 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 09:31:35.033  INFO 14156 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 09:31:35.072  INFO 14156 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 09:31:35.072  INFO 14156 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 09:31:36.197  INFO 14156 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 09:31:36.203  INFO 14156 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 09:31:36.204  INFO 14156 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 09:31:36.205  INFO 14156 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 09:31:36.205  INFO 14156 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 09:31:36.206  INFO 14156 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 09:31:36.208  INFO 14156 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 09:31:36.281  INFO 14156 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 09:31:36.282  INFO 14156 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1209 ms
2021-05-01 09:31:36.357  INFO 14156 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 09:31:36.586  INFO 14156 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 09:31:37.684  INFO 14156 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 09:31:37.769  INFO 14156 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 09:31:38.068  INFO 14156 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 09:31:38.097  INFO 14156 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 09:31:38.104  INFO 14156 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.45 seconds (JVM running for 4.338)
2021-05-01 09:31:47.439  INFO 14156 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 09:31:47.439  INFO 14156 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 09:31:47.440  INFO 14156 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 09:31:47.456  INFO 14156 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 09:31:47.459  INFO 14156 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 09:31:52.093  INFO 14156 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@27a8080e, {}]}
2021-05-01 09:31:52.159 DEBUG 14156 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 09:31:52.177 DEBUG 14156 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 09:31:52.195 DEBUG 14156 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 09:31:52.197  INFO 14156 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : main
2021-05-01 09:31:53.508  INFO 14156 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs;jsessionid=295AFAB3E94C7B7E0367C24FF83FD04B', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 09:31:53.544 DEBUG 14156 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 09:31:53.544 DEBUG 14156 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 09:31:53.545 DEBUG 14156 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 09:31:53.550 DEBUG 14156 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 09:31:53.551 DEBUG 14156 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 09:31:53.555 DEBUG 14156 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 09:31:53.563 DEBUG 14156 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:31:53.563 DEBUG 14156 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:31:53.564 DEBUG 14156 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:31:53.565  INFO 14156 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 09:31:55.662  INFO 14156 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[3, {}]}
2021-05-01 09:31:55.667 DEBUG 14156 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:31:55.667 DEBUG 14156 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:31:55.669 DEBUG 14156 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:31:55.676 DEBUG 14156 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 09:31:55.677 DEBUG 14156 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 09:31:55.678 DEBUG 14156 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 09:31:55.683 DEBUG 14156 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 09:31:55.683 DEBUG 14156 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 3(Long)
2021-05-01 09:31:55.686 DEBUG 14156 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 09:31:55.687  INFO 14156 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 09:32:58.498 ERROR 14156 --- [http-nio-9000-exec-9] c.m.handler.ControllerExceptionHandler   : Request URL : http://localhost:9000/admin/blogs/save, Exception : {}

org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'blog' on field 'createTime': rejected value [2021-04-30T22:14]; codes [typeMismatch.blog.createTime,typeMismatch.createTime,typeMismatch.java.time.LocalDateTime,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [blog.createTime,createTime]; arguments []; default message [createTime]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.time.LocalDateTime' for property 'createTime'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.time.LocalDateTime] for value '2021-04-30T22:14'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2021-04-30T22:14]]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:170)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 09:32:58.499  WARN 14156 --- [http-nio-9000-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'blog' on field 'createTime': rejected value [2021-04-30T22:14]; codes [typeMismatch.blog.createTime,typeMismatch.createTime,typeMismatch.java.time.LocalDateTime,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [blog.createTime,createTime]; arguments []; default message [createTime]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.time.LocalDateTime' for property 'createTime'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.time.LocalDateTime] for value '2021-04-30T22:14'; nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2021-04-30T22:14]]]
2021-05-01 09:34:42.182  INFO 14752 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 14752 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 09:34:42.185 DEBUG 14752 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 09:34:42.185  INFO 14752 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 09:34:42.225  INFO 14752 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 09:34:42.225  INFO 14752 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 09:34:43.505  INFO 14752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 09:34:43.511  INFO 14752 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 09:34:43.511  INFO 14752 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 09:34:43.513  INFO 14752 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 09:34:43.513  INFO 14752 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 09:34:43.513  INFO 14752 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 09:34:43.516  INFO 14752 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 09:34:43.587  INFO 14752 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 09:34:43.587  INFO 14752 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1361 ms
2021-05-01 09:34:43.659  INFO 14752 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 09:34:43.887  INFO 14752 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 09:34:44.993  INFO 14752 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 09:34:45.082  INFO 14752 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 09:34:45.428  INFO 14752 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 09:34:45.463  INFO 14752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 09:34:45.474  INFO 14752 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.754 seconds (JVM running for 4.636)
2021-05-01 09:34:51.981  INFO 14752 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 09:34:51.981  INFO 14752 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 09:34:51.982  INFO 14752 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 09:34:52.010  INFO 14752 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 09:34:52.017  INFO 14752 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 09:34:58.342  INFO 14752 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@2af65ef9, {}]}
2021-05-01 09:34:58.422 DEBUG 14752 --- [http-nio-9000-exec-5] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 09:34:58.444 DEBUG 14752 --- [http-nio-9000-exec-5] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 09:34:58.467 DEBUG 14752 --- [http-nio-9000-exec-5] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 09:34:58.470  INFO 14752 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Result : main
2021-05-01 09:35:02.899  INFO 14752 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 09:35:02.944 DEBUG 14752 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 09:35:02.944 DEBUG 14752 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 09:35:02.947 DEBUG 14752 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 09:35:02.954 DEBUG 14752 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 09:35:02.956 DEBUG 14752 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 09:35:02.960 DEBUG 14752 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 09:35:02.970 DEBUG 14752 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:35:02.971 DEBUG 14752 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:35:02.973 DEBUG 14752 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:35:02.975  INFO 14752 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 09:35:10.164  INFO 14752 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[3, {}]}
2021-05-01 09:35:10.169 DEBUG 14752 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:35:10.169 DEBUG 14752 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:35:10.171 DEBUG 14752 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:35:10.196 DEBUG 14752 --- [http-nio-9000-exec-6] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 09:35:10.196 DEBUG 14752 --- [http-nio-9000-exec-6] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 09:35:10.198 DEBUG 14752 --- [http-nio-9000-exec-6] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 09:35:10.204 DEBUG 14752 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 09:35:10.204 DEBUG 14752 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 3(Long)
2021-05-01 09:35:10.207 DEBUG 14752 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 09:35:10.208  INFO 14752 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 09:35:42.182  INFO 14752 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=3, title=微信小程序同步歌词, content=**主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```, firstPicture=https://picsum.photos/id/39/800/450, flag=原创, views=10, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=播放歌曲时我们总希望歌词同步显示出来，这里以微信小程序为例，实现歌曲播放时歌词的同步显示, tagIds=11,12), org.apache.catalina.session.StandardSessionFacade@2af65ef9, {}]}
2021-05-01 09:35:42.201 DEBUG 14752 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : ==>  Preparing: UPDATE t_blog SET title=?, content=?, first_picture=?, flag=?, views=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, user_id=?, description=?, tag_ids=? WHERE id=?
2021-05-01 09:35:42.205 DEBUG 14752 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : ==> Parameters: 微信小程序同步歌词(String), **主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```(String), https://picsum.photos/id/39/800/450(String), 原创(String), 10(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T09:35:42.195(LocalDateTime), 2(Long), 1(Long), 播放歌曲时我们总希望歌词同步显示出来，这里以微信小程序为例，实现歌曲播放时歌词的同步显示(String), 11,12(String), 3(Long)
2021-05-01 09:35:42.208 DEBUG 14752 --- [http-nio-9000-exec-3] c.manster.mapper.BlogMapper.updateById   : <==    Updates: 1
2021-05-01 09:35:42.260  INFO 14752 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 09:35:42.277  INFO 14752 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=修改成功}]}
2021-05-01 09:35:42.282 DEBUG 14752 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 09:35:42.282 DEBUG 14752 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 09:35:42.283 DEBUG 14752 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 09:35:42.283 DEBUG 14752 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 09:35:42.284 DEBUG 14752 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 09:35:42.286 DEBUG 14752 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 09:35:42.289 DEBUG 14752 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:35:42.290 DEBUG 14752 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:35:42.291 DEBUG 14752 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:35:42.292  INFO 14752 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 09:36:58.307  INFO 12480 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 12480 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 09:36:58.309 DEBUG 12480 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 09:36:58.310  INFO 12480 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 09:36:58.353  INFO 12480 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 09:36:58.354  INFO 12480 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 09:36:59.756  INFO 12480 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 09:36:59.766  INFO 12480 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 09:36:59.767  INFO 12480 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 09:36:59.769  INFO 12480 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 09:36:59.770  INFO 12480 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 09:36:59.770  INFO 12480 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 09:36:59.775  INFO 12480 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 09:36:59.955  INFO 12480 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 09:36:59.955  INFO 12480 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1600 ms
2021-05-01 09:37:00.080  INFO 12480 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 09:37:00.412  INFO 12480 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 09:37:01.672  INFO 12480 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 09:37:01.769  INFO 12480 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 09:37:02.129  INFO 12480 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 09:37:02.163  INFO 12480 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 09:37:02.171  INFO 12480 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 4.322 seconds (JVM running for 5.389)
2021-05-01 09:37:09.510  INFO 12480 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 09:37:09.511  INFO 12480 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 09:37:09.514  INFO 12480 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2021-05-01 09:37:09.555  INFO 12480 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 09:37:09.560  INFO 12480 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : login
2021-05-01 09:37:12.821  INFO 12480 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 1234563, org.apache.catalina.session.StandardSessionFacade@48fdafc9, {}]}
2021-05-01 09:37:12.887 DEBUG 12480 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 09:37:12.907 DEBUG 12480 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), 0d60665f48a091689740af8677df5b37(String)
2021-05-01 09:37:12.924 DEBUG 12480 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : <==      Total: 0
2021-05-01 09:37:12.926  INFO 12480 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : redirect:/admin
2021-05-01 09:37:12.942  INFO 12480 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 09:37:12.942  INFO 12480 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 09:37:19.648  INFO 12480 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@48fdafc9, {}]}
2021-05-01 09:37:19.656 DEBUG 12480 --- [http-nio-9000-exec-9] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 09:37:19.656 DEBUG 12480 --- [http-nio-9000-exec-9] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 09:37:19.662 DEBUG 12480 --- [http-nio-9000-exec-9] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 09:37:19.664  INFO 12480 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Result : main
2021-05-01 09:37:21.110  INFO 12480 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 09:37:21.147 DEBUG 12480 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 09:37:21.147 DEBUG 12480 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 09:37:21.149 DEBUG 12480 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 09:37:21.154 DEBUG 12480 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 09:37:21.155 DEBUG 12480 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 09:37:21.159 DEBUG 12480 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 09:37:21.186 DEBUG 12480 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:37:21.186 DEBUG 12480 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:37:21.187 DEBUG 12480 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:37:21.188  INFO 12480 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 09:37:24.451  INFO 12480 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[3, {}]}
2021-05-01 09:37:24.455 DEBUG 12480 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:37:24.455 DEBUG 12480 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:37:24.457 DEBUG 12480 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:37:24.469 DEBUG 12480 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 09:37:24.470 DEBUG 12480 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 09:37:24.471 DEBUG 12480 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 09:37:24.476 DEBUG 12480 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 09:37:24.477 DEBUG 12480 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 3(Long)
2021-05-01 09:37:24.480 DEBUG 12480 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 09:37:24.480  INFO 12480 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 09:37:30.425  INFO 12480 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=3, title=微信小程序同步歌词, content=**主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```, firstPicture=https://picsum.photos/id/39/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=播放歌曲时我们总希望歌词同步显示出来，这里以微信小程序为例，实现歌曲播放时歌词的同步显示., tagIds=11,12), org.apache.catalina.session.StandardSessionFacade@48fdafc9, {}]}
2021-05-01 09:37:30.439 DEBUG 12480 --- [http-nio-9000-exec-7] c.manster.mapper.BlogMapper.updateById   : ==>  Preparing: UPDATE t_blog SET title=?, content=?, first_picture=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, user_id=?, description=?, tag_ids=? WHERE id=?
2021-05-01 09:37:30.442 DEBUG 12480 --- [http-nio-9000-exec-7] c.manster.mapper.BlogMapper.updateById   : ==> Parameters: 微信小程序同步歌词(String), **主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```(String), https://picsum.photos/id/39/800/450(String), 原创(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T09:37:30.435(LocalDateTime), 2(Long), 1(Long), 播放歌曲时我们总希望歌词同步显示出来，这里以微信小程序为例，实现歌曲播放时歌词的同步显示.(String), 11,12(String), 3(Long)
2021-05-01 09:37:30.444 DEBUG 12480 --- [http-nio-9000-exec-7] c.manster.mapper.BlogMapper.updateById   : <==    Updates: 1
2021-05-01 09:37:30.518  INFO 12480 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 09:37:30.525  INFO 12480 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=修改成功}]}
2021-05-01 09:37:30.529 DEBUG 12480 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 09:37:30.529 DEBUG 12480 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 09:37:30.530 DEBUG 12480 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 09:37:30.531 DEBUG 12480 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 09:37:30.531 DEBUG 12480 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 09:37:30.534 DEBUG 12480 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 09:37:30.537 DEBUG 12480 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 09:37:30.537 DEBUG 12480 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 09:37:30.539 DEBUG 12480 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 09:37:30.540  INFO 12480 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 10:30:27.352  INFO 4636 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 4636 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 10:30:27.354 DEBUG 4636 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 10:30:27.354  INFO 4636 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 10:30:27.400  INFO 4636 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 10:30:27.401  INFO 4636 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 10:30:28.426  INFO 4636 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 10:30:28.432  INFO 4636 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 10:30:28.432  INFO 4636 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 10:30:28.433  INFO 4636 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 10:30:28.433  INFO 4636 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 10:30:28.434  INFO 4636 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 10:30:28.436  INFO 4636 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 10:30:28.505  INFO 4636 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 10:30:28.506  INFO 4636 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1105 ms
2021-05-01 10:30:28.573  INFO 4636 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 10:30:28.800  INFO 4636 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 10:30:29.598 ERROR 4636 --- [restartedMain] o.m.spring.mapper.MapperFactoryBean      : Error while adding the mapper 'interface com.manster.mapper.BlogMapper' to configuration.

org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/manster/mapper/BlogMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:123)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:95)
	at com.baomidou.mybatisplus.core.MybatisMapperAnnotationBuilder.loadXmlResource(MybatisMapperAnnotationBuilder.java:174)
	at com.baomidou.mybatisplus.core.MybatisMapperAnnotationBuilder.parse(MybatisMapperAnnotationBuilder.java:94)
	at com.baomidou.mybatisplus.core.MybatisMapperRegistry.addMapper(MybatisMapperRegistry.java:83)
	at com.baomidou.mybatisplus.core.MybatisConfiguration.addMapper(MybatisConfiguration.java:152)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.manster.AdminApplication.main(AdminApplication.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.validateCollection(XMLMapperBuilder.java:412)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.processNestedResultMappings(XMLMapperBuilder.java:399)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.lambda$buildResultMappingFromContext$0(XMLMapperBuilder.java:383)
	at org.apache.ibatis.parsing.XNode.getStringAttribute(XNode.java:228)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildResultMappingFromContext(XMLMapperBuilder.java:382)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:280)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:246)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:119)
	... 59 common frames omitted

2021-05-01 10:30:29.599  WARN 4636 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogController': Unsatisfied dependency expressed through field 'blogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogMapper' defined in file [G:\git\mansterblog\admin\target\classes\com\manster\mapper\BlogMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/manster/mapper/BlogMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
2021-05-01 10:30:29.599  INFO 4636 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-05-01 10:30:29.603  INFO 4636 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-05-01 10:30:29.605  INFO 4636 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-05-01 10:30:29.613  INFO 4636 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-05-01 10:30:29.638 ERROR 4636 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogController': Unsatisfied dependency expressed through field 'blogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogMapper' defined in file [G:\git\mansterblog\admin\target\classes\com\manster\mapper\BlogMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/manster/mapper/BlogMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.manster.AdminApplication.main(AdminApplication.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogServiceImpl': Unsatisfied dependency expressed through field 'blogMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogMapper' defined in file [G:\git\mansterblog\admin\target\classes\com\manster\mapper\BlogMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/manster/mapper/BlogMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 26 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blogMapper' defined in file [G:\git\mansterblog\admin\target\classes\com\manster\mapper\BlogMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/manster/mapper/BlogMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 40 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/manster/mapper/BlogMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 50 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'com/manster/mapper/BlogMapper.xml'. Cause: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:123)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:95)
	at com.baomidou.mybatisplus.core.MybatisMapperAnnotationBuilder.loadXmlResource(MybatisMapperAnnotationBuilder.java:174)
	at com.baomidou.mybatisplus.core.MybatisMapperAnnotationBuilder.parse(MybatisMapperAnnotationBuilder.java:94)
	at com.baomidou.mybatisplus.core.MybatisMapperRegistry.addMapper(MybatisMapperRegistry.java:83)
	at com.baomidou.mybatisplus.core.MybatisConfiguration.addMapper(MybatisConfiguration.java:152)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 53 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Ambiguous collection type for property 'tags'. You must specify 'javaType' or 'resultMap'.
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.validateCollection(XMLMapperBuilder.java:412)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.processNestedResultMappings(XMLMapperBuilder.java:399)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.lambda$buildResultMappingFromContext$0(XMLMapperBuilder.java:383)
	at org.apache.ibatis.parsing.XNode.getStringAttribute(XNode.java:228)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildResultMappingFromContext(XMLMapperBuilder.java:382)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:280)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:254)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:246)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:119)
	... 59 common frames omitted

2021-05-01 10:41:48.779  INFO 12120 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 12120 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 10:41:48.781 DEBUG 12120 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 10:41:48.781  INFO 12120 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 10:41:48.821  INFO 12120 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 10:41:48.821  INFO 12120 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 10:41:49.841  INFO 12120 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 10:41:49.847  INFO 12120 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 10:41:49.848  INFO 12120 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 10:41:49.849  INFO 12120 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 10:41:49.850  INFO 12120 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 10:41:49.850  INFO 12120 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 10:41:49.853  INFO 12120 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 10:41:49.923  INFO 12120 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 10:41:49.923  INFO 12120 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1101 ms
2021-05-01 10:41:49.996  INFO 12120 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 10:41:50.217  INFO 12120 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 10:41:51.316  INFO 12120 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 10:41:51.397  INFO 12120 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 10:41:51.695  INFO 12120 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 10:41:51.722  INFO 12120 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 10:41:51.729  INFO 12120 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.316 seconds (JVM running for 4.432)
2021-05-01 10:41:53.741  INFO 12120 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 10:41:53.742  INFO 12120 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 10:41:53.744  INFO 12120 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 10:41:53.760  INFO 12120 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:41:53.766  INFO 12120 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 10:42:02.869  INFO 12120 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@3b4e1f3c, {}]}
2021-05-01 10:42:02.935 DEBUG 12120 --- [http-nio-9000-exec-2] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 10:42:02.953 DEBUG 12120 --- [http-nio-9000-exec-2] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 10:42:02.971 DEBUG 12120 --- [http-nio-9000-exec-2] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 10:42:02.973  INFO 12120 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : main
2021-05-01 10:42:04.508  INFO 12120 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs;jsessionid=001B8DB449EE7403BDCC3FD593EC61FA', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 10:42:04.542 DEBUG 12120 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 10:42:04.543 DEBUG 12120 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 10:42:04.544 DEBUG 12120 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 10:42:04.549 DEBUG 12120 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 10:42:04.549 DEBUG 12120 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 10:42:04.553 DEBUG 12120 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 10:42:04.559 DEBUG 12120 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 10:42:04.560 DEBUG 12120 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 10:42:04.561 DEBUG 12120 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 10:42:04.562  INFO 12120 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 10:42:09.410  INFO 12120 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/types', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TypeController.types', args=[1, {}]}
2021-05-01 10:42:09.418 DEBUG 12120 --- [http-nio-9000-exec-8] c.m.m.TypeMapper.selectPage_mpCount      : ==>  Preparing: SELECT COUNT(*) FROM t_type
2021-05-01 10:42:09.418 DEBUG 12120 --- [http-nio-9000-exec-8] c.m.m.TypeMapper.selectPage_mpCount      : ==> Parameters: 
2021-05-01 10:42:09.420 DEBUG 12120 --- [http-nio-9000-exec-8] c.m.m.TypeMapper.selectPage_mpCount      : <==      Total: 1
2021-05-01 10:42:09.422 DEBUG 12120 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectPage   : ==>  Preparing: SELECT id,name FROM t_type LIMIT ?
2021-05-01 10:42:09.422 DEBUG 12120 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectPage   : ==> Parameters: 5(Long)
2021-05-01 10:42:09.423 DEBUG 12120 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectPage   : <==      Total: 5
2021-05-01 10:42:09.423  INFO 12120 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Result : types
2021-05-01 10:42:10.414  INFO 12120 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.tags', args=[1, {}]}
2021-05-01 10:42:10.427 DEBUG 12120 --- [http-nio-9000-exec-1] c.m.mapper.TagMapper.selectPage_mpCount  : ==>  Preparing: SELECT COUNT(*) FROM t_tag
2021-05-01 10:42:10.427 DEBUG 12120 --- [http-nio-9000-exec-1] c.m.mapper.TagMapper.selectPage_mpCount  : ==> Parameters: 
2021-05-01 10:42:10.429 DEBUG 12120 --- [http-nio-9000-exec-1] c.m.mapper.TagMapper.selectPage_mpCount  : <==      Total: 1
2021-05-01 10:42:10.430 DEBUG 12120 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectPage  : ==>  Preparing: SELECT id,name FROM t_tag LIMIT ?
2021-05-01 10:42:10.430 DEBUG 12120 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectPage  : ==> Parameters: 5(Long)
2021-05-01 10:42:10.431 DEBUG 12120 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectPage  : <==      Total: 5
2021-05-01 10:42:10.432  INFO 12120 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : tags
2021-05-01 10:42:11.343  INFO 12120 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 10:42:11.348 DEBUG 12120 --- [http-nio-9000-exec-6] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 10:42:11.348 DEBUG 12120 --- [http-nio-9000-exec-6] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 10:42:11.349 DEBUG 12120 --- [http-nio-9000-exec-6] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 10:42:11.351 DEBUG 12120 --- [http-nio-9000-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 10:42:11.351 DEBUG 12120 --- [http-nio-9000-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 10:42:11.354 DEBUG 12120 --- [http-nio-9000-exec-6] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 10:42:11.358 DEBUG 12120 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 10:42:11.359 DEBUG 12120 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 10:42:11.360 DEBUG 12120 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 10:42:11.361  INFO 12120 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 10:42:12.601  INFO 12120 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[3, {}]}
2021-05-01 10:42:12.605 DEBUG 12120 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 10:42:12.605 DEBUG 12120 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 10:42:12.607 DEBUG 12120 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 10:42:12.611 DEBUG 12120 --- [http-nio-9000-exec-4] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 10:42:12.611 DEBUG 12120 --- [http-nio-9000-exec-4] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 10:42:12.614 DEBUG 12120 --- [http-nio-9000-exec-4] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 10:42:12.618 DEBUG 12120 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 10:42:12.619 DEBUG 12120 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 3(Long)
2021-05-01 10:42:12.622 DEBUG 12120 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 10:42:12.623  INFO 12120 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 10:43:30.978  INFO 7600 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 7600 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 10:43:30.980 DEBUG 7600 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 10:43:30.980  INFO 7600 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 10:43:31.021  INFO 7600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 10:43:31.021  INFO 7600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 10:43:32.099  INFO 7600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 10:43:32.106  INFO 7600 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 10:43:32.107  INFO 7600 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 10:43:32.109  INFO 7600 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 10:43:32.109  INFO 7600 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 10:43:32.109  INFO 7600 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 10:43:32.112  INFO 7600 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 10:43:32.188  INFO 7600 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 10:43:32.188  INFO 7600 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1166 ms
2021-05-01 10:43:32.263  INFO 7600 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 10:43:32.473  INFO 7600 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 10:43:33.564  INFO 7600 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 10:43:33.648  INFO 7600 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 10:43:33.950  INFO 7600 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 10:43:33.978  INFO 7600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 10:43:33.986  INFO 7600 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.41 seconds (JVM running for 4.304)
2021-05-01 10:43:53.531  INFO 7600 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 10:43:53.531  INFO 7600 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 10:43:53.532  INFO 7600 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2021-05-01 10:43:53.549  INFO 7600 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:43:53.552  INFO 7600 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 10:44:41.037  INFO 7600 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:44:41.038  INFO 7600 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : login
2021-05-01 10:44:41.589  INFO 7600 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:44:41.589  INFO 7600 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : login
2021-05-01 10:44:54.086  INFO 7600 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:44:54.086  INFO 7600 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Result : login
2021-05-01 10:45:10.522 ERROR 7600 --- [http-nio-9000-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9000-exec-8] Exception processing template "error/404": An error happened during template parsing (template: "class path resource [templates/error/404.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 46 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 48 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 74 common frames omitted

2021-05-01 10:45:10.524 ERROR 7600 --- [http-nio-9000-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 10:45:10.525 ERROR 7600 --- [http-nio-9000-exec-8] o.a.c.c.C.[Tomcat].[localhost]           : Exception Processing ErrorPage[errorCode=0, location=/error]

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 35 common frames omitted
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 46 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 48 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 74 common frames omitted

2021-05-01 10:45:14.429  INFO 7600 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:45:14.429  INFO 7600 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Result : login
2021-05-01 10:45:19.915 ERROR 7600 --- [http-nio-9000-exec-9] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9000-exec-9] Exception processing template "error/404": An error happened during template parsing (template: "class path resource [templates/error/404.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 46 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 48 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 74 common frames omitted

2021-05-01 10:45:19.915 ERROR 7600 --- [http-nio-9000-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 10:45:19.916 ERROR 7600 --- [http-nio-9000-exec-9] o.a.c.c.C.[Tomcat].[localhost]           : Exception Processing ErrorPage[errorCode=0, location=/error]

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 35 common frames omitted
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 46 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 48 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 74 common frames omitted

2021-05-01 10:45:29.185  INFO 7600 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:45:29.185  INFO 7600 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 10:45:33.211  INFO 7600 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@4ea8c5ed, {}]}
2021-05-01 10:45:33.270 DEBUG 7600 --- [http-nio-9000-exec-1] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 10:45:33.286 DEBUG 7600 --- [http-nio-9000-exec-1] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 10:45:33.302 DEBUG 7600 --- [http-nio-9000-exec-1] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 10:45:33.305  INFO 7600 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : main
2021-05-01 10:45:34.551  INFO 7600 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 10:45:34.584 DEBUG 7600 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 10:45:34.585 DEBUG 7600 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 10:45:34.586 DEBUG 7600 --- [http-nio-9000-exec-5] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 10:45:34.591 DEBUG 7600 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 10:45:34.591 DEBUG 7600 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 10:45:34.594 DEBUG 7600 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 10:45:34.601 DEBUG 7600 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 10:45:34.602 DEBUG 7600 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 10:45:34.604 DEBUG 7600 --- [http-nio-9000-exec-5] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 10:45:34.605  INFO 7600 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 10:45:35.746  INFO 7600 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[3, {}]}
2021-05-01 10:45:35.749 DEBUG 7600 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 10:45:35.750 DEBUG 7600 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 10:45:35.752 DEBUG 7600 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 10:45:35.759 DEBUG 7600 --- [http-nio-9000-exec-8] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 10:45:35.759 DEBUG 7600 --- [http-nio-9000-exec-8] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 10:45:35.760 DEBUG 7600 --- [http-nio-9000-exec-8] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 10:45:35.765 DEBUG 7600 --- [http-nio-9000-exec-8] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 10:45:35.765 DEBUG 7600 --- [http-nio-9000-exec-8] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 3(Long)
2021-05-01 10:45:35.768 DEBUG 7600 --- [http-nio-9000-exec-8] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 10:45:35.768  INFO 7600 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 10:55:38.632  INFO 16956 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 16956 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 10:55:38.634 DEBUG 16956 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 10:55:38.634  INFO 16956 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 10:55:38.675  INFO 16956 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 10:55:38.676  INFO 16956 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 10:55:39.721  INFO 16956 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 10:55:39.727  INFO 16956 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 10:55:39.727  INFO 16956 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 10:55:39.729  INFO 16956 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 10:55:39.729  INFO 16956 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 10:55:39.729  INFO 16956 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 10:55:39.732  INFO 16956 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 10:55:39.803  INFO 16956 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 10:55:39.803  INFO 16956 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1127 ms
2021-05-01 10:55:39.872  INFO 16956 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 10:55:40.094  INFO 16956 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 10:55:41.187  INFO 16956 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 10:55:41.270  INFO 16956 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 10:55:41.573  INFO 16956 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 10:55:41.600  INFO 16956 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 10:55:41.608  INFO 16956 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.354 seconds (JVM running for 4.277)
2021-05-01 10:55:44.246  INFO 16956 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 10:55:44.247  INFO 16956 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 10:55:44.248  INFO 16956 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 10:55:44.265  INFO 16956 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:55:44.272  INFO 16956 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 10:56:18.836 ERROR 16956 --- [http-nio-9000-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-9000-exec-10] Exception processing template "error/404": An error happened during template parsing (template: "class path resource [templates/error/404.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 46 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 48 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 74 common frames omitted

2021-05-01 10:56:18.838 ERROR 16956 --- [http-nio-9000-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 10:56:18.840 ERROR 16956 --- [http-nio-9000-exec-10] o.a.c.c.C.[Tomcat].[localhost]           : Exception Processing ErrorPage[errorCode=0, location=/error]

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:179)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/error/404.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 35 common frames omitted
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 46 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.avatar" (template: "blogfargments" - line 23, col 99)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 48 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'avatar' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 74 common frames omitted

2021-05-01 10:59:43.838  INFO 11800 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 11800 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 10:59:43.840 DEBUG 11800 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 10:59:43.841  INFO 11800 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 10:59:43.898  INFO 11800 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 10:59:43.898  INFO 11800 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 10:59:45.244  INFO 11800 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 10:59:45.250  INFO 11800 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 10:59:45.250  INFO 11800 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 10:59:45.252  INFO 11800 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 10:59:45.252  INFO 11800 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 10:59:45.252  INFO 11800 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 10:59:45.255  INFO 11800 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 10:59:45.327  INFO 11800 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 10:59:45.327  INFO 11800 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1428 ms
2021-05-01 10:59:45.403  INFO 11800 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 10:59:45.632  INFO 11800 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 10:59:47.045  INFO 11800 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 10:59:47.176  INFO 11800 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 10:59:47.516  INFO 11800 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 10:59:47.547  INFO 11800 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 10:59:47.556  INFO 11800 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 4.516 seconds (JVM running for 6.089)
2021-05-01 10:59:51.874  INFO 11800 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 10:59:51.875  INFO 11800 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 10:59:51.875  INFO 11800 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2021-05-01 10:59:51.891  INFO 11800 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 10:59:51.895  INFO 11800 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 11:01:31.446  INFO 1104 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 1104 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 11:01:31.448 DEBUG 1104 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 11:01:31.448  INFO 1104 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 11:01:31.482  INFO 1104 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 11:01:31.482  INFO 1104 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 11:01:32.492  INFO 1104 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 11:01:32.499  INFO 1104 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 11:01:32.500  INFO 1104 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 11:01:32.502  INFO 1104 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 11:01:32.502  INFO 1104 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 11:01:32.502  INFO 1104 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 11:01:32.505  INFO 1104 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 11:01:32.581  INFO 1104 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 11:01:32.581  INFO 1104 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1098 ms
2021-05-01 11:01:32.653  INFO 1104 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 11:01:32.878  INFO 1104 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 11:01:33.983  INFO 1104 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 11:01:34.060  INFO 1104 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 11:01:34.361  INFO 1104 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 11:01:34.388  INFO 1104 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 11:01:34.396  INFO 1104 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.318 seconds (JVM running for 4.197)
2021-05-01 11:01:38.065  INFO 1104 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 11:01:38.065  INFO 1104 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 11:01:38.066  INFO 1104 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 11:01:38.083  INFO 1104 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 11:01:38.087  INFO 1104 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 11:04:27.717  INFO 1796 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 1796 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 11:04:27.719 DEBUG 1796 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 11:04:27.719  INFO 1796 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 11:04:27.759  INFO 1796 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 11:04:27.759  INFO 1796 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 11:04:28.785  INFO 1796 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 11:04:28.791  INFO 1796 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 11:04:28.792  INFO 1796 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 11:04:28.793  INFO 1796 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 11:04:28.793  INFO 1796 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 11:04:28.794  INFO 1796 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 11:04:28.797  INFO 1796 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 11:04:28.874  INFO 1796 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 11:04:28.874  INFO 1796 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1114 ms
2021-05-01 11:04:28.953  INFO 1796 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 11:04:29.237  INFO 1796 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 11:04:30.431  INFO 1796 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 11:04:30.514  INFO 1796 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 11:04:30.854  INFO 1796 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 11:04:30.881  INFO 1796 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 11:04:30.889  INFO 1796 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.547 seconds (JVM running for 4.465)
2021-05-01 11:04:40.002  INFO 1796 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 11:04:40.002  INFO 1796 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 11:04:40.003  INFO 1796 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 11:04:40.017  INFO 1796 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 11:04:40.021  INFO 1796 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 11:04:44.675  INFO 1796 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@384924dc, {}]}
2021-05-01 11:04:44.739 DEBUG 1796 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 11:04:44.757 DEBUG 1796 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 11:04:44.774 DEBUG 1796 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 11:04:44.777  INFO 1796 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : main
2021-05-01 11:04:46.572  INFO 1796 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs;jsessionid=19E45CC3804268A1A34D433BE54F39F3', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 11:04:46.611 DEBUG 1796 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 11:04:46.611 DEBUG 1796 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 11:04:46.613 DEBUG 1796 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 11:04:46.618 DEBUG 1796 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 11:04:46.618 DEBUG 1796 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 11:04:46.623 DEBUG 1796 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 11:04:46.631 DEBUG 1796 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 11:04:46.631 DEBUG 1796 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 11:04:46.632 DEBUG 1796 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 11:04:46.633  INFO 1796 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 11:04:51.427  INFO 1796 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/2/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[2, {}]}
2021-05-01 11:04:51.431 DEBUG 1796 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 11:04:51.431 DEBUG 1796 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 11:04:51.435 DEBUG 1796 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 11:04:51.441 DEBUG 1796 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 11:04:51.441 DEBUG 1796 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 11:04:51.443 DEBUG 1796 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 11:04:51.446 DEBUG 1796 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 11:04:51.447 DEBUG 1796 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 2(Long)
2021-05-01 11:04:51.450 DEBUG 1796 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 11:04:51.450  INFO 1796 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 11:05:05.332  INFO 1796 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=2, title=实现前后端分页, content=# 1.环境

后端单表查询利器：[MyBatis-Plus](https://mp.baomidou.com/)

前端表格插件：[Datatables](http://datatables.club/)

MySQL8

SpringBoot

Thymeleaf

# 2.数据库表关系

![table1](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210430194454.png)

# 3.插入测试数据

```sql
insert into academy values (null,'软件学院');
insert into department values (null,'软件工程',1);
insert into building values (null,1);
insert into building values (null,0);
insert into building values (null,0);
insert into building values (null,1);
insert into building values (null,1);
insert into building values (null,1);
insert into dormitory values (101,null,1,1,6,null);
insert into dormitory values (101,null,2,1,6,null);
insert into dormitory values (101,null,3,1,6,null);
insert into dormitory values (101,null,4,1,6,null);
insert into dormitory values (101,null,5,1,6,null);
insert into dormitory values (101,null,6,1,6,null);
insert into dormitory values (304,null,1,1,6,null);
insert into dormitory values (305,null,1,3,6,null);
insert into dormitory values (306,null,1,2,6,null);
insert into dormitory values (304,null,2,2,6,null);
insert into property values (null,'桌子','1',304,50.0,1);
insert into property values (null,'椅子','1',304,30.0,1);
insert into property values (null,'桌子','1',305,50.0,1);
insert into property values (null,'椅子','1',305,30.0,0);
insert into property values (null,'桌子','1',306,50.0,1);
insert into property values (null,'窗帘','1',304,100.0,1);
insert into property values (null,'暖瓶','1',304,40.0,1);
insert into property values (null,'窗帘','1',305,100.0,1);
insert into property values (null,'暖瓶','1',305,40.0,0);
insert into property values (null,'窗帘','1',306,100.0,1);
insert into property values (null,'门','1',306,150.0,1);
insert into property values (null,'灯管','1',306,60.0,1);
insert into property values (null,'簸箕','1',306,9.99,1);
insert into property values (null,'簸箕','2',304,9.99,1);
insert into role  values (null,'管理员');
insert into administrator values ('2018006509','manster','bebd3785c6ff7d5f60573bcbde9281f1',1);
```

# 4.配置分页

1.配置主类

```java
@SpringBootApplication
@MapperScan("cn.tyut.ks.dao")
public class KsApplication {

    public static void main(String[] args) {
        SpringApplication.run(KsApplication.class, args);
    }

}
```

2.配置分页插件

```java
package cn.tyut.ks.config;

import com.baomidou.mybatisplus.annotation.DbType;
import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @Author 孟浩然
 * @Date 2021/3/1
 **/
@Configuration
public class MybatisPlusConfig {
    @Bean
    public MybatisPlusInterceptor mybatisPlusInterceptor() {
        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
        return interceptor;
    }
}
```

3.实体类

```java
package cn.tyut.ks.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * 财产
 *
 * @author
 */
@Data
public class Property implements Serializable {

    private Integer id;

    /**
     * 财产名
     */
    private String name;

    /**
     * 宿舍号
     */
    private Integer did;

    /**
     * 财产价格
     */
    private BigDecimal price;

    /**
     * 财产状态，有正常与故障两种
     */
    private String state;

    private static final long serialVersionUID = 1L;
}
```

# 5.测试分页

```java
package cn.tyut.ks.mapper;

import cn.tyut.ks.dao.PropertyMapper;
import cn.tyut.ks.entity.Property;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @Author manster
 * @Date 2021/3/2
 **/
@SpringBootTest
public class PropertyMapperTest {

    @Autowired
    private PropertyMapper propertyMapper;

    @Test
    public void selectPage(){
        LambdaQueryWrapper<Property> userLambdaQueryWrapper = Wrappers.lambdaQuery();
        userLambdaQueryWrapper.like(Property::getName , "桌");

        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , userLambdaQueryWrapper);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }

}

```

```
总页数： 2
总记录数： 3
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=3, name=桌子, did=305, price=50.00, state=1)
```

查询全部进行分页,就是将 `queryWrapper` 置为 `null`

```java
    @Test
    public void selectPage(){
        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }
```

```
总页数： 6
总记录数： 12
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=2, name=椅子, did=304, price=30.00, state=1)
```

# 6.实现分页

```sequence
    点击->>财产列表: 打开页面
    财产列表->>PropertyController:请求页面信息'/property/list'
    PropertyController-->>财产列表:返回'propertylist'页面
    财产列表->>PropertyController:ajax请求分页信息'/property/page'
    PropertyController->>PropertyService:调用allpage(Long index,Long size)方法
    PropertyService->>PropertyMapper:调用selectPage(Page<Property> page,@Param Wrapper<Property> queryWarpper)
    PropertyMapper-->>PropertyService:返回'IPage<Property> propertyIPage'
    PropertyService-->>PropertyController:返回'IPage<Property> propertyIPage'
    PropertyController-->>财产列表:返回封装好的pageUtil(页面信息类)
```

## 1.html

```html
<table id="mytable" class="table table-bordered table-hover">
<thead>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</thead>
<tbody>

</tbody>
<tfoot>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</tfoot>
</table>



<script>
    var _datatable;
    $(function () {
        var _columns = [
            {"data": "id"},
            {"data": "name"},
            {"data": "did"},
            {
                "data": "price",
                "render": function (data, type, full){
                    return data.toFixed(2);
                }
            },
            {
                "data": "state",
                "render": function (data, type, full) {
                    switch (data) {
                        case '1':
                            return "正常";
                            break;
                        case '0':
                            return "故障";
                            break;
                    }
                }
            },
            {
                "data": function (row, type, val, meta) {
                    var _id = row.id;
                    var editUrl = "/property/edit?id=" + _id;
                    var deleteUrl = "/property/delete?id=" + _id;
                    return '<a href="/property/edit?id=' + _id + '" type="button" class="btn btn-sm btn-primary"><i class="fa fa-edit">修改</i></a>&nbsp;&nbsp;'
                        + '<a href="/property/delete?id=' + _id + '" type="button" class="btn btn-sm btn-danger" ><i class="fa fa-trash">删除</i></button></a>';
                }
            }
        ];
        _datatable = App.initDataTables("/property/page",_columns);
    });

    function search(){
        var did = $("#did").val();
        var param = {
            "did": did
        };
        _datatable.settings()[0].ajax.data = param;
        _datatable.ajax.reload();
    }
</script>
```

## 2.app.js

```javascript
var App = function () {
    /**
     * 初始化DataTables
     */
    var handlerInitDataTables = function (url,columns) {
        var _datatable = $("#mytable").DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "processing": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
            "serverSide": true,
            "ajax": {
                "url": url,
                "type": "post"
            },
            "columns": columns,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
        });
        return _datatable;
    };

    return {
        /**
         * 初始化datatables
         * @param url
         * @param columns
         * @returns {jQuery}
         */
        initDataTables: function (url,columns) {
            return handlerInitDataTables(url,columns);
        },
    }
}();

```

## 3.PropertyController

```java
    /**
     * 查询全部数据
     * @param draw 请求次数
     * @param start 其实数据记录
     * @param length 页面大小
     * @param did 如果有值则为搜索
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    public PageUtil<Property> page(Integer draw, Integer start, Integer length, String did){
        //datatable服务传回的数据为start为第几条，而mybatisplus要的是页码，这里转换一下
        int index = 1;
        if(start > 0){
            index += start/length;
        }
        IPage<Property> propertyIPage;
        if(StringUtils.hasText(did)){
            propertyIPage = propertyService.searchPage(Integer.parseInt(did), index, length);
        }else {
            propertyIPage = propertyService.allPage(index, length);
        }
        pageUtil = new PageUtil();
        pageUtil.setDraw(draw);
        pageUtil.setData(propertyIPage.getRecords());
        pageUtil.setRecordsFiltered(propertyIPage.getTotal());
        pageUtil.setRecordsTotal(propertyIPage.getTotal());
        return pageUtil;
    }
```

## 4.PageUtil

```java
@Data
public class PageUtil<T> {

    private int draw;//请求次数

    private long recordsFiltered; //过滤后总数

    private long recordsTotal; //记录总数

    private List<T> data; //分页查询到的数据
}
```

## 5.PropertyServiceImpl

```java
    /**
     * 实现分页
     * @param index 页码
     * @param size 页面数据量
     * @return
     */
    public IPage<Property> allPage(long index, long size) {
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);

        return propertyIPage;
    }

    /**
     * 实现分页搜索
     * @param did 宿舍号
     * @param index 页码
     * @param size 每页数据量
     * @return
     */
    @Override
    public IPage<Property> searchPage(int did, long index, long size) {
        QueryWrapper<Property> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("did",did);
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , queryWrapper);

        return propertyIPage;
    }
```, firstPicture=https://picsum.photos/id/1073/800/450, flag=原创, views=null, appreciation=true, shareStatement=false, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=面对大量的数据时，我们需要将数据分页，分页又分为前端分页和后端分页，我们需要前后端分页结合起来实现真分页以提高性能。这里我们使用 MyBatis-Plus 和 Datatables 来进行实现前后端分页。, tagIds=8), org.apache.catalina.session.StandardSessionFacade@384924dc, {}]}
2021-05-01 11:05:05.346 DEBUG 1796 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.updateById   : ==>  Preparing: UPDATE t_blog SET title=?, content=?, first_picture=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, user_id=?, description=?, tag_ids=? WHERE id=?
2021-05-01 11:05:05.349 DEBUG 1796 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.updateById   : ==> Parameters: 实现前后端分页(String), # 1.环境

后端单表查询利器：[MyBatis-Plus](https://mp.baomidou.com/)

前端表格插件：[Datatables](http://datatables.club/)

MySQL8

SpringBoot

Thymeleaf

# 2.数据库表关系

![table1](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210430194454.png)

# 3.插入测试数据

```sql
insert into academy values (null,'软件学院');
insert into department values (null,'软件工程',1);
insert into building values (null,1);
insert into building values (null,0);
insert into building values (null,0);
insert into building values (null,1);
insert into building values (null,1);
insert into building values (null,1);
insert into dormitory values (101,null,1,1,6,null);
insert into dormitory values (101,null,2,1,6,null);
insert into dormitory values (101,null,3,1,6,null);
insert into dormitory values (101,null,4,1,6,null);
insert into dormitory values (101,null,5,1,6,null);
insert into dormitory values (101,null,6,1,6,null);
insert into dormitory values (304,null,1,1,6,null);
insert into dormitory values (305,null,1,3,6,null);
insert into dormitory values (306,null,1,2,6,null);
insert into dormitory values (304,null,2,2,6,null);
insert into property values (null,'桌子','1',304,50.0,1);
insert into property values (null,'椅子','1',304,30.0,1);
insert into property values (null,'桌子','1',305,50.0,1);
insert into property values (null,'椅子','1',305,30.0,0);
insert into property values (null,'桌子','1',306,50.0,1);
insert into property values (null,'窗帘','1',304,100.0,1);
insert into property values (null,'暖瓶','1',304,40.0,1);
insert into property values (null,'窗帘','1',305,100.0,1);
insert into property values (null,'暖瓶','1',305,40.0,0);
insert into property values (null,'窗帘','1',306,100.0,1);
insert into property values (null,'门','1',306,150.0,1);
insert into property values (null,'灯管','1',306,60.0,1);
insert into property values (null,'簸箕','1',306,9.99,1);
insert into property values (null,'簸箕','2',304,9.99,1);
insert into role  values (null,'管理员');
insert into administrator values ('2018006509','manster','bebd3785c6ff7d5f60573bcbde9281f1',1);
```

# 4.配置分页

1.配置主类

```java
@SpringBootApplication
@MapperScan("cn.tyut.ks.dao")
public class KsApplication {

    public static void main(String[] args) {
        SpringApplication.run(KsApplication.class, args);
    }

}
```

2.配置分页插件

```java
package cn.tyut.ks.config;

import com.baomidou.mybatisplus.annotation.DbType;
import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @Author 孟浩然
 * @Date 2021/3/1
 **/
@Configuration
public class MybatisPlusConfig {
    @Bean
    public MybatisPlusInterceptor mybatisPlusInterceptor() {
        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
        return interceptor;
    }
}
```

3.实体类

```java
package cn.tyut.ks.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * 财产
 *
 * @author
 */
@Data
public class Property implements Serializable {

    private Integer id;

    /**
     * 财产名
     */
    private String name;

    /**
     * 宿舍号
     */
    private Integer did;

    /**
     * 财产价格
     */
    private BigDecimal price;

    /**
     * 财产状态，有正常与故障两种
     */
    private String state;

    private static final long serialVersionUID = 1L;
}
```

# 5.测试分页

```java
package cn.tyut.ks.mapper;

import cn.tyut.ks.dao.PropertyMapper;
import cn.tyut.ks.entity.Property;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @Author manster
 * @Date 2021/3/2
 **/
@SpringBootTest
public class PropertyMapperTest {

    @Autowired
    private PropertyMapper propertyMapper;

    @Test
    public void selectPage(){
        LambdaQueryWrapper<Property> userLambdaQueryWrapper = Wrappers.lambdaQuery();
        userLambdaQueryWrapper.like(Property::getName , "桌");

        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , userLambdaQueryWrapper);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }

}

```

```
总页数： 2
总记录数： 3
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=3, name=桌子, did=305, price=50.00, state=1)
```

查询全部进行分页,就是将 `queryWrapper` 置为 `null`

```java
    @Test
    public void selectPage(){
        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }
```

```
总页数： 6
总记录数： 12
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=2, name=椅子, did=304, price=30.00, state=1)
```

# 6.实现分页

```sequence
    点击->>财产列表: 打开页面
    财产列表->>PropertyController:请求页面信息'/property/list'
    PropertyController-->>财产列表:返回'propertylist'页面
    财产列表->>PropertyController:ajax请求分页信息'/property/page'
    PropertyController->>PropertyService:调用allpage(Long index,Long size)方法
    PropertyService->>PropertyMapper:调用selectPage(Page<Property> page,@Param Wrapper<Property> queryWarpper)
    PropertyMapper-->>PropertyService:返回'IPage<Property> propertyIPage'
    PropertyService-->>PropertyController:返回'IPage<Property> propertyIPage'
    PropertyController-->>财产列表:返回封装好的pageUtil(页面信息类)
```

## 1.html

```html
<table id="mytable" class="table table-bordered table-hover">
<thead>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</thead>
<tbody>

</tbody>
<tfoot>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</tfoot>
</table>



<script>
    var _datatable;
    $(function () {
        var _columns = [
            {"data": "id"},
            {"data": "name"},
            {"data": "did"},
            {
                "data": "price",
                "render": function (data, type, full){
                    return data.toFixed(2);
                }
            },
            {
                "data": "state",
                "render": function (data, type, full) {
                    switch (data) {
                        case '1':
                            return "正常";
                            break;
                        case '0':
                            return "故障";
                            break;
                    }
                }
            },
            {
                "data": function (row, type, val, meta) {
                    var _id = row.id;
                    var editUrl = "/property/edit?id=" + _id;
                    var deleteUrl = "/property/delete?id=" + _id;
                    return '<a href="/property/edit?id=' + _id + '" type="button" class="btn btn-sm btn-primary"><i class="fa fa-edit">修改</i></a>&nbsp;&nbsp;'
                        + '<a href="/property/delete?id=' + _id + '" type="button" class="btn btn-sm btn-danger" ><i class="fa fa-trash">删除</i></button></a>';
                }
            }
        ];
        _datatable = App.initDataTables("/property/page",_columns);
    });

    function search(){
        var did = $("#did").val();
        var param = {
            "did": did
        };
        _datatable.settings()[0].ajax.data = param;
        _datatable.ajax.reload();
    }
</script>
```

## 2.app.js

```javascript
var App = function () {
    /**
     * 初始化DataTables
     */
    var handlerInitDataTables = function (url,columns) {
        var _datatable = $("#mytable").DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "processing": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
            "serverSide": true,
            "ajax": {
                "url": url,
                "type": "post"
            },
            "columns": columns,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
        });
        return _datatable;
    };

    return {
        /**
         * 初始化datatables
         * @param url
         * @param columns
         * @returns {jQuery}
         */
        initDataTables: function (url,columns) {
            return handlerInitDataTables(url,columns);
        },
    }
}();

```

## 3.PropertyController

```java
    /**
     * 查询全部数据
     * @param draw 请求次数
     * @param start 其实数据记录
     * @param length 页面大小
     * @param did 如果有值则为搜索
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    public PageUtil<Property> page(Integer draw, Integer start, Integer length, String did){
        //datatable服务传回的数据为start为第几条，而mybatisplus要的是页码，这里转换一下
        int index = 1;
        if(start > 0){
            index += start/length;
        }
        IPage<Property> propertyIPage;
        if(StringUtils.hasText(did)){
            propertyIPage = propertyService.searchPage(Integer.parseInt(did), index, length);
        }else {
            propertyIPage = propertyService.allPage(index, length);
        }
        pageUtil = new PageUtil();
        pageUtil.setDraw(draw);
        pageUtil.setData(propertyIPage.getRecords());
        pageUtil.setRecordsFiltered(propertyIPage.getTotal());
        pageUtil.setRecordsTotal(propertyIPage.getTotal());
        return pageUtil;
    }
```

## 4.PageUtil

```java
@Data
public class PageUtil<T> {

    private int draw;//请求次数

    private long recordsFiltered; //过滤后总数

    private long recordsTotal; //记录总数

    private List<T> data; //分页查询到的数据
}
```

## 5.PropertyServiceImpl

```java
    /**
     * 实现分页
     * @param index 页码
     * @param size 页面数据量
     * @return
     */
    public IPage<Property> allPage(long index, long size) {
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);

        return propertyIPage;
    }

    /**
     * 实现分页搜索
     * @param did 宿舍号
     * @param index 页码
     * @param size 每页数据量
     * @return
     */
    @Override
    public IPage<Property> searchPage(int did, long index, long size) {
        QueryWrapper<Property> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("did",did);
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , queryWrapper);

        return propertyIPage;
    }
```(String), https://picsum.photos/id/1073/800/450(String), 原创(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T11:05:05.341(LocalDateTime), 2(Long), 1(Long), 面对大量的数据时，我们需要将数据分页，分页又分为前端分页和后端分页，我们需要前后端分页结合起来实现真分页以提高性能。这里我们使用 MyBatis-Plus 和 Datatables 来进行实现前后端分页。(String), 8(String), 2(Long)
2021-05-01 11:05:05.351 DEBUG 1796 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.updateById   : <==    Updates: 1
2021-05-01 11:05:05.402  INFO 1796 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 11:05:05.415  INFO 1796 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=修改成功}]}
2021-05-01 11:05:05.419 DEBUG 1796 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 11:05:05.419 DEBUG 1796 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 11:05:05.420 DEBUG 1796 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 11:05:05.420 DEBUG 1796 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 11:05:05.421 DEBUG 1796 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 11:05:05.423 DEBUG 1796 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 11:05:05.426 DEBUG 1796 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 11:05:05.426 DEBUG 1796 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 11:05:05.427 DEBUG 1796 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 11:05:05.428  INFO 1796 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 11:08:12.712  INFO 9944 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 9944 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 11:08:12.714 DEBUG 9944 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 11:08:12.714  INFO 9944 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 11:08:12.752  INFO 9944 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 11:08:12.752  INFO 9944 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 11:08:13.852  INFO 9944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 11:08:13.858  INFO 9944 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 11:08:13.858  INFO 9944 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 11:08:13.860  INFO 9944 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 11:08:13.860  INFO 9944 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 11:08:13.860  INFO 9944 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 11:08:13.862  INFO 9944 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 11:08:13.930  INFO 9944 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 11:08:13.931  INFO 9944 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1178 ms
2021-05-01 11:08:13.998  INFO 9944 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 11:08:14.215  INFO 9944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 11:08:15.190  INFO 9944 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 11:08:15.261  INFO 9944 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 11:08:15.573  INFO 9944 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 11:08:15.624  INFO 9944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 11:08:15.631  INFO 9944 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.288 seconds (JVM running for 4.481)
2021-05-01 11:08:21.719  INFO 9944 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 11:08:21.719  INFO 9944 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 11:08:21.720  INFO 9944 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 11:08:21.735  INFO 9944 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[]}
2021-05-01 11:08:21.738  INFO 9944 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 11:09:17.731  INFO 3012 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 3012 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 11:09:17.733 DEBUG 3012 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 11:09:17.733  INFO 3012 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 11:09:17.776  INFO 3012 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 11:09:17.776  INFO 3012 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 11:09:18.849  INFO 3012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 11:09:18.856  INFO 3012 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 11:09:18.856  INFO 3012 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 11:09:18.858  INFO 3012 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 11:09:18.858  INFO 3012 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 11:09:18.858  INFO 3012 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 11:09:18.861  INFO 3012 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 11:09:18.932  INFO 3012 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 11:09:18.933  INFO 3012 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1156 ms
2021-05-01 11:09:19.004  INFO 3012 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 11:09:19.223  INFO 3012 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 11:09:20.315  INFO 3012 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 11:09:20.397  INFO 3012 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 11:09:20.695  INFO 3012 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 11:09:20.722  INFO 3012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 11:09:20.730  INFO 3012 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.399 seconds (JVM running for 4.294)
2021-05-01 11:09:26.607  INFO 3012 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 11:09:26.607  INFO 3012 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 11:09:26.608  INFO 3012 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 11:09:26.623  INFO 3012 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 11:09:26.626  INFO 3012 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 11:09:30.913  INFO 3012 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@53f5ab28, {}]}
2021-05-01 11:09:30.982 DEBUG 3012 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 11:09:31.000 DEBUG 3012 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 11:09:31.018 DEBUG 3012 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 11:09:31.021  INFO 3012 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : main
2021-05-01 16:45:07.296  INFO 14396 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 14396 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 16:45:07.299 DEBUG 14396 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 16:45:07.299  INFO 14396 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 16:45:17.691  INFO 6844 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 6844 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 16:45:17.693 DEBUG 6844 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 16:45:17.693  INFO 6844 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 16:45:17.730  INFO 6844 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 16:45:17.730  INFO 6844 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 16:45:18.723  INFO 6844 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 16:45:18.729  INFO 6844 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 16:45:18.730  INFO 6844 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 16:45:18.731  INFO 6844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 16:45:18.731  INFO 6844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 16:45:18.731  INFO 6844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 16:45:18.734  INFO 6844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 16:45:18.805  INFO 6844 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 16:45:18.805  INFO 6844 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1074 ms
2021-05-01 16:45:18.861  INFO 6844 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 16:45:19.084  INFO 6844 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 16:45:20.133  INFO 6844 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 16:45:20.209  INFO 6844 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 16:45:20.528  INFO 6844 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 16:45:20.601  INFO 6844 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 16:45:20.609  INFO 6844 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.304 seconds (JVM running for 4.171)
2021-05-01 16:45:24.186  INFO 6844 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 16:45:24.186  INFO 6844 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 16:45:24.187  INFO 6844 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 16:45:24.217  INFO 6844 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 16:45:24.231 ERROR 6844 --- [http-nio-8888-exec-1] c.m.handler.ControllerExceptionHandler   : Request URL : http://localhost:8888/, Exception : {}

java.lang.IllegalArgumentException: Result Maps collection does not contain value for com.manster.mapper.TagMapper.type
	at com.baomidou.mybatisplus.core.MybatisConfiguration$StrictMap.get(MybatisConfiguration.java:448)
	at com.baomidou.mybatisplus.core.MybatisConfiguration.getResultMap(MybatisConfiguration.java:270)
	at org.apache.ibatis.builder.MapperBuilderAssistant.getStatementResultMaps(MapperBuilderAssistant.java:394)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(MapperBuilderAssistant.java:285)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:113)
	at org.apache.ibatis.session.Configuration.lambda$buildAllStatements$2(Configuration.java:882)
	at java.util.Collection.removeIf(Collection.java:414)
	at org.apache.ibatis.session.Configuration.buildAllStatements(Configuration.java:881)
	at com.baomidou.mybatisplus.core.MybatisConfiguration.hasStatement(MybatisConfiguration.java:336)
	at org.apache.ibatis.session.Configuration.hasStatement(Configuration.java:853)
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.resolveMappedStatement(MapperMethod.java:257)
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:227)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.<init>(MybatisMapperMethod.java:51)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.lambda$cachedInvoker$0(MybatisMapperProxy.java:111)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at com.baomidou.mybatisplus.core.toolkit.CollectionUtils.computeIfAbsent(CollectionUtils.java:117)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.cachedInvoker(MybatisMapperProxy.java:98)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy74.listBlog(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy75.listBlog(Unknown Source)
	at com.manster.service.impl.BlogServiceImpl.listBlog(BlogServiceImpl.java:23)
	at com.manster.controller.IndexController.index(IndexController.java:34)
	at com.manster.controller.IndexController$$FastClassBySpringCGLIB$$f94861af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:49)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.manster.controller.IndexController$$EnhancerBySpringCGLIB$$41883985.index(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 16:45:24.233  WARN 6844 --- [http-nio-8888-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Result Maps collection does not contain value for com.manster.mapper.TagMapper.type]
2021-05-01 16:47:03.514  INFO 2976 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 2976 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 16:47:03.516 DEBUG 2976 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 16:47:03.516  INFO 2976 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 16:47:03.555  INFO 2976 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 16:47:03.556  INFO 2976 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 16:47:04.606  INFO 2976 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 16:47:04.614  INFO 2976 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 16:47:04.614  INFO 2976 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 16:47:04.616  INFO 2976 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 16:47:04.616  INFO 2976 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 16:47:04.616  INFO 2976 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 16:47:04.619  INFO 2976 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 16:47:04.691  INFO 2976 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 16:47:04.691  INFO 2976 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1134 ms
2021-05-01 16:47:04.749  INFO 2976 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 16:47:04.966  INFO 2976 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 16:47:06.014  INFO 2976 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 16:47:06.091  INFO 2976 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 16:47:06.402  INFO 2976 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 16:47:06.468  INFO 2976 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 16:47:06.476  INFO 2976 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.339 seconds (JVM running for 4.236)
2021-05-01 16:47:09.096  INFO 2976 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 16:47:09.097  INFO 2976 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 16:47:09.098  INFO 2976 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 16:47:09.124  INFO 2976 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 16:47:09.151 DEBUG 2976 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 16:47:09.170 DEBUG 2976 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 16:47:09.191 DEBUG 2976 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 16:47:09.197 DEBUG 2976 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t, t_blog b where t.id = b.type_id
2021-05-01 16:47:09.198 DEBUG 2976 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 16:47:09.199 DEBUG 2976 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 2
2021-05-01 16:47:09.201  INFO 2976 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 16:47:09.574 ERROR 2976 --- [http-nio-8888-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 16:47:09.577 ERROR 2976 --- [http-nio-8888-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 16:49:27.379  INFO 8664 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 8664 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 16:49:27.381 DEBUG 8664 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 16:49:27.381  INFO 8664 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 16:49:27.417  INFO 8664 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 16:49:27.417  INFO 8664 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 16:49:28.420  INFO 8664 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 16:49:28.426  INFO 8664 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 16:49:28.426  INFO 8664 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 16:49:28.428  INFO 8664 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 16:49:28.428  INFO 8664 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 16:49:28.428  INFO 8664 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 16:49:28.431  INFO 8664 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 16:49:28.503  INFO 8664 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 16:49:28.504  INFO 8664 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1087 ms
2021-05-01 16:49:28.559  INFO 8664 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 16:49:28.777  INFO 8664 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 16:49:29.806  INFO 8664 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 16:49:29.879  INFO 8664 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 16:49:30.190  INFO 8664 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 16:49:30.253  INFO 8664 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 16:49:30.261  INFO 8664 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.24 seconds (JVM running for 4.148)
2021-05-01 16:49:33.255  INFO 8664 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 16:49:33.255  INFO 8664 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 16:49:33.256  INFO 8664 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2021-05-01 16:49:33.285  INFO 8664 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 16:49:33.315 DEBUG 8664 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 16:49:33.340 DEBUG 8664 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 16:49:33.363 DEBUG 8664 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 16:49:33.369 DEBUG 8664 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 16:49:33.369 DEBUG 8664 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 16:49:33.372 DEBUG 8664 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 16:49:33.372  INFO 8664 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 16:49:33.683 ERROR 8664 --- [http-nio-8888-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 16:49:33.685 ERROR 8664 --- [http-nio-8888-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 16:54:13.248  INFO 9616 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 9616 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 16:54:13.250 DEBUG 9616 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 16:54:13.251  INFO 9616 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 16:54:13.289  INFO 9616 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 16:54:13.289  INFO 9616 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 16:54:14.295  INFO 9616 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 16:54:14.303  INFO 9616 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 16:54:14.303  INFO 9616 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 16:54:14.305  INFO 9616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 16:54:14.305  INFO 9616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 16:54:14.305  INFO 9616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 16:54:14.308  INFO 9616 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 16:54:14.382  INFO 9616 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 16:54:14.382  INFO 9616 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1092 ms
2021-05-01 16:54:14.509  INFO 9616 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 16:54:14.749  INFO 9616 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 16:54:15.885  INFO 9616 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 16:54:15.988  INFO 9616 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 16:54:16.389  INFO 9616 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 16:54:16.500  INFO 9616 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 16:54:16.511  INFO 9616 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.724 seconds (JVM running for 5.544)
2021-05-01 16:54:19.819  INFO 9616 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 16:54:19.819  INFO 9616 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 16:54:19.820  INFO 9616 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 16:54:19.852  INFO 9616 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 16:54:19.882 DEBUG 9616 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 16:54:19.900 DEBUG 9616 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 16:54:19.922 DEBUG 9616 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 16:54:42.087 DEBUG 9616 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 16:54:42.088 DEBUG 9616 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 16:54:42.111 DEBUG 9616 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 16:55:41.722  INFO 9616 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 16:55:42.021 ERROR 9616 --- [http-nio-8888-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 16:55:42.180  INFO 9616 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-05-01 16:55:42.180  INFO 9616 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-05-01 16:55:42.186  INFO 9616 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-05-01 16:58:24.977  INFO 12592 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 12592 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 16:58:24.979 DEBUG 12592 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 16:58:24.979  INFO 12592 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 16:58:25.015  INFO 12592 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 16:58:25.015  INFO 12592 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 16:58:25.995  INFO 12592 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 16:58:26.002  INFO 12592 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 16:58:26.002  INFO 12592 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 16:58:26.004  INFO 12592 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 16:58:26.004  INFO 12592 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 16:58:26.004  INFO 12592 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 16:58:26.006  INFO 12592 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 16:58:26.076  INFO 12592 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 16:58:26.076  INFO 12592 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1061 ms
2021-05-01 16:58:26.133  INFO 12592 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 16:58:26.363  INFO 12592 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 16:58:27.513  INFO 12592 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 16:58:27.590  INFO 12592 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 16:58:27.919  INFO 12592 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 16:58:27.978  INFO 12592 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 16:58:27.987  INFO 12592 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.391 seconds (JVM running for 4.316)
2021-05-01 16:58:30.437  INFO 12592 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 16:58:30.437  INFO 12592 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 16:58:30.438  INFO 12592 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 16:58:30.458  INFO 12592 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 16:58:30.480 DEBUG 12592 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 16:58:30.494 DEBUG 12592 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 16:58:30.511 DEBUG 12592 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 16:58:30.516 DEBUG 12592 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 16:58:30.516 DEBUG 12592 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 16:58:30.518 DEBUG 12592 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 16:58:30.518  INFO 12592 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 16:58:30.762 ERROR 12592 --- [http-nio-8888-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 16:58:30.765 ERROR 12592 --- [http-nio-8888-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:01:01.633  INFO 12592 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:01:01.638 DEBUG 12592 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:01:01.638 DEBUG 12592 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:01:01.640 DEBUG 12592 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:01:01.644 DEBUG 12592 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:01:01.644 DEBUG 12592 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:01:01.649 DEBUG 12592 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:01:01.650  INFO 12592 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:01:01.675 ERROR 12592 --- [http-nio-8888-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:01:01.676 ERROR 12592 --- [http-nio-8888-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:01:02.451  INFO 12592 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:01:02.454 DEBUG 12592 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:01:02.455 DEBUG 12592 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:01:02.457 DEBUG 12592 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:01:02.460 DEBUG 12592 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:01:02.460 DEBUG 12592 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:01:02.462 DEBUG 12592 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:01:02.462  INFO 12592 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:01:02.470 ERROR 12592 --- [http-nio-8888-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-4] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:01:02.471 ERROR 12592 --- [http-nio-8888-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:01:31.941  INFO 12592 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:01:31.946 DEBUG 12592 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:01:31.947 DEBUG 12592 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:01:31.949 DEBUG 12592 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:01:31.955 DEBUG 12592 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:01:31.955 DEBUG 12592 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:01:31.957 DEBUG 12592 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:01:31.958  INFO 12592 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:01:31.989 ERROR 12592 --- [http-nio-8888-exec-2] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-2] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:01:31.989 ERROR 12592 --- [http-nio-8888-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:06:32.782  INFO 12592 --- [http-nio-8888-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:06:32.786 DEBUG 12592 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:06:32.787 DEBUG 12592 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:06:32.789 DEBUG 12592 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:06:32.792 DEBUG 12592 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:06:32.793 DEBUG 12592 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:06:32.794 DEBUG 12592 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:06:32.795  INFO 12592 --- [http-nio-8888-exec-10] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:06:32.817 ERROR 12592 --- [http-nio-8888-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-10] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:06:32.818 ERROR 12592 --- [http-nio-8888-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:07:09.992  INFO 12592 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:07:09.999 DEBUG 12592 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:07:10.000 DEBUG 12592 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:07:10.003 DEBUG 12592 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:07:10.007 DEBUG 12592 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:07:10.007 DEBUG 12592 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:07:10.009 DEBUG 12592 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:07:10.009  INFO 12592 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:07:10.016 ERROR 12592 --- [http-nio-8888-exec-8] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-8] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:07:10.017 ERROR 12592 --- [http-nio-8888-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:08:45.599  INFO 868 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 868 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:08:45.602 DEBUG 868 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:08:45.602  INFO 868 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 17:08:45.649  INFO 868 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:08:45.650  INFO 868 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:08:46.718  INFO 868 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 17:08:46.724  INFO 868 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:08:46.724  INFO 868 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:08:46.726  INFO 868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:08:46.726  INFO 868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:08:46.726  INFO 868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:08:46.729  INFO 868 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:08:46.802  INFO 868 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:08:46.802  INFO 868 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1152 ms
2021-05-01 17:08:46.860  INFO 868 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:08:47.079  INFO 868 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:08:48.127  INFO 868 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:08:48.201  INFO 868 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:08:48.511  INFO 868 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 17:08:48.570  INFO 868 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 17:08:48.578  INFO 868 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.369 seconds (JVM running for 4.289)
2021-05-01 17:08:50.044  INFO 868 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:08:50.045  INFO 868 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:08:50.046  INFO 868 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 17:08:50.077  INFO 868 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:08:50.110 DEBUG 868 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:08:50.129 DEBUG 868 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:08:50.148 DEBUG 868 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:08:50.155 DEBUG 868 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:08:50.156 DEBUG 868 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:08:50.159 DEBUG 868 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:08:50.160  INFO 868 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:08:50.431 ERROR 868 --- [http-nio-8888-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:08:50.434 ERROR 868 --- [http-nio-8888-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:09:01.065  INFO 868 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:09:01.069 DEBUG 868 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:09:01.070 DEBUG 868 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:09:01.072 DEBUG 868 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:09:01.077 DEBUG 868 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:09:01.077 DEBUG 868 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:09:01.081 DEBUG 868 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:09:01.082  INFO 868 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:09:01.091 ERROR 868 --- [http-nio-8888-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:09:01.092 ERROR 868 --- [http-nio-8888-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:18:15.601  INFO 3148 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 3148 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:18:15.603 DEBUG 3148 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:18:15.603  INFO 3148 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 17:18:15.639  INFO 3148 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:18:15.639  INFO 3148 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:18:16.626  INFO 3148 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 17:18:16.632  INFO 3148 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:18:16.632  INFO 3148 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:18:16.633  INFO 3148 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:18:16.634  INFO 3148 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:18:16.634  INFO 3148 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:18:16.636  INFO 3148 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:18:16.710  INFO 3148 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:18:16.710  INFO 3148 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1070 ms
2021-05-01 17:18:16.769  INFO 3148 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:18:16.989  INFO 3148 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:18:18.088  INFO 3148 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:18:18.163  INFO 3148 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:18:18.475  INFO 3148 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 17:18:18.543  INFO 3148 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 17:18:18.551  INFO 3148 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.414 seconds (JVM running for 4.297)
2021-05-01 17:18:20.394  INFO 3148 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:18:20.394  INFO 3148 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:18:20.395  INFO 3148 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 17:18:20.418  INFO 3148 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:18:20.445 DEBUG 3148 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:18:20.461 DEBUG 3148 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:18:20.480 DEBUG 3148 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:18:20.485 DEBUG 3148 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:18:20.485 DEBUG 3148 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:18:20.487 DEBUG 3148 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:18:20.488  INFO 3148 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:18:20.761 ERROR 3148 --- [http-nio-8888-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:18:20.763 ERROR 3148 --- [http-nio-8888-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:21:33.405  INFO 988 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 988 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:21:33.407 DEBUG 988 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:21:33.407  INFO 988 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 17:21:33.452  INFO 988 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:21:33.452  INFO 988 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:21:34.482  INFO 988 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 17:21:34.489  INFO 988 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:21:34.489  INFO 988 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:21:34.490  INFO 988 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:21:34.491  INFO 988 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:21:34.491  INFO 988 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:21:34.494  INFO 988 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:21:34.569  INFO 988 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:21:34.569  INFO 988 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1116 ms
2021-05-01 17:21:34.631  INFO 988 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:21:34.854  INFO 988 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:21:35.885  INFO 988 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:21:35.961  INFO 988 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:21:36.272  INFO 988 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 17:21:36.336  INFO 988 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 17:21:36.343  INFO 988 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.366 seconds (JVM running for 4.264)
2021-05-01 17:21:38.105  INFO 988 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:21:38.105  INFO 988 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:21:38.106  INFO 988 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 17:21:38.131  INFO 988 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:21:38.157 DEBUG 988 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:21:38.174 DEBUG 988 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:21:38.192 DEBUG 988 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:21:38.197 DEBUG 988 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:21:38.197 DEBUG 988 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:21:38.199 DEBUG 988 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:21:38.200  INFO 988 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:21:38.471 ERROR 988 --- [http-nio-8888-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:21:38.473 ERROR 988 --- [http-nio-8888-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:22:18.056  INFO 8832 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 8832 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:22:18.058 DEBUG 8832 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:22:18.059  INFO 8832 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 17:22:18.095  INFO 8832 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:22:18.095  INFO 8832 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:22:19.130  INFO 8832 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 17:22:19.136  INFO 8832 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:22:19.136  INFO 8832 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:22:19.138  INFO 8832 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:22:19.138  INFO 8832 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:22:19.138  INFO 8832 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:22:19.140  INFO 8832 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:22:19.217  INFO 8832 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:22:19.217  INFO 8832 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1120 ms
2021-05-01 17:22:19.273  INFO 8832 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:22:19.493  INFO 8832 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:22:20.541  INFO 8832 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:22:20.617  INFO 8832 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:22:20.933  INFO 8832 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 17:22:20.998  INFO 8832 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 17:22:21.006  INFO 8832 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.482 seconds (JVM running for 4.576)
2021-05-01 17:22:55.472  INFO 8832 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:22:55.472  INFO 8832 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:22:55.473  INFO 8832 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 17:22:55.501  INFO 8832 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:22:55.527 DEBUG 8832 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:22:55.543 DEBUG 8832 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:22:55.562 DEBUG 8832 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:22:55.567 DEBUG 8832 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:22:55.567 DEBUG 8832 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:22:55.570 DEBUG 8832 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:22:55.570  INFO 8832 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:24:15.350  INFO 9756 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 9756 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:24:15.352 DEBUG 9756 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:24:15.352  INFO 9756 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 17:24:15.391  INFO 9756 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:24:15.392  INFO 9756 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:24:16.375  INFO 9756 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 17:24:16.381  INFO 9756 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:24:16.382  INFO 9756 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:24:16.383  INFO 9756 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:24:16.383  INFO 9756 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:24:16.383  INFO 9756 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:24:16.386  INFO 9756 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:24:16.459  INFO 9756 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:24:16.459  INFO 9756 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1066 ms
2021-05-01 17:24:16.526  INFO 9756 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:24:16.751  INFO 9756 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:24:17.803  INFO 9756 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:24:17.883  INFO 9756 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:24:18.202  INFO 9756 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 17:24:18.265  INFO 9756 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 17:24:18.273  INFO 9756 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.31 seconds (JVM running for 4.193)
2021-05-01 17:24:24.151  INFO 9756 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:24:24.151  INFO 9756 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:24:24.152  INFO 9756 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 17:24:24.179  INFO 9756 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:24:24.205 DEBUG 9756 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:24:24.219 DEBUG 9756 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:24:24.236 DEBUG 9756 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:24:24.241 DEBUG 9756 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:24:24.242 DEBUG 9756 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:24:24.244 DEBUG 9756 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:24:24.245  INFO 9756 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:24:24.510 ERROR 9756 --- [http-nio-8888-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-1] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:24:24.513 ERROR 9756 --- [http-nio-8888-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:24:38.622  INFO 9756 --- [http-nio-8888-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:24:38.626 DEBUG 9756 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:24:38.626 DEBUG 9756 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:24:38.629 DEBUG 9756 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:24:38.632 DEBUG 9756 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:24:38.632 DEBUG 9756 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:24:38.636 DEBUG 9756 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:24:38.637  INFO 9756 --- [http-nio-8888-exec-7] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:25:25.061  INFO 9756 --- [http-nio-8888-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:25:25.067 DEBUG 9756 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:25:25.068 DEBUG 9756 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:25:25.070 DEBUG 9756 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:25:25.077 DEBUG 9756 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:25:25.077 DEBUG 9756 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:25:25.083 DEBUG 9756 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:25:25.084  INFO 9756 --- [http-nio-8888-exec-9] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:26:33.903  INFO 9756 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:26:33.908 DEBUG 9756 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:26:33.908 DEBUG 9756 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:26:33.913 DEBUG 9756 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:26:33.916 DEBUG 9756 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:26:33.917 DEBUG 9756 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:26:33.920 DEBUG 9756 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:26:33.920  INFO 9756 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:26:33.946 ERROR 9756 --- [http-nio-8888-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8888-exec-3] Exception processing template "index": An error happened during template parsing (template: "class path resource [templates/index.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "#dates.format(blog.updateTime, 'yyyy-MM-DD')" (template: "index" - line 73, col 51)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 75 common frames omitted

2021-05-01 17:26:33.948 ERROR 9756 --- [http-nio-8888-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1004E: Method call: Method format(java.time.LocalDateTime,java.lang.String) cannot be found on type org.thymeleaf.expression.Dates
	at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:226)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:135)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:55)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:387)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-05-01 17:27:49.979  INFO 9756 --- [http-nio-8888-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:27:49.983 DEBUG 9756 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:27:49.983 DEBUG 9756 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:27:49.985 DEBUG 9756 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:27:49.988 DEBUG 9756 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:27:49.989 DEBUG 9756 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:27:49.990 DEBUG 9756 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:27:49.990  INFO 9756 --- [http-nio-8888-exec-10] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:29:34.823  INFO 1372 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 1372 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:29:34.826 DEBUG 1372 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:29:34.826  INFO 1372 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 17:29:34.871  INFO 1372 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:29:34.871  INFO 1372 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:29:36.045  INFO 1372 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 17:29:36.052  INFO 1372 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:29:36.053  INFO 1372 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:29:36.054  INFO 1372 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:29:36.055  INFO 1372 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:29:36.055  INFO 1372 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:29:36.058  INFO 1372 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:29:36.140  INFO 1372 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:29:36.140  INFO 1372 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1268 ms
2021-05-01 17:29:36.231  INFO 1372 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:29:36.476  INFO 1372 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:29:37.613  INFO 1372 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:29:37.712  INFO 1372 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:29:38.048  INFO 1372 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 17:29:38.128  INFO 1372 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 17:29:38.137  INFO 1372 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.794 seconds (JVM running for 4.928)
2021-05-01 17:30:03.683  INFO 1372 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:30:03.684  INFO 1372 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:30:03.685  INFO 1372 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 17:30:03.718  INFO 1372 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:30:03.751 DEBUG 1372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture firstPicture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:30:03.771 DEBUG 1372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:30:03.793 DEBUG 1372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:30:09.914 DEBUG 1372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:30:09.915 DEBUG 1372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:30:09.926 DEBUG 1372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:31:13.040  INFO 1372 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:31:13.623  INFO 1372 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-05-01 17:31:13.623  INFO 1372 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-05-01 17:31:13.627  INFO 1372 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-05-01 17:32:38.550  INFO 15604 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 15604 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:32:38.552 DEBUG 15604 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:32:38.552  INFO 15604 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 17:32:38.589  INFO 15604 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:32:38.589  INFO 15604 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:32:39.588  INFO 15604 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 17:32:39.594  INFO 15604 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:32:39.594  INFO 15604 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:32:39.595  INFO 15604 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:32:39.596  INFO 15604 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:32:39.596  INFO 15604 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:32:39.598  INFO 15604 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:32:39.682  INFO 15604 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:32:39.683  INFO 15604 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1093 ms
2021-05-01 17:32:39.745  INFO 15604 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:32:39.972  INFO 15604 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:32:41.010  INFO 15604 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:32:41.085  INFO 15604 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:32:41.395  INFO 15604 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 17:32:41.457  INFO 15604 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 17:32:41.465  INFO 15604 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.284 seconds (JVM running for 4.206)
2021-05-01 17:32:45.609  INFO 15604 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:32:45.609  INFO 15604 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:32:45.610  INFO 15604 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2021-05-01 17:32:45.631  INFO 15604 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:32:45.653 DEBUG 15604 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:32:45.668 DEBUG 15604 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:32:45.685 DEBUG 15604 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:32:45.689 DEBUG 15604 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:32:45.690 DEBUG 15604 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:32:45.692 DEBUG 15604 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:32:45.693  INFO 15604 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:33:36.850  INFO 15604 --- [http-nio-8888-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:33:36.854 DEBUG 15604 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:33:36.855 DEBUG 15604 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:33:36.857 DEBUG 15604 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:33:36.860 DEBUG 15604 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:33:36.862 DEBUG 15604 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:33:36.865 DEBUG 15604 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:33:36.866  INFO 15604 --- [http-nio-8888-exec-6] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:37:16.922  INFO 17096 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 17096 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:37:16.924 DEBUG 17096 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:37:16.925  INFO 17096 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 17:37:16.965  INFO 17096 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:37:16.965  INFO 17096 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:37:18.052  INFO 17096 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 17:37:18.059  INFO 17096 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:37:18.059  INFO 17096 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:37:18.061  INFO 17096 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:37:18.061  INFO 17096 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:37:18.061  INFO 17096 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:37:18.064  INFO 17096 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:37:18.137  INFO 17096 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:37:18.138  INFO 17096 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1172 ms
2021-05-01 17:37:18.198  INFO 17096 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:37:18.419  INFO 17096 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:37:19.459  INFO 17096 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:37:19.536  INFO 17096 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:37:19.855  INFO 17096 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 17:37:19.926  INFO 17096 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 17:37:19.933  INFO 17096 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.383 seconds (JVM running for 4.315)
2021-05-01 17:37:22.457  INFO 17096 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:37:22.457  INFO 17096 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:37:22.458  INFO 17096 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 17:37:22.489  INFO 17096 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 17:37:22.519 DEBUG 17096 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 17:37:22.538 DEBUG 17096 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 17:37:22.560 DEBUG 17096 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:37:22.580 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 17:37:22.581 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 17:37:22.584 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 17:37:22.589 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 17:37:22.589 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 17:37:22.593 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 17:37:22.593  INFO 17096 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 17:38:36.889  INFO 6852 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 6852 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 17:38:36.891 DEBUG 6852 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 17:38:36.891  INFO 6852 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 17:38:36.927  INFO 6852 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 17:38:36.927  INFO 6852 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 17:38:37.940  INFO 6852 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 17:38:37.947  INFO 6852 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 17:38:37.947  INFO 6852 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 17:38:37.949  INFO 6852 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 17:38:37.949  INFO 6852 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 17:38:37.949  INFO 6852 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 17:38:37.951  INFO 6852 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 17:38:38.025  INFO 6852 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 17:38:38.025  INFO 6852 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1097 ms
2021-05-01 17:38:38.097  INFO 6852 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 17:38:38.315  INFO 6852 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 17:38:39.449  INFO 6852 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 17:38:39.525  INFO 6852 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 17:38:39.835  WARN 6852 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2021-05-01 17:38:39.862  INFO 6852 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 17:38:39.870  INFO 6852 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.389 seconds (JVM running for 4.285)
2021-05-01 17:38:46.822  INFO 6852 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 17:38:46.822  INFO 6852 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 17:38:46.823  INFO 6852 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 17:38:46.840  INFO 6852 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 17:38:46.844  INFO 6852 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 17:38:51.383  INFO 6852 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@80d4e86, {}]}
2021-05-01 17:38:51.450 DEBUG 6852 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 17:38:51.482 DEBUG 6852 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 17:38:51.500 DEBUG 6852 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 17:38:51.502  INFO 6852 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : main
2021-05-01 17:38:54.278  INFO 6852 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs;jsessionid=7B6D751EB054BE4E1CA2CFB80090DC47', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 17:38:54.314 DEBUG 6852 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 17:38:54.314 DEBUG 6852 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 17:38:54.315 DEBUG 6852 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 17:38:54.321 DEBUG 6852 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 17:38:54.321 DEBUG 6852 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 17:38:54.326 DEBUG 6852 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 17:38:54.333 DEBUG 6852 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 17:38:54.334 DEBUG 6852 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 17:38:54.335 DEBUG 6852 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 17:38:54.335  INFO 6852 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 17:39:00.124  INFO 6852 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.input', args=[{}]}
2021-05-01 17:39:00.130 DEBUG 6852 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 17:39:00.131 DEBUG 6852 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 17:39:00.133 DEBUG 6852 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 17:39:00.140 DEBUG 6852 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 17:39:00.140 DEBUG 6852 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 17:39:00.143 DEBUG 6852 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 17:39:00.144  INFO 6852 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 18:00:50.843  INFO 6852 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=null, title=java多线程, content=在进行多线程的内容之前我们需要首先了解涉及操作系统的几个知识点。



## 一、程序、进程、线程



### 1. 程序(program)

概念：是为完成特定任务、用某种语言编写的一组指令的集合。即指一段静态的代码。



### 2. 进程(process)

概念：程序的一次执行过程，或是正在运行的一个程序。 说明：进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域



### 3. 线程(thread)

概念：进程可进一步细化为线程，是一个程序内部的一条执行路径。 说明：线程作为调度和执行的单位，每个线程拥独立的运行栈和程序计数器(pc)，线程切换的开销小。

![image-20200411195447115](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195852.png)

**内存结构：**

![image-20200411195509394](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195855.png)

> 进程可以细化为多个线程。 每个线程，拥有自己独立的：栈、程序计数器 多个线程，共享同一个进程中的结构：方法区、堆。



## 二、并行与并发



### 1. 单核CPU与多核CPU

- 单核CPU，其实是一种假的多线程，因为在一个时间单元内，也只能执行一个线程的任务。涉及到CPU处理线程的方式，CPU在单位时间（也就是说一个时间片内）内只能处理一个线程，于是就将其他的线程设置为阻塞状态，加入到阻塞队列中，等到处理完成当前线程后从就绪队列中取出新的线程进行处理，由于切换和处理时间很快用户感知不到于是用户便认为CPU在同一时间内处理多个线程。
- 多核CPU，才能更好的发挥多线程的效率。（现在的服务器都是多核的）
- 一个Java应用程序java.exe，其实至少三个线程：main()主线程，gc()垃圾回收线程，异常处理线程。当然如果发生异常，会影响主线程。



### 2. 并行与并发的理解

并行：多个CPU同时执行多个任务。比如：多个人同时做不同的事。

并发：一个CPU(采用时间片)同时执行多个任务。比如：秒杀、多个人做同一件事



## 为什么要使用多线程？

当我们在进行商品抢购的时候，在支付按钮上总是有个计时器在进行倒计时，但是我们此时仍然可以进行商品信息的查看，这个计时器和我们浏览商品信息的线程是同时进行的，这样也就实现了抢购场景，增加了用户的体验。



### 多线程程序的优点：

1. 提高应用程序的响应。对图形化界面更有意义，可增强用户体验。
2. 提高计算机系统CPU的利用率。
3. 改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。



### 应用的场景

1. 程序需要同时执行两个或多个任务。
2. 程序需要实现一些需要等待的任务时，如用户输入、文件读写操作、网络操作、搜索等
3. 需要一些后台运行的程序时



## 三、Thread类

Java语言的JVM允许程序运行多个线程，它通过 java. lang.Thread类来体现



### 1. Thread类的特性

每个线程都是通过某个特定 Thread对象的run（方法来完成操作的，经常把run()方法的主体称为线程体 通过该 Thread对象的 start（方法来启动这个线程，而非直接调用run



### 2. 构造器：

- Thread()：创建新的 Thread对象
- Thread（String threadName）：创建线程并指定线程实例名
- Thread（Runnable target）：指定创建线程的目标对象，它实现了 Runnable接口中的run方法
- Thread（Runnable target， String name）：创建新的 Thread对象



### 3. 创建多线程的两种方式

3.1. 方式一继承Thread类的方式：

1. 创建一个继承于Thread类的子类
2. 重写Thread类的run() --> 将此线程执行的操作声明在run()中
3. 创建Thread类的子类的对象
4. 通过此对象调用start()：①启动当前线程 ② 调用当前线程的run()

**注意点：**

1. 我们启动一个线程，必须调用start()，不能调用run()的方式启动线程。 如果再启动一个线程，必须重新创建一个Thread子类的对象，调用此对象的start().（注意后面的点）
2. 如果自己手动调用run()方法，那么就只是普通方法，没有启动多线程模式
3. run（方法由JVM调用，什么时候调用，执行的过程控制都有操作系统的CPU调度决定。
4. 想要启动多线程，必须调用 start方法。
5. 一个线程对象只能调用一次 start()方法启动，如果重复调用了，则将抛出异常“lllegalThreadStateException”.

**代码示例**

```java
//1.继承Thread类
class MyThread extends Thread {
    public MyThread() {
    }

    //2.重run方法
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            if (i % 2 == 0) {
                System.out.println(i);
            }
        }
    }
}

public class ThreadTest {
    public static void main(String[] args) {
//3.新建Thread对象
        MyThread myThread = new MyThread();
        //4.调用start方法
        myThread.start();
    }
}
```

![image-20200411221700419](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195859.png)

3.2. 方式二实现Runnable接口的方式：

1. 创建一个实现了Runnable接口的类
2. 实现类去实现Runnable中的抽象方法：run()
3. 创建实现类的对象
4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
5. 通过Thread类的对象调用start()

**代码示例：**

```java
//1. 创建一个实现了Runnable接口的类
public class RunnableTest implements Runnable {
    // 2. 实现类去实现Runnable中的抽象方法：run()
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            System.out.println(i);
        }
    }
}

class test {
    public static void main(String[] args) {
        //3. 创建实现类的对象
        RunnableTest runnableTest = new RunnableTest();
        //4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
        Thread thread = new Thread(runnableTest);
        //5. 通过Thread类的对象调用start()
        thread.start();

    }
}
```

**两种方式的对比：**

开发中优先选择：实现Runnable接口的方式

**原因：**

1. 实现的方式没类的单继承性的局限性

 2. 实现的方式更适合来处理多个线程共享数据的情况。

**联系：**public class Thread implements Runnable

**相同点：**两种方式都需要重写run(),将线程要执行的逻辑声明在run()中。 目前两种方式，要想启动线程，都是调用的Thread类中的start()。

**也可以采用创建匿名类的方式**

```java
public class ThreadDemo {
    public static void main(String[] args) {

        //创建Thread类的匿名子类的方式
        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 == 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 != 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();


    }
}
```



### 4. Thread类的常用方法

4.1 常用方法：

1. start():启动当前线程；调用当前线程的run()，只有Thread类和他的子类才能调用start()方法
2. run(): 通常需要重写Thread类中的此方法，将创建的线程要执行的操作声明在此方法中
3. currentThread():静态方法，返回执行当前代码的线程
4. getName():获取当前线程的名字
5. setName():设置当前线程的名字
6. yield():释放当前cpu的执行权
7. join():在线程a中调用线程b的join(),此时线程a就进入阻塞状态，直到线程b完全执行完以后，线程a才结束阻塞状态。
8. stop():已过时。当执行此方法时，强制结束当前线程。
9. sleep(long millitime):让当前线程“睡眠”指定的millitime毫秒。在指定的millitime毫秒时间内，当前线程是阻塞状态。
10. isAlive():判断当前线程是否存活

4.2 线程的优先级：

- MAX_PRIORITY：10
- MIN _PRIORITY：1
- NORM_PRIORITY：5 -->默认优先级

获取和设置当前线程的优先级：

- getPriority():获取线程的优先级
- setPriority(int p):设置线程的优先级

> 说明：高优先级的线程要抢占低优先级线程CPU的执行权。但是只是从概率上讲，高优先级的线程高概率的情况下被执行。并不意味着只当高优先级的线程执行完以后，低优先级的线程才执行。

线程通信：wait() / notify() / notifyAll() :此三个方法定义在Object类中的。

**线程的分类**

- 守护线程，如：垃圾回收线程，依赖于主线程而存在
- 用户线程，如：main方法的线程



### 5. Thread的生命周期

**线程的五种状态：**

- 新建：当一个 Thread类或其子类的对象被声明并创建时，新生的线程对象处于新建状态
- 就绪：处于新建状态的线程被start()后，将进入线程队列等待CPU时间片，此时它已具备了运行的条件，只是没分配到CPU资源
- 运行：当就绪的线程被调度并获得CPU资源时，便进入运行状态，run()方法定义了线程的操作和功能
- 阻塞：在某种特殊情况下，被人为挂起或执行输入输出操作时，让出CPU并临时中止自己的执行，进入阻塞状态
- 死亡：线程完成了它的全部工作或线程被提前强制性地中止或出现异常导致结束

![image-20200414132655458](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195904.png)

**说明：**

1. 生命周期关注两个概念：状态、相应的方法
2. 关注：状态a-->状态b:哪些方法执行了（回调方法） 某个方法主动调用：状态a-->状态b
3. 阻塞：临时状态，不可以作为最终状态
4. 死亡：最终状态。



## 四、线程的同步机制



### 1.背景

例子：创建个窗口卖票，总票数为100张.使用实现Runnable接口的方式

- 问题：卖票过程中，出现了重票、错票 -->出现了线程的安全问题
- 问题出现的原因：当某个线程操作车票的过程中，尚未操作完成时，其他线程参与进来，也操作车票。
- 如何解决：当一个线程a在操作ticket的时候，其他线程不能参与进来。直到线程a操作完ticket时，其他线程才可以开始操作ticket。这种情况即使线程a出现了阻塞，也不能被改变。



### 2. Java解决方案：同步机制

在Java中，我们通过同步机制，来解决线程的安全问题。



#### 2.1 方式一：同步代码块

```java
synchronized(同步监视器){//同步监视器就是需要同步线程的公共对象
   //需要被同步的代码
    
}
```

**说明：**

1. 操作共享数据的代码，即为需要被同步的代码。 -->不能包含代码多了，也不能包含代码少了。
2. 共享数据：多个线程共同操作的变量。比如：ticket就是共享数据。
3. 同步监视器，俗称：锁。任何一个类的对象，都可以充当锁。
4. 要求多个线程必须要共用同一把锁。

- 在实现Runnable接口创建多线程的方式中，我们可以考虑使用this充当同步监视器。
- 在继承Thread类创建多线程的方式中，慎用this充当同步监视器，考虑使用当前类充当同步监视器。

**代码示例：**

**实现Runnable接口形式同步代码块**

```java
public class Ticket implements Runnable {
    private int tick = 100;

    @Override
    public void run() {

        while (true) {
            synchronized (this) {
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
                } else {
                    break;
                }
            }
        }
    }
}

class TicketTest {
    public static void main(String[] args) {
        Ticket ticket = new Ticket();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```

**继承Thread类形式同步代码块**

```java
public class Ticket2 extends Thread {
    private static int tick = 100;
    private static Object object = new Object();

    public Ticket2() {
    }

    @Override
    public void run() {

        while (true) {
            synchronized (object) {
            //synchronized (Ticket2.class) {//通过反射调用当前类
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为" + tick--);
                } else {
                    break;
                }
            }

        }
    }
}

class TicketTest2 {
    public static void main(String[] args) {
        Ticket2 ticket1 = new Ticket2();
        Ticket2 ticket2 = new Ticket2();
        Ticket2 ticket3 = new Ticket2();

        ticket1.setName("窗口1");
        ticket2.setName("窗口2");
        ticket3.setName("窗口3");

        ticket1.start();
        ticket2.start();
        ticket3.start();


    }
}
```



#### 2.2 方式二：同步方法

如果操作共享数据的代码完整的声明在一个方法中，我们不妨将此方法声明同步的。

```java
public synchronized void show(String namer){
....
}
```

**代码示例：**

```java
public class Ticket3 implements Runnable {
    private int tick = 100;
    private boolean isFlag = true;

    @Override
    public void run() {
        while (isFlag) {
            show();

        }
    }

    public synchronized void show() {//同步show方法，继承Thread类方法一样，只需同步方法即可，同时需要给方法加static关键字，确保不会创建多个对象
        if (tick > 0) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
        } else {
            isFlag = false;
        }
    }
}

class TicketTest3 {
    public static void main(String[] args) {
        Ticket3 ticket = new Ticket3();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```



#### 2.3 方式三：Lock锁 --- JDK 5.0新增

- 从JDK 5.0开始，Java提供了更强大的线程同步机制--通过显式定义同步锁对象来实现同步。同步锁使用Lock对象充当。
- java.util.concurrent.locks.Lock接口是控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次只能有一个线程对Lock对象加锁，线程开始访问共享资源之前应先获得Lock对象。
- ReentrantLock类实现了Lock，它拥有与 synchronized相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是 Reentrantlock，可以显式加锁、释放锁。

```java
class A {
	//1.实例化ReentrantLock对象
	private final ReenTrantLock lock = new ReenTrantLook();
	public void m() {
		lock.lock //2.先加锁
		try {
			//保证线程同步的代码
		} finally {
			lock.unlock(); //3.后解锁
		}
	}
}
//注意：如果同步代码块有异常，要将unlock()写入finally语句块中
```

**代码示例：**

```java
class Window implements Runnable {
    private int ticket = 100;

    //1.实例化ReentrantLock
    private ReentrantLock lock = new ReentrantLock();

    @Override
    public void run() {
        while (true) {
            try {
                //2.调用锁定方法lock()
                lock.lock();

                if (ticket > 0) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() +
                        "：售票，票号为：" + ticket);
                    ticket--;
                } else {
                    break;
                }
            } finally {
                //3.调用解锁方法：unlock()
                lock.unlock();
            }
        }
    }
}


public class LockTest {
    public static void main(String[] args) {
        Window w = new Window();
        Thread t1 = new Thread(w);
        Thread t2 = new Thread(w);
        Thread t3 = new Thread(w);
        t1.setName("窗口1");
        t2.setName("窗口2");
        t3.setName("窗口3");
        t1.start();
        t2.start();
        t3.start();
    }
}
```



### 3.同步方法的总结：

在《 Thinking in Java》中，是这么说的：对于并发工作，你需要某种方式来防止两个任务访问相同的资源（其实就是共享资源竞争）。防止这种冲突的方法就是当资源被一个任务使用时，在其上加锁。第一个访问某项资源的任务必须锁定这项资源，使其他仼务在其被解锁之前，就无法访问它了，而在其被解锁之时，另一个任务就可以锁定并使用它了。

**synchronized的锁是什么**：

1. 任意对象都可以作为同步锁。所有对象都自动含有单一的锁（监视器）
2. 同步方法的锁：静态方法（类名.class）、非静态方法（this）
3. 同步代码块：自己指定，很多时候也是指定为this或类名.class

**注意点：**

1. 必须确保使用同一个资源的多个线程共用一把锁，这个非常重要，否则就无法保证共享资源的安全
2. 一个线程类中的所有静态方法共用同一把锁（类名.class），所有非静态方法共用同一把锁（this），同步代码块（指定需谨慎）
3. 同步方法仍然涉及到同步监视器，只是不需要我们显式的声明。
4. 非静态的同步方法，同步监视器是：this
5. 静态的同步方法，同步监视器是：当前类本身



### 4. 同步的范围：

**如何找问题，即代码是否存在线程安全？（非常重要**）

（1）明确哪些代码是多线程运行的代码

（2）明确多个线程是否有共享数据

（3）明确多线程运行代码中是否有多条语句操作共享数据

**如何解决呢？（非常重要）**

对多条操作共享数据的语句，只能让一个线程都执行完，在执行过程中，其他线程不可以参与执行。 即所有操作共享数据的这些语句都要放在同步范围中

**注意点：**

范围太小：没锁住所有有安全问题的代码 范围太大：没发挥多线程的功能。



### 5. 面试题：

**1. synchronized 与 Lock的异同？**

1. 相同：二者都可以解决线程安全问题

2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器

3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）

4. 使用的优先顺序：

   Lock---> 同步代码块（已经进入了方法体，分配了相应资源 ) --->同步方法（在方法体之外)

5. 利弊： 同步的方式，解决了线程的安全问题。---好处 操作同步代码时，只能一个线程参与，其他线程等待。相当于是一个单线程的过程，效率低。

**2. Java是如何解决线程安全问题的，有几种方式？并对比几种方式的不同**

利用同步锁的方式，有三种方式同步代码块、同步方法和用lock方法

**3. synchronized和Lock方式解决线程安全问题的对比**

1. 相同：二者都可以解决线程安全问题
2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器
3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）



### 6. 线程安全的单例模式

```java
//使用同步机制将单例模式中的懒汉式改写为线程安全的。
class Bank {
    private static Bank instance = null;

    private Bank() {
    }

    public static Bank getInstance() {
        //方式一：效率稍差
        //        synchronized (Bank.class) {
        //            if(instance == null){
        //
        //                instance = new Bank();
        //            }
        //            return instance;
        //        }
        //方式二：效率更高
        if (instance == null) {
            synchronized (Bank.class) {
                if (instance == null) {
                    instance = new Bank();
                }
            }
        }

        return instance;
    }
}
```



### 7. 死锁问题

1. 死锁的理解： 不同的线程分别占用对方需要的同步资源不放弃，都在等待对方放弃自己需要的同步资源，就形成了线程的死锁
2. 说明：

- 出现死锁后，不会出现异常，不会出现提示，只是所的线程都处于阻塞状态，无法继续

- 我们使用同步时，要避免出现死锁。

  **死锁举例：**

```java
public static void main(String[] args) {

    StringBuffer s1 = new StringBuffer();
    StringBuffer s2 = new StringBuffer();


    new Thread(){
        @Override
        public void run() {

            synchronized (s1){

                s1.append("a");
                s2.append("1");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }


                synchronized (s2){
                    s1.append("b");
                    s2.append("2");

                    System.out.println(s1);
                    System.out.println(s2);
                }


            }

        }
    }.start();


    new Thread(new Runnable() {
        @Override
        public void run() {
            synchronized (s2){

                s1.append("c");
                s2.append("3");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                synchronized (s1){
                    s1.append("d");
                    s2.append("4");

                    System.out.println(s1);
                    System.out.println(s2);
                }
            }
        }
    }).start();
}
```



## 五、线程通讯

为了解决线程的死锁问题，引入线程通讯



### 1. 线程通信涉及到的三个方法：

- wait():一旦执行此方法，当前线程就进入阻塞状态，并释放同步监视器。
- notify():一旦执行此方法，就会唤醒被wait的一个线程。如果有多个线程被wait，就唤醒优先级高的那个。
- notifyAll():一旦执行此方法，就会唤醒所有被wait的线程。



### 2. 说明：

- wait()，notify()，notifyAll()三个方法必须使用在同步代码块或同步方法中。

- wait()，notify()，notifyAll()三个方法的调用者必须是同步代码块或同步方法中的同步监视器。

  否则，会出现IllegalMonitorStateException异常

- wait()，notify()，notifyAll()三个方法是定义在java.lang.Object类中。

**代码示例：**

使用两个线程打印 1-100，线程1, 线程2 交替打印。

```java
class MyThread implements Runnable {
    private int number = 1;
    private Object object = new Object();

    @Override
    public void run() {
        while (true) {

            synchronized (object) {
                object.notify();//调用notify()方法唤醒线程
                if (number <= 100) {
                    //线程休眠
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() + number);
                    number++;

                    try {
                        object.wait();//打印输出一次后调用wait()方法将线程阻塞
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                } else {
                    break;
                }
            }
        }
    }
}

public class CommunicationTest {
    public static void main(String[] args) {
        MyThread myThread = new MyThread();

        Thread thread1 = new Thread(myThread);
        Thread thread2 = new Thread(myThread);

        thread1.setName("线程1:");
        thread2.setName("线程2:");

        thread1.start();
        thread2.start();
    }
}
```



### 3. 面试题：

sleep() 和 wait()的异同？

相同点：一旦执行方法，都可以使得当前的线程进入阻塞状态。

不同点：

1）两个方法声明的位置不同：Thread类中声明sleep() , Object类中声明wait()

2）调用的要求不同：sleep()可以在任何需要的场景下调用。 wait()必须使用在同步代码块或同步方法中

3）关于是否释放同步监视器：如果两个方法都使用在同步代码块或同步方法中，sleep()不会释放锁，wait()会释放锁。



### 4. 释放锁的操作：

- 当前线程的同步方法、同步代码块执行结束
- 当前线程在同步代码块、同步方法中遇到 break、 return终止了该代码块该方法的继续执行。
- 当前线程在同步代码块、同步方法中出现了未处理的Error或 Exception，导致异常结束。
- 当前线程在同步代码块、同步方法中执行了线程对象的 wait()方法，当前线程暂停，并释放锁



### 5. 不会释放锁的操作：

- 线程执行同步代码块或同步方法时，程序调用 Thread. sleep()、Thread yield()方法暂停当前线程的执行
- 线程执行同步代码块时，其他线程调用了该线程的 suspend()方法将该线程挂起，该线程不会释放锁（同步监视器）
- 应尽量避免使用 suspend()和 resume()来控制线程



## 六、JDK 5.0新增线程创建方式



### 1. 新增方式一：实现Callable接口。

**实现方法：**

1. 创建一个实现Callable的实现类
2. 实现call方法，将此线程需要执行的操作声明在call()中
3. 创建Callable接口实现类的对象
4. 将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
5. 将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
6. 获取Callable中call方法的返回值

**代码示例：**

```java
//1.创建一个实现Callable的实现类
class NumThread implements Callable{
    //2.实现call方法，将此线程需要执行的操作声明在call()中
    @Override
    public Object call() throws Exception {
        int sum = 0;
        for (int i = 1; i <= 100; i++) {
            if(i % 2 == 0){
                System.out.println(i);
                sum += i;
            }
        }
        return sum;
    }
}


public class ThreadNew {
    public static void main(String[] args) {
        //3.创建Callable接口实现类的对象
        NumThread numThread = new NumThread();
        //4.将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
        FutureTask futureTask = new FutureTask(numThread);
        //5.将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
        new Thread(futureTask).start();

        try {
            //6.获取Callable中call方法的返回值
            //get()返回值即为FutureTask构造器参数Callable实现类重写的call()的返回值。
            Object sum = futureTask.get();
            System.out.println("总和为：" + sum);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (ExecutionException e) {
            e.printStackTrace();
        }
    }

}
```

**如何理解实现Callable接口的方式创建多线程比实现Runnable接口创建多线程方式强大？**

1. call()可以返回值的。
2. call()可以抛出异常，被外面的操作捕获，获取异常的信息
3. Callable是支持泛型的



### 2. 新增方式二：使用线程池

背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程对性能影响很大。

**解决方案：**

提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。可以避免频繁创建销毁、实现重复利用。类似生活中的公共交通工具。

**实现方法：**

1. 提供指定线程数量的线程池
2. 执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
3. 关闭连接池

**相关API：**

```java
JDK 5.0起提供了线程池相关AP|： Executor Service和 Executors

Executor Service：真正的线程池接口。常见子类 Thread Poolexecutor
void execute(Runnable command）：执行任务/命令，没有返回值，一般用来执行Runnable
<T> Future<T> submit（Callable<T>task）：执行任务，有返回值，一般又来执行Callable
void shutdown()：关闭连接池

Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池
Executors. newCachedThreadPool()：创建一个可根据需要创建新线程的线程池
Executors.newFⅸedthreadPool(n)；创建一个可重用固定线程数的线程池
EXecutors. newSingleThreadEXecutor()：创建一个只有一个线程的线程池
Executors. new thread Poo(n)：创建一个线程池，它可安排在给定延迟后运行命令或者定期地执行。
```

**代码示例：**

```java
class NumberThread implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 == 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

class NumberThread1 implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 != 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

public class ThreadPool {

    public static void main(String[] args) {
        //1. 提供指定线程数量的线程池
        ExecutorService service = Executors.newFixedThreadPool(10);
        ThreadPoolExecutor service1 = (ThreadPoolExecutor) service;
        //设置线程池的属性
//        System.out.println(service.getClass());
//        service1.setCorePoolSize(15);
//        service1.setKeepAliveTime();


        //2.执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
        service.execute(new NumberThread());//适合适用于Runnable
        service.execute(new NumberThread1());//适合适用于Runnable

//        service.submit(Callable callable);//适合使用于Callable
        //3.关闭连接池
        service.shutdown();
    }

}
```

**应用线程池的好处：**

1. 提高响应速度（减少了创建新线程的时间）

2. 降低资源消耗（重复利用线程池中线程，不需要每次都创建）

3. 便于线程管理

   corePoolSize：核心池的大小

   maximumPoolSize：最大线程数

   keepAliveTime：线程没任务时最多保持多长时间后会终止

**面试题：Java中多线程的创建有几种方式？四种。**

JDK 5.0以前：

- 即继承Thread类重run方法
- 实现Runnable接口实现run方法

JDK 5.0以后：

- 实现callable接口，实现call方法
- 利用线程池, firstPicture=https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210501175554.jpg, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=3, userId=null, description=合理利用多线程可以提高应用程序的响应；对图形化界面更有意义，可增强用户体验；提高计算机系统CPU的利用率；改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。, tagIds=1), org.apache.catalina.session.StandardSessionFacade@80d4e86, {}]}
2021-05-01 18:00:50.855 DEBUG 6852 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.insert     : ==>  Preparing: INSERT INTO t_blog ( title, content, first_picture, flag, views, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, description, tag_ids ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-05-01 18:00:50.860 DEBUG 6852 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.insert     : ==> Parameters: java多线程(String), 在进行多线程的内容之前我们需要首先了解涉及操作系统的几个知识点。



## 一、程序、进程、线程



### 1. 程序(program)

概念：是为完成特定任务、用某种语言编写的一组指令的集合。即指一段静态的代码。



### 2. 进程(process)

概念：程序的一次执行过程，或是正在运行的一个程序。 说明：进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域



### 3. 线程(thread)

概念：进程可进一步细化为线程，是一个程序内部的一条执行路径。 说明：线程作为调度和执行的单位，每个线程拥独立的运行栈和程序计数器(pc)，线程切换的开销小。

![image-20200411195447115](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195852.png)

**内存结构：**

![image-20200411195509394](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195855.png)

> 进程可以细化为多个线程。 每个线程，拥有自己独立的：栈、程序计数器 多个线程，共享同一个进程中的结构：方法区、堆。



## 二、并行与并发



### 1. 单核CPU与多核CPU

- 单核CPU，其实是一种假的多线程，因为在一个时间单元内，也只能执行一个线程的任务。涉及到CPU处理线程的方式，CPU在单位时间（也就是说一个时间片内）内只能处理一个线程，于是就将其他的线程设置为阻塞状态，加入到阻塞队列中，等到处理完成当前线程后从就绪队列中取出新的线程进行处理，由于切换和处理时间很快用户感知不到于是用户便认为CPU在同一时间内处理多个线程。
- 多核CPU，才能更好的发挥多线程的效率。（现在的服务器都是多核的）
- 一个Java应用程序java.exe，其实至少三个线程：main()主线程，gc()垃圾回收线程，异常处理线程。当然如果发生异常，会影响主线程。



### 2. 并行与并发的理解

并行：多个CPU同时执行多个任务。比如：多个人同时做不同的事。

并发：一个CPU(采用时间片)同时执行多个任务。比如：秒杀、多个人做同一件事



## 为什么要使用多线程？

当我们在进行商品抢购的时候，在支付按钮上总是有个计时器在进行倒计时，但是我们此时仍然可以进行商品信息的查看，这个计时器和我们浏览商品信息的线程是同时进行的，这样也就实现了抢购场景，增加了用户的体验。



### 多线程程序的优点：

1. 提高应用程序的响应。对图形化界面更有意义，可增强用户体验。
2. 提高计算机系统CPU的利用率。
3. 改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。



### 应用的场景

1. 程序需要同时执行两个或多个任务。
2. 程序需要实现一些需要等待的任务时，如用户输入、文件读写操作、网络操作、搜索等
3. 需要一些后台运行的程序时



## 三、Thread类

Java语言的JVM允许程序运行多个线程，它通过 java. lang.Thread类来体现



### 1. Thread类的特性

每个线程都是通过某个特定 Thread对象的run（方法来完成操作的，经常把run()方法的主体称为线程体 通过该 Thread对象的 start（方法来启动这个线程，而非直接调用run



### 2. 构造器：

- Thread()：创建新的 Thread对象
- Thread（String threadName）：创建线程并指定线程实例名
- Thread（Runnable target）：指定创建线程的目标对象，它实现了 Runnable接口中的run方法
- Thread（Runnable target， String name）：创建新的 Thread对象



### 3. 创建多线程的两种方式

3.1. 方式一继承Thread类的方式：

1. 创建一个继承于Thread类的子类
2. 重写Thread类的run() --> 将此线程执行的操作声明在run()中
3. 创建Thread类的子类的对象
4. 通过此对象调用start()：①启动当前线程 ② 调用当前线程的run()

**注意点：**

1. 我们启动一个线程，必须调用start()，不能调用run()的方式启动线程。 如果再启动一个线程，必须重新创建一个Thread子类的对象，调用此对象的start().（注意后面的点）
2. 如果自己手动调用run()方法，那么就只是普通方法，没有启动多线程模式
3. run（方法由JVM调用，什么时候调用，执行的过程控制都有操作系统的CPU调度决定。
4. 想要启动多线程，必须调用 start方法。
5. 一个线程对象只能调用一次 start()方法启动，如果重复调用了，则将抛出异常“lllegalThreadStateException”.

**代码示例**

```java
//1.继承Thread类
class MyThread extends Thread {
    public MyThread() {
    }

    //2.重run方法
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            if (i % 2 == 0) {
                System.out.println(i);
            }
        }
    }
}

public class ThreadTest {
    public static void main(String[] args) {
//3.新建Thread对象
        MyThread myThread = new MyThread();
        //4.调用start方法
        myThread.start();
    }
}
```

![image-20200411221700419](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195859.png)

3.2. 方式二实现Runnable接口的方式：

1. 创建一个实现了Runnable接口的类
2. 实现类去实现Runnable中的抽象方法：run()
3. 创建实现类的对象
4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
5. 通过Thread类的对象调用start()

**代码示例：**

```java
//1. 创建一个实现了Runnable接口的类
public class RunnableTest implements Runnable {
    // 2. 实现类去实现Runnable中的抽象方法：run()
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            System.out.println(i);
        }
    }
}

class test {
    public static void main(String[] args) {
        //3. 创建实现类的对象
        RunnableTest runnableTest = new RunnableTest();
        //4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
        Thread thread = new Thread(runnableTest);
        //5. 通过Thread类的对象调用start()
        thread.start();

    }
}
```

**两种方式的对比：**

开发中优先选择：实现Runnable接口的方式

**原因：**

1. 实现的方式没类的单继承性的局限性

 2. 实现的方式更适合来处理多个线程共享数据的情况。

**联系：**public class Thread implements Runnable

**相同点：**两种方式都需要重写run(),将线程要执行的逻辑声明在run()中。 目前两种方式，要想启动线程，都是调用的Thread类中的start()。

**也可以采用创建匿名类的方式**

```java
public class ThreadDemo {
    public static void main(String[] args) {

        //创建Thread类的匿名子类的方式
        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 == 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 != 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();


    }
}
```



### 4. Thread类的常用方法

4.1 常用方法：

1. start():启动当前线程；调用当前线程的run()，只有Thread类和他的子类才能调用start()方法
2. run(): 通常需要重写Thread类中的此方法，将创建的线程要执行的操作声明在此方法中
3. currentThread():静态方法，返回执行当前代码的线程
4. getName():获取当前线程的名字
5. setName():设置当前线程的名字
6. yield():释放当前cpu的执行权
7. join():在线程a中调用线程b的join(),此时线程a就进入阻塞状态，直到线程b完全执行完以后，线程a才结束阻塞状态。
8. stop():已过时。当执行此方法时，强制结束当前线程。
9. sleep(long millitime):让当前线程“睡眠”指定的millitime毫秒。在指定的millitime毫秒时间内，当前线程是阻塞状态。
10. isAlive():判断当前线程是否存活

4.2 线程的优先级：

- MAX_PRIORITY：10
- MIN _PRIORITY：1
- NORM_PRIORITY：5 -->默认优先级

获取和设置当前线程的优先级：

- getPriority():获取线程的优先级
- setPriority(int p):设置线程的优先级

> 说明：高优先级的线程要抢占低优先级线程CPU的执行权。但是只是从概率上讲，高优先级的线程高概率的情况下被执行。并不意味着只当高优先级的线程执行完以后，低优先级的线程才执行。

线程通信：wait() / notify() / notifyAll() :此三个方法定义在Object类中的。

**线程的分类**

- 守护线程，如：垃圾回收线程，依赖于主线程而存在
- 用户线程，如：main方法的线程



### 5. Thread的生命周期

**线程的五种状态：**

- 新建：当一个 Thread类或其子类的对象被声明并创建时，新生的线程对象处于新建状态
- 就绪：处于新建状态的线程被start()后，将进入线程队列等待CPU时间片，此时它已具备了运行的条件，只是没分配到CPU资源
- 运行：当就绪的线程被调度并获得CPU资源时，便进入运行状态，run()方法定义了线程的操作和功能
- 阻塞：在某种特殊情况下，被人为挂起或执行输入输出操作时，让出CPU并临时中止自己的执行，进入阻塞状态
- 死亡：线程完成了它的全部工作或线程被提前强制性地中止或出现异常导致结束

![image-20200414132655458](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195904.png)

**说明：**

1. 生命周期关注两个概念：状态、相应的方法
2. 关注：状态a-->状态b:哪些方法执行了（回调方法） 某个方法主动调用：状态a-->状态b
3. 阻塞：临时状态，不可以作为最终状态
4. 死亡：最终状态。



## 四、线程的同步机制



### 1.背景

例子：创建个窗口卖票，总票数为100张.使用实现Runnable接口的方式

- 问题：卖票过程中，出现了重票、错票 -->出现了线程的安全问题
- 问题出现的原因：当某个线程操作车票的过程中，尚未操作完成时，其他线程参与进来，也操作车票。
- 如何解决：当一个线程a在操作ticket的时候，其他线程不能参与进来。直到线程a操作完ticket时，其他线程才可以开始操作ticket。这种情况即使线程a出现了阻塞，也不能被改变。



### 2. Java解决方案：同步机制

在Java中，我们通过同步机制，来解决线程的安全问题。



#### 2.1 方式一：同步代码块

```java
synchronized(同步监视器){//同步监视器就是需要同步线程的公共对象
   //需要被同步的代码
    
}
```

**说明：**

1. 操作共享数据的代码，即为需要被同步的代码。 -->不能包含代码多了，也不能包含代码少了。
2. 共享数据：多个线程共同操作的变量。比如：ticket就是共享数据。
3. 同步监视器，俗称：锁。任何一个类的对象，都可以充当锁。
4. 要求多个线程必须要共用同一把锁。

- 在实现Runnable接口创建多线程的方式中，我们可以考虑使用this充当同步监视器。
- 在继承Thread类创建多线程的方式中，慎用this充当同步监视器，考虑使用当前类充当同步监视器。

**代码示例：**

**实现Runnable接口形式同步代码块**

```java
public class Ticket implements Runnable {
    private int tick = 100;

    @Override
    public void run() {

        while (true) {
            synchronized (this) {
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
                } else {
                    break;
                }
            }
        }
    }
}

class TicketTest {
    public static void main(String[] args) {
        Ticket ticket = new Ticket();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```

**继承Thread类形式同步代码块**

```java
public class Ticket2 extends Thread {
    private static int tick = 100;
    private static Object object = new Object();

    public Ticket2() {
    }

    @Override
    public void run() {

        while (true) {
            synchronized (object) {
            //synchronized (Ticket2.class) {//通过反射调用当前类
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为" + tick--);
                } else {
                    break;
                }
            }

        }
    }
}

class TicketTest2 {
    public static void main(String[] args) {
        Ticket2 ticket1 = new Ticket2();
        Ticket2 ticket2 = new Ticket2();
        Ticket2 ticket3 = new Ticket2();

        ticket1.setName("窗口1");
        ticket2.setName("窗口2");
        ticket3.setName("窗口3");

        ticket1.start();
        ticket2.start();
        ticket3.start();


    }
}
```



#### 2.2 方式二：同步方法

如果操作共享数据的代码完整的声明在一个方法中，我们不妨将此方法声明同步的。

```java
public synchronized void show(String namer){
....
}
```

**代码示例：**

```java
public class Ticket3 implements Runnable {
    private int tick = 100;
    private boolean isFlag = true;

    @Override
    public void run() {
        while (isFlag) {
            show();

        }
    }

    public synchronized void show() {//同步show方法，继承Thread类方法一样，只需同步方法即可，同时需要给方法加static关键字，确保不会创建多个对象
        if (tick > 0) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
        } else {
            isFlag = false;
        }
    }
}

class TicketTest3 {
    public static void main(String[] args) {
        Ticket3 ticket = new Ticket3();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```



#### 2.3 方式三：Lock锁 --- JDK 5.0新增

- 从JDK 5.0开始，Java提供了更强大的线程同步机制--通过显式定义同步锁对象来实现同步。同步锁使用Lock对象充当。
- java.util.concurrent.locks.Lock接口是控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次只能有一个线程对Lock对象加锁，线程开始访问共享资源之前应先获得Lock对象。
- ReentrantLock类实现了Lock，它拥有与 synchronized相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是 Reentrantlock，可以显式加锁、释放锁。

```java
class A {
	//1.实例化ReentrantLock对象
	private final ReenTrantLock lock = new ReenTrantLook();
	public void m() {
		lock.lock //2.先加锁
		try {
			//保证线程同步的代码
		} finally {
			lock.unlock(); //3.后解锁
		}
	}
}
//注意：如果同步代码块有异常，要将unlock()写入finally语句块中
```

**代码示例：**

```java
class Window implements Runnable {
    private int ticket = 100;

    //1.实例化ReentrantLock
    private ReentrantLock lock = new ReentrantLock();

    @Override
    public void run() {
        while (true) {
            try {
                //2.调用锁定方法lock()
                lock.lock();

                if (ticket > 0) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() +
                        "：售票，票号为：" + ticket);
                    ticket--;
                } else {
                    break;
                }
            } finally {
                //3.调用解锁方法：unlock()
                lock.unlock();
            }
        }
    }
}


public class LockTest {
    public static void main(String[] args) {
        Window w = new Window();
        Thread t1 = new Thread(w);
        Thread t2 = new Thread(w);
        Thread t3 = new Thread(w);
        t1.setName("窗口1");
        t2.setName("窗口2");
        t3.setName("窗口3");
        t1.start();
        t2.start();
        t3.start();
    }
}
```



### 3.同步方法的总结：

在《 Thinking in Java》中，是这么说的：对于并发工作，你需要某种方式来防止两个任务访问相同的资源（其实就是共享资源竞争）。防止这种冲突的方法就是当资源被一个任务使用时，在其上加锁。第一个访问某项资源的任务必须锁定这项资源，使其他仼务在其被解锁之前，就无法访问它了，而在其被解锁之时，另一个任务就可以锁定并使用它了。

**synchronized的锁是什么**：

1. 任意对象都可以作为同步锁。所有对象都自动含有单一的锁（监视器）
2. 同步方法的锁：静态方法（类名.class）、非静态方法（this）
3. 同步代码块：自己指定，很多时候也是指定为this或类名.class

**注意点：**

1. 必须确保使用同一个资源的多个线程共用一把锁，这个非常重要，否则就无法保证共享资源的安全
2. 一个线程类中的所有静态方法共用同一把锁（类名.class），所有非静态方法共用同一把锁（this），同步代码块（指定需谨慎）
3. 同步方法仍然涉及到同步监视器，只是不需要我们显式的声明。
4. 非静态的同步方法，同步监视器是：this
5. 静态的同步方法，同步监视器是：当前类本身



### 4. 同步的范围：

**如何找问题，即代码是否存在线程安全？（非常重要**）

（1）明确哪些代码是多线程运行的代码

（2）明确多个线程是否有共享数据

（3）明确多线程运行代码中是否有多条语句操作共享数据

**如何解决呢？（非常重要）**

对多条操作共享数据的语句，只能让一个线程都执行完，在执行过程中，其他线程不可以参与执行。 即所有操作共享数据的这些语句都要放在同步范围中

**注意点：**

范围太小：没锁住所有有安全问题的代码 范围太大：没发挥多线程的功能。



### 5. 面试题：

**1. synchronized 与 Lock的异同？**

1. 相同：二者都可以解决线程安全问题

2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器

3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）

4. 使用的优先顺序：

   Lock---> 同步代码块（已经进入了方法体，分配了相应资源 ) --->同步方法（在方法体之外)

5. 利弊： 同步的方式，解决了线程的安全问题。---好处 操作同步代码时，只能一个线程参与，其他线程等待。相当于是一个单线程的过程，效率低。

**2. Java是如何解决线程安全问题的，有几种方式？并对比几种方式的不同**

利用同步锁的方式，有三种方式同步代码块、同步方法和用lock方法

**3. synchronized和Lock方式解决线程安全问题的对比**

1. 相同：二者都可以解决线程安全问题
2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器
3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）



### 6. 线程安全的单例模式

```java
//使用同步机制将单例模式中的懒汉式改写为线程安全的。
class Bank {
    private static Bank instance = null;

    private Bank() {
    }

    public static Bank getInstance() {
        //方式一：效率稍差
        //        synchronized (Bank.class) {
        //            if(instance == null){
        //
        //                instance = new Bank();
        //            }
        //            return instance;
        //        }
        //方式二：效率更高
        if (instance == null) {
            synchronized (Bank.class) {
                if (instance == null) {
                    instance = new Bank();
                }
            }
        }

        return instance;
    }
}
```



### 7. 死锁问题

1. 死锁的理解： 不同的线程分别占用对方需要的同步资源不放弃，都在等待对方放弃自己需要的同步资源，就形成了线程的死锁
2. 说明：

- 出现死锁后，不会出现异常，不会出现提示，只是所的线程都处于阻塞状态，无法继续

- 我们使用同步时，要避免出现死锁。

  **死锁举例：**

```java
public static void main(String[] args) {

    StringBuffer s1 = new StringBuffer();
    StringBuffer s2 = new StringBuffer();


    new Thread(){
        @Override
        public void run() {

            synchronized (s1){

                s1.append("a");
                s2.append("1");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }


                synchronized (s2){
                    s1.append("b");
                    s2.append("2");

                    System.out.println(s1);
                    System.out.println(s2);
                }


            }

        }
    }.start();


    new Thread(new Runnable() {
        @Override
        public void run() {
            synchronized (s2){

                s1.append("c");
                s2.append("3");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                synchronized (s1){
                    s1.append("d");
                    s2.append("4");

                    System.out.println(s1);
                    System.out.println(s2);
                }
            }
        }
    }).start();
}
```



## 五、线程通讯

为了解决线程的死锁问题，引入线程通讯



### 1. 线程通信涉及到的三个方法：

- wait():一旦执行此方法，当前线程就进入阻塞状态，并释放同步监视器。
- notify():一旦执行此方法，就会唤醒被wait的一个线程。如果有多个线程被wait，就唤醒优先级高的那个。
- notifyAll():一旦执行此方法，就会唤醒所有被wait的线程。



### 2. 说明：

- wait()，notify()，notifyAll()三个方法必须使用在同步代码块或同步方法中。

- wait()，notify()，notifyAll()三个方法的调用者必须是同步代码块或同步方法中的同步监视器。

  否则，会出现IllegalMonitorStateException异常

- wait()，notify()，notifyAll()三个方法是定义在java.lang.Object类中。

**代码示例：**

使用两个线程打印 1-100，线程1, 线程2 交替打印。

```java
class MyThread implements Runnable {
    private int number = 1;
    private Object object = new Object();

    @Override
    public void run() {
        while (true) {

            synchronized (object) {
                object.notify();//调用notify()方法唤醒线程
                if (number <= 100) {
                    //线程休眠
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() + number);
                    number++;

                    try {
                        object.wait();//打印输出一次后调用wait()方法将线程阻塞
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                } else {
                    break;
                }
            }
        }
    }
}

public class CommunicationTest {
    public static void main(String[] args) {
        MyThread myThread = new MyThread();

        Thread thread1 = new Thread(myThread);
        Thread thread2 = new Thread(myThread);

        thread1.setName("线程1:");
        thread2.setName("线程2:");

        thread1.start();
        thread2.start();
    }
}
```



### 3. 面试题：

sleep() 和 wait()的异同？

相同点：一旦执行方法，都可以使得当前的线程进入阻塞状态。

不同点：

1）两个方法声明的位置不同：Thread类中声明sleep() , Object类中声明wait()

2）调用的要求不同：sleep()可以在任何需要的场景下调用。 wait()必须使用在同步代码块或同步方法中

3）关于是否释放同步监视器：如果两个方法都使用在同步代码块或同步方法中，sleep()不会释放锁，wait()会释放锁。



### 4. 释放锁的操作：

- 当前线程的同步方法、同步代码块执行结束
- 当前线程在同步代码块、同步方法中遇到 break、 return终止了该代码块该方法的继续执行。
- 当前线程在同步代码块、同步方法中出现了未处理的Error或 Exception，导致异常结束。
- 当前线程在同步代码块、同步方法中执行了线程对象的 wait()方法，当前线程暂停，并释放锁



### 5. 不会释放锁的操作：

- 线程执行同步代码块或同步方法时，程序调用 Thread. sleep()、Thread yield()方法暂停当前线程的执行
- 线程执行同步代码块时，其他线程调用了该线程的 suspend()方法将该线程挂起，该线程不会释放锁（同步监视器）
- 应尽量避免使用 suspend()和 resume()来控制线程



## 六、JDK 5.0新增线程创建方式



### 1. 新增方式一：实现Callable接口。

**实现方法：**

1. 创建一个实现Callable的实现类
2. 实现call方法，将此线程需要执行的操作声明在call()中
3. 创建Callable接口实现类的对象
4. 将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
5. 将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
6. 获取Callable中call方法的返回值

**代码示例：**

```java
//1.创建一个实现Callable的实现类
class NumThread implements Callable{
    //2.实现call方法，将此线程需要执行的操作声明在call()中
    @Override
    public Object call() throws Exception {
        int sum = 0;
        for (int i = 1; i <= 100; i++) {
            if(i % 2 == 0){
                System.out.println(i);
                sum += i;
            }
        }
        return sum;
    }
}


public class ThreadNew {
    public static void main(String[] args) {
        //3.创建Callable接口实现类的对象
        NumThread numThread = new NumThread();
        //4.将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
        FutureTask futureTask = new FutureTask(numThread);
        //5.将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
        new Thread(futureTask).start();

        try {
            //6.获取Callable中call方法的返回值
            //get()返回值即为FutureTask构造器参数Callable实现类重写的call()的返回值。
            Object sum = futureTask.get();
            System.out.println("总和为：" + sum);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (ExecutionException e) {
            e.printStackTrace();
        }
    }

}
```

**如何理解实现Callable接口的方式创建多线程比实现Runnable接口创建多线程方式强大？**

1. call()可以返回值的。
2. call()可以抛出异常，被外面的操作捕获，获取异常的信息
3. Callable是支持泛型的



### 2. 新增方式二：使用线程池

背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程对性能影响很大。

**解决方案：**

提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。可以避免频繁创建销毁、实现重复利用。类似生活中的公共交通工具。

**实现方法：**

1. 提供指定线程数量的线程池
2. 执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
3. 关闭连接池

**相关API：**

```java
JDK 5.0起提供了线程池相关AP|： Executor Service和 Executors

Executor Service：真正的线程池接口。常见子类 Thread Poolexecutor
void execute(Runnable command）：执行任务/命令，没有返回值，一般用来执行Runnable
<T> Future<T> submit（Callable<T>task）：执行任务，有返回值，一般又来执行Callable
void shutdown()：关闭连接池

Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池
Executors. newCachedThreadPool()：创建一个可根据需要创建新线程的线程池
Executors.newFⅸedthreadPool(n)；创建一个可重用固定线程数的线程池
EXecutors. newSingleThreadEXecutor()：创建一个只有一个线程的线程池
Executors. new thread Poo(n)：创建一个线程池，它可安排在给定延迟后运行命令或者定期地执行。
```

**代码示例：**

```java
class NumberThread implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 == 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

class NumberThread1 implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 != 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

public class ThreadPool {

    public static void main(String[] args) {
        //1. 提供指定线程数量的线程池
        ExecutorService service = Executors.newFixedThreadPool(10);
        ThreadPoolExecutor service1 = (ThreadPoolExecutor) service;
        //设置线程池的属性
//        System.out.println(service.getClass());
//        service1.setCorePoolSize(15);
//        service1.setKeepAliveTime();


        //2.执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
        service.execute(new NumberThread());//适合适用于Runnable
        service.execute(new NumberThread1());//适合适用于Runnable

//        service.submit(Callable callable);//适合使用于Callable
        //3.关闭连接池
        service.shutdown();
    }

}
```

**应用线程池的好处：**

1. 提高响应速度（减少了创建新线程的时间）

2. 降低资源消耗（重复利用线程池中线程，不需要每次都创建）

3. 便于线程管理

   corePoolSize：核心池的大小

   maximumPoolSize：最大线程数

   keepAliveTime：线程没任务时最多保持多长时间后会终止

**面试题：Java中多线程的创建有几种方式？四种。**

JDK 5.0以前：

- 即继承Thread类重run方法
- 实现Runnable接口实现run方法

JDK 5.0以后：

- 实现callable接口，实现call方法
- 利用线程池(String), https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210501175554.jpg(String), 原创(String), 0(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T18:00:50.852(LocalDateTime), 2021-05-01T18:00:50.852(LocalDateTime), 3(Long), 1(Long), 合理利用多线程可以提高应用程序的响应；对图形化界面更有意义，可增强用户体验；提高计算机系统CPU的利用率；改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。(String), 1(String)
2021-05-01 18:00:50.917 DEBUG 6852 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.insert     : <==    Updates: 1
2021-05-01 18:00:51.053  INFO 6852 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 18:00:51.069  INFO 6852 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=新增成功}]}
2021-05-01 18:00:51.074 DEBUG 6852 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 18:00:51.074 DEBUG 6852 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 18:00:51.075 DEBUG 6852 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 18:00:51.076 DEBUG 6852 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 18:00:51.076 DEBUG 6852 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 18:00:51.078 DEBUG 6852 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:00:51.081 DEBUG 6852 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 18:00:51.082 DEBUG 6852 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 18:00:51.083 DEBUG 6852 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 18:00:51.083  INFO 6852 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 18:00:55.717  INFO 17096 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:00:55.722 DEBUG 17096 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 18:00:55.723 DEBUG 17096 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:00:55.727 DEBUG 17096 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:00:55.730 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:00:55.731 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:00:55.733 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:00:55.737 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:00:55.737 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:00:55.740 DEBUG 17096 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:00:55.741  INFO 17096 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:02:07.848  INFO 17096 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:02:07.853 DEBUG 17096 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 18:02:07.853 DEBUG 17096 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:02:07.856 DEBUG 17096 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:02:07.860 DEBUG 17096 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:02:07.861 DEBUG 17096 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:02:07.862 DEBUG 17096 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:02:07.865 DEBUG 17096 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:02:07.866 DEBUG 17096 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:02:07.869 DEBUG 17096 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:02:07.870  INFO 17096 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:02:19.480  INFO 17096 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:02:19.484 DEBUG 17096 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 18:02:19.484 DEBUG 17096 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:02:19.486 DEBUG 17096 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:02:19.490 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:02:19.491 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:02:19.492 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:02:19.496 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:02:19.497 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:02:19.498 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:02:19.499  INFO 17096 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:04:29.208  INFO 6852 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/4/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[4, {}]}
2021-05-01 18:04:29.213 DEBUG 6852 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 18:04:29.213 DEBUG 6852 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 18:04:29.214 DEBUG 6852 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 18:04:29.220 DEBUG 6852 --- [http-nio-9000-exec-6] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 18:04:29.220 DEBUG 6852 --- [http-nio-9000-exec-6] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 18:04:29.222 DEBUG 6852 --- [http-nio-9000-exec-6] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 18:04:29.226 DEBUG 6852 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 18:04:29.227 DEBUG 6852 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 4(Long)
2021-05-01 18:04:29.229 DEBUG 6852 --- [http-nio-9000-exec-6] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 18:04:29.229  INFO 6852 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 18:05:48.266  INFO 6852 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=4, title=java多线程, content=在进行多线程的内容之前我们需要首先了解涉及操作系统的几个知识点。



## 一、程序、进程、线程



### 1. 程序(program)

概念：是为完成特定任务、用某种语言编写的一组指令的集合。即指一段静态的代码。



### 2. 进程(process)

概念：程序的一次执行过程，或是正在运行的一个程序。 说明：进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域



### 3. 线程(thread)

概念：进程可进一步细化为线程，是一个程序内部的一条执行路径。 说明：线程作为调度和执行的单位，每个线程拥独立的运行栈和程序计数器(pc)，线程切换的开销小。

![image-20200411195447115](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195852.png)

**内存结构：**

![image-20200411195509394](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195855.png)

> 进程可以细化为多个线程。 每个线程，拥有自己独立的：栈、程序计数器 多个线程，共享同一个进程中的结构：方法区、堆。



## 二、并行与并发



### 1. 单核CPU与多核CPU

- 单核CPU，其实是一种假的多线程，因为在一个时间单元内，也只能执行一个线程的任务。涉及到CPU处理线程的方式，CPU在单位时间（也就是说一个时间片内）内只能处理一个线程，于是就将其他的线程设置为阻塞状态，加入到阻塞队列中，等到处理完成当前线程后从就绪队列中取出新的线程进行处理，由于切换和处理时间很快用户感知不到于是用户便认为CPU在同一时间内处理多个线程。
- 多核CPU，才能更好的发挥多线程的效率。（现在的服务器都是多核的）
- 一个Java应用程序java.exe，其实至少三个线程：main()主线程，gc()垃圾回收线程，异常处理线程。当然如果发生异常，会影响主线程。



### 2. 并行与并发的理解

并行：多个CPU同时执行多个任务。比如：多个人同时做不同的事。

并发：一个CPU(采用时间片)同时执行多个任务。比如：秒杀、多个人做同一件事



## 为什么要使用多线程？

当我们在进行商品抢购的时候，在支付按钮上总是有个计时器在进行倒计时，但是我们此时仍然可以进行商品信息的查看，这个计时器和我们浏览商品信息的线程是同时进行的，这样也就实现了抢购场景，增加了用户的体验。



### 多线程程序的优点：

1. 提高应用程序的响应。对图形化界面更有意义，可增强用户体验。
2. 提高计算机系统CPU的利用率。
3. 改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。



### 应用的场景

1. 程序需要同时执行两个或多个任务。
2. 程序需要实现一些需要等待的任务时，如用户输入、文件读写操作、网络操作、搜索等
3. 需要一些后台运行的程序时



## 三、Thread类

Java语言的JVM允许程序运行多个线程，它通过 java. lang.Thread类来体现



### 1. Thread类的特性

每个线程都是通过某个特定 Thread对象的run（方法来完成操作的，经常把run()方法的主体称为线程体 通过该 Thread对象的 start（方法来启动这个线程，而非直接调用run



### 2. 构造器：

- Thread()：创建新的 Thread对象
- Thread（String threadName）：创建线程并指定线程实例名
- Thread（Runnable target）：指定创建线程的目标对象，它实现了 Runnable接口中的run方法
- Thread（Runnable target， String name）：创建新的 Thread对象



### 3. 创建多线程的两种方式

3.1. 方式一继承Thread类的方式：

1. 创建一个继承于Thread类的子类
2. 重写Thread类的run() --> 将此线程执行的操作声明在run()中
3. 创建Thread类的子类的对象
4. 通过此对象调用start()：①启动当前线程 ② 调用当前线程的run()

**注意点：**

1. 我们启动一个线程，必须调用start()，不能调用run()的方式启动线程。 如果再启动一个线程，必须重新创建一个Thread子类的对象，调用此对象的start().（注意后面的点）
2. 如果自己手动调用run()方法，那么就只是普通方法，没有启动多线程模式
3. run（方法由JVM调用，什么时候调用，执行的过程控制都有操作系统的CPU调度决定。
4. 想要启动多线程，必须调用 start方法。
5. 一个线程对象只能调用一次 start()方法启动，如果重复调用了，则将抛出异常“lllegalThreadStateException”.

**代码示例**

```java
//1.继承Thread类
class MyThread extends Thread {
    public MyThread() {
    }

    //2.重run方法
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            if (i % 2 == 0) {
                System.out.println(i);
            }
        }
    }
}

public class ThreadTest {
    public static void main(String[] args) {
//3.新建Thread对象
        MyThread myThread = new MyThread();
        //4.调用start方法
        myThread.start();
    }
}
```

![image-20200411221700419](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195859.png)

3.2. 方式二实现Runnable接口的方式：

1. 创建一个实现了Runnable接口的类
2. 实现类去实现Runnable中的抽象方法：run()
3. 创建实现类的对象
4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
5. 通过Thread类的对象调用start()

**代码示例：**

```java
//1. 创建一个实现了Runnable接口的类
public class RunnableTest implements Runnable {
    // 2. 实现类去实现Runnable中的抽象方法：run()
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            System.out.println(i);
        }
    }
}

class test {
    public static void main(String[] args) {
        //3. 创建实现类的对象
        RunnableTest runnableTest = new RunnableTest();
        //4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
        Thread thread = new Thread(runnableTest);
        //5. 通过Thread类的对象调用start()
        thread.start();

    }
}
```

**两种方式的对比：**

开发中优先选择：实现Runnable接口的方式

**原因：**

1. 实现的方式没类的单继承性的局限性

 2. 实现的方式更适合来处理多个线程共享数据的情况。

**联系：**public class Thread implements Runnable

**相同点：**两种方式都需要重写run(),将线程要执行的逻辑声明在run()中。 目前两种方式，要想启动线程，都是调用的Thread类中的start()。

**也可以采用创建匿名类的方式**

```java
public class ThreadDemo {
    public static void main(String[] args) {

        //创建Thread类的匿名子类的方式
        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 == 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 != 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();


    }
}
```



### 4. Thread类的常用方法

4.1 常用方法：

1. start():启动当前线程；调用当前线程的run()，只有Thread类和他的子类才能调用start()方法
2. run(): 通常需要重写Thread类中的此方法，将创建的线程要执行的操作声明在此方法中
3. currentThread():静态方法，返回执行当前代码的线程
4. getName():获取当前线程的名字
5. setName():设置当前线程的名字
6. yield():释放当前cpu的执行权
7. join():在线程a中调用线程b的join(),此时线程a就进入阻塞状态，直到线程b完全执行完以后，线程a才结束阻塞状态。
8. stop():已过时。当执行此方法时，强制结束当前线程。
9. sleep(long millitime):让当前线程“睡眠”指定的millitime毫秒。在指定的millitime毫秒时间内，当前线程是阻塞状态。
10. isAlive():判断当前线程是否存活

4.2 线程的优先级：

- MAX_PRIORITY：10
- MIN _PRIORITY：1
- NORM_PRIORITY：5 -->默认优先级

获取和设置当前线程的优先级：

- getPriority():获取线程的优先级
- setPriority(int p):设置线程的优先级

> 说明：高优先级的线程要抢占低优先级线程CPU的执行权。但是只是从概率上讲，高优先级的线程高概率的情况下被执行。并不意味着只当高优先级的线程执行完以后，低优先级的线程才执行。

线程通信：wait() / notify() / notifyAll() :此三个方法定义在Object类中的。

**线程的分类**

- 守护线程，如：垃圾回收线程，依赖于主线程而存在
- 用户线程，如：main方法的线程



### 5. Thread的生命周期

**线程的五种状态：**

- 新建：当一个 Thread类或其子类的对象被声明并创建时，新生的线程对象处于新建状态
- 就绪：处于新建状态的线程被start()后，将进入线程队列等待CPU时间片，此时它已具备了运行的条件，只是没分配到CPU资源
- 运行：当就绪的线程被调度并获得CPU资源时，便进入运行状态，run()方法定义了线程的操作和功能
- 阻塞：在某种特殊情况下，被人为挂起或执行输入输出操作时，让出CPU并临时中止自己的执行，进入阻塞状态
- 死亡：线程完成了它的全部工作或线程被提前强制性地中止或出现异常导致结束

![image-20200414132655458](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195904.png)

**说明：**

1. 生命周期关注两个概念：状态、相应的方法
2. 关注：状态a-->状态b:哪些方法执行了（回调方法） 某个方法主动调用：状态a-->状态b
3. 阻塞：临时状态，不可以作为最终状态
4. 死亡：最终状态。



## 四、线程的同步机制



### 1.背景

例子：创建个窗口卖票，总票数为100张.使用实现Runnable接口的方式

- 问题：卖票过程中，出现了重票、错票 -->出现了线程的安全问题
- 问题出现的原因：当某个线程操作车票的过程中，尚未操作完成时，其他线程参与进来，也操作车票。
- 如何解决：当一个线程a在操作ticket的时候，其他线程不能参与进来。直到线程a操作完ticket时，其他线程才可以开始操作ticket。这种情况即使线程a出现了阻塞，也不能被改变。



### 2. Java解决方案：同步机制

在Java中，我们通过同步机制，来解决线程的安全问题。



#### 2.1 方式一：同步代码块

```java
synchronized(同步监视器){//同步监视器就是需要同步线程的公共对象
   //需要被同步的代码
    
}
```

**说明：**

1. 操作共享数据的代码，即为需要被同步的代码。 -->不能包含代码多了，也不能包含代码少了。
2. 共享数据：多个线程共同操作的变量。比如：ticket就是共享数据。
3. 同步监视器，俗称：锁。任何一个类的对象，都可以充当锁。
4. 要求多个线程必须要共用同一把锁。

- 在实现Runnable接口创建多线程的方式中，我们可以考虑使用this充当同步监视器。
- 在继承Thread类创建多线程的方式中，慎用this充当同步监视器，考虑使用当前类充当同步监视器。

**代码示例：**

**实现Runnable接口形式同步代码块**

```java
public class Ticket implements Runnable {
    private int tick = 100;

    @Override
    public void run() {

        while (true) {
            synchronized (this) {
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
                } else {
                    break;
                }
            }
        }
    }
}

class TicketTest {
    public static void main(String[] args) {
        Ticket ticket = new Ticket();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```

**继承Thread类形式同步代码块**

```java
public class Ticket2 extends Thread {
    private static int tick = 100;
    private static Object object = new Object();

    public Ticket2() {
    }

    @Override
    public void run() {

        while (true) {
            synchronized (object) {
            //synchronized (Ticket2.class) {//通过反射调用当前类
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为" + tick--);
                } else {
                    break;
                }
            }

        }
    }
}

class TicketTest2 {
    public static void main(String[] args) {
        Ticket2 ticket1 = new Ticket2();
        Ticket2 ticket2 = new Ticket2();
        Ticket2 ticket3 = new Ticket2();

        ticket1.setName("窗口1");
        ticket2.setName("窗口2");
        ticket3.setName("窗口3");

        ticket1.start();
        ticket2.start();
        ticket3.start();


    }
}
```



#### 2.2 方式二：同步方法

如果操作共享数据的代码完整的声明在一个方法中，我们不妨将此方法声明同步的。

```java
public synchronized void show(String namer){
....
}
```

**代码示例：**

```java
public class Ticket3 implements Runnable {
    private int tick = 100;
    private boolean isFlag = true;

    @Override
    public void run() {
        while (isFlag) {
            show();

        }
    }

    public synchronized void show() {//同步show方法，继承Thread类方法一样，只需同步方法即可，同时需要给方法加static关键字，确保不会创建多个对象
        if (tick > 0) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
        } else {
            isFlag = false;
        }
    }
}

class TicketTest3 {
    public static void main(String[] args) {
        Ticket3 ticket = new Ticket3();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```



#### 2.3 方式三：Lock锁 --- JDK 5.0新增

- 从JDK 5.0开始，Java提供了更强大的线程同步机制--通过显式定义同步锁对象来实现同步。同步锁使用Lock对象充当。
- java.util.concurrent.locks.Lock接口是控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次只能有一个线程对Lock对象加锁，线程开始访问共享资源之前应先获得Lock对象。
- ReentrantLock类实现了Lock，它拥有与 synchronized相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是 Reentrantlock，可以显式加锁、释放锁。

```java
class A {
	//1.实例化ReentrantLock对象
	private final ReenTrantLock lock = new ReenTrantLook();
	public void m() {
		lock.lock //2.先加锁
		try {
			//保证线程同步的代码
		} finally {
			lock.unlock(); //3.后解锁
		}
	}
}
//注意：如果同步代码块有异常，要将unlock()写入finally语句块中
```

**代码示例：**

```java
class Window implements Runnable {
    private int ticket = 100;

    //1.实例化ReentrantLock
    private ReentrantLock lock = new ReentrantLock();

    @Override
    public void run() {
        while (true) {
            try {
                //2.调用锁定方法lock()
                lock.lock();

                if (ticket > 0) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() +
                        "：售票，票号为：" + ticket);
                    ticket--;
                } else {
                    break;
                }
            } finally {
                //3.调用解锁方法：unlock()
                lock.unlock();
            }
        }
    }
}


public class LockTest {
    public static void main(String[] args) {
        Window w = new Window();
        Thread t1 = new Thread(w);
        Thread t2 = new Thread(w);
        Thread t3 = new Thread(w);
        t1.setName("窗口1");
        t2.setName("窗口2");
        t3.setName("窗口3");
        t1.start();
        t2.start();
        t3.start();
    }
}
```



### 3.同步方法的总结：

在《 Thinking in Java》中，是这么说的：对于并发工作，你需要某种方式来防止两个任务访问相同的资源（其实就是共享资源竞争）。防止这种冲突的方法就是当资源被一个任务使用时，在其上加锁。第一个访问某项资源的任务必须锁定这项资源，使其他仼务在其被解锁之前，就无法访问它了，而在其被解锁之时，另一个任务就可以锁定并使用它了。

**synchronized的锁是什么**：

1. 任意对象都可以作为同步锁。所有对象都自动含有单一的锁（监视器）
2. 同步方法的锁：静态方法（类名.class）、非静态方法（this）
3. 同步代码块：自己指定，很多时候也是指定为this或类名.class

**注意点：**

1. 必须确保使用同一个资源的多个线程共用一把锁，这个非常重要，否则就无法保证共享资源的安全
2. 一个线程类中的所有静态方法共用同一把锁（类名.class），所有非静态方法共用同一把锁（this），同步代码块（指定需谨慎）
3. 同步方法仍然涉及到同步监视器，只是不需要我们显式的声明。
4. 非静态的同步方法，同步监视器是：this
5. 静态的同步方法，同步监视器是：当前类本身



### 4. 同步的范围：

**如何找问题，即代码是否存在线程安全？（非常重要**）

（1）明确哪些代码是多线程运行的代码

（2）明确多个线程是否有共享数据

（3）明确多线程运行代码中是否有多条语句操作共享数据

**如何解决呢？（非常重要）**

对多条操作共享数据的语句，只能让一个线程都执行完，在执行过程中，其他线程不可以参与执行。 即所有操作共享数据的这些语句都要放在同步范围中

**注意点：**

范围太小：没锁住所有有安全问题的代码 范围太大：没发挥多线程的功能。



### 5. 面试题：

**1. synchronized 与 Lock的异同？**

1. 相同：二者都可以解决线程安全问题

2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器

3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）

4. 使用的优先顺序：

   Lock---> 同步代码块（已经进入了方法体，分配了相应资源 ) --->同步方法（在方法体之外)

5. 利弊： 同步的方式，解决了线程的安全问题。---好处 操作同步代码时，只能一个线程参与，其他线程等待。相当于是一个单线程的过程，效率低。

**2. Java是如何解决线程安全问题的，有几种方式？并对比几种方式的不同**

利用同步锁的方式，有三种方式同步代码块、同步方法和用lock方法

**3. synchronized和Lock方式解决线程安全问题的对比**

1. 相同：二者都可以解决线程安全问题
2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器
3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）



### 6. 线程安全的单例模式

```java
//使用同步机制将单例模式中的懒汉式改写为线程安全的。
class Bank {
    private static Bank instance = null;

    private Bank() {
    }

    public static Bank getInstance() {
        //方式一：效率稍差
        //        synchronized (Bank.class) {
        //            if(instance == null){
        //
        //                instance = new Bank();
        //            }
        //            return instance;
        //        }
        //方式二：效率更高
        if (instance == null) {
            synchronized (Bank.class) {
                if (instance == null) {
                    instance = new Bank();
                }
            }
        }

        return instance;
    }
}
```



### 7. 死锁问题

1. 死锁的理解： 不同的线程分别占用对方需要的同步资源不放弃，都在等待对方放弃自己需要的同步资源，就形成了线程的死锁
2. 说明：

- 出现死锁后，不会出现异常，不会出现提示，只是所的线程都处于阻塞状态，无法继续

- 我们使用同步时，要避免出现死锁。

  **死锁举例：**

```java
public static void main(String[] args) {

    StringBuffer s1 = new StringBuffer();
    StringBuffer s2 = new StringBuffer();


    new Thread(){
        @Override
        public void run() {

            synchronized (s1){

                s1.append("a");
                s2.append("1");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }


                synchronized (s2){
                    s1.append("b");
                    s2.append("2");

                    System.out.println(s1);
                    System.out.println(s2);
                }


            }

        }
    }.start();


    new Thread(new Runnable() {
        @Override
        public void run() {
            synchronized (s2){

                s1.append("c");
                s2.append("3");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                synchronized (s1){
                    s1.append("d");
                    s2.append("4");

                    System.out.println(s1);
                    System.out.println(s2);
                }
            }
        }
    }).start();
}
```



## 五、线程通讯

为了解决线程的死锁问题，引入线程通讯



### 1. 线程通信涉及到的三个方法：

- wait():一旦执行此方法，当前线程就进入阻塞状态，并释放同步监视器。
- notify():一旦执行此方法，就会唤醒被wait的一个线程。如果有多个线程被wait，就唤醒优先级高的那个。
- notifyAll():一旦执行此方法，就会唤醒所有被wait的线程。



### 2. 说明：

- wait()，notify()，notifyAll()三个方法必须使用在同步代码块或同步方法中。

- wait()，notify()，notifyAll()三个方法的调用者必须是同步代码块或同步方法中的同步监视器。

  否则，会出现IllegalMonitorStateException异常

- wait()，notify()，notifyAll()三个方法是定义在java.lang.Object类中。

**代码示例：**

使用两个线程打印 1-100，线程1, 线程2 交替打印。

```java
class MyThread implements Runnable {
    private int number = 1;
    private Object object = new Object();

    @Override
    public void run() {
        while (true) {

            synchronized (object) {
                object.notify();//调用notify()方法唤醒线程
                if (number <= 100) {
                    //线程休眠
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() + number);
                    number++;

                    try {
                        object.wait();//打印输出一次后调用wait()方法将线程阻塞
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                } else {
                    break;
                }
            }
        }
    }
}

public class CommunicationTest {
    public static void main(String[] args) {
        MyThread myThread = new MyThread();

        Thread thread1 = new Thread(myThread);
        Thread thread2 = new Thread(myThread);

        thread1.setName("线程1:");
        thread2.setName("线程2:");

        thread1.start();
        thread2.start();
    }
}
```



### 3. 面试题：

sleep() 和 wait()的异同？

相同点：一旦执行方法，都可以使得当前的线程进入阻塞状态。

不同点：

1）两个方法声明的位置不同：Thread类中声明sleep() , Object类中声明wait()

2）调用的要求不同：sleep()可以在任何需要的场景下调用。 wait()必须使用在同步代码块或同步方法中

3）关于是否释放同步监视器：如果两个方法都使用在同步代码块或同步方法中，sleep()不会释放锁，wait()会释放锁。



### 4. 释放锁的操作：

- 当前线程的同步方法、同步代码块执行结束
- 当前线程在同步代码块、同步方法中遇到 break、 return终止了该代码块该方法的继续执行。
- 当前线程在同步代码块、同步方法中出现了未处理的Error或 Exception，导致异常结束。
- 当前线程在同步代码块、同步方法中执行了线程对象的 wait()方法，当前线程暂停，并释放锁



### 5. 不会释放锁的操作：

- 线程执行同步代码块或同步方法时，程序调用 Thread. sleep()、Thread yield()方法暂停当前线程的执行
- 线程执行同步代码块时，其他线程调用了该线程的 suspend()方法将该线程挂起，该线程不会释放锁（同步监视器）
- 应尽量避免使用 suspend()和 resume()来控制线程



## 六、JDK 5.0新增线程创建方式



### 1. 新增方式一：实现Callable接口。

**实现方法：**

1. 创建一个实现Callable的实现类
2. 实现call方法，将此线程需要执行的操作声明在call()中
3. 创建Callable接口实现类的对象
4. 将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
5. 将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
6. 获取Callable中call方法的返回值

**代码示例：**

```java
//1.创建一个实现Callable的实现类
class NumThread implements Callable{
    //2.实现call方法，将此线程需要执行的操作声明在call()中
    @Override
    public Object call() throws Exception {
        int sum = 0;
        for (int i = 1; i <= 100; i++) {
            if(i % 2 == 0){
                System.out.println(i);
                sum += i;
            }
        }
        return sum;
    }
}


public class ThreadNew {
    public static void main(String[] args) {
        //3.创建Callable接口实现类的对象
        NumThread numThread = new NumThread();
        //4.将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
        FutureTask futureTask = new FutureTask(numThread);
        //5.将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
        new Thread(futureTask).start();

        try {
            //6.获取Callable中call方法的返回值
            //get()返回值即为FutureTask构造器参数Callable实现类重写的call()的返回值。
            Object sum = futureTask.get();
            System.out.println("总和为：" + sum);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (ExecutionException e) {
            e.printStackTrace();
        }
    }

}
```

**如何理解实现Callable接口的方式创建多线程比实现Runnable接口创建多线程方式强大？**

1. call()可以返回值的。
2. call()可以抛出异常，被外面的操作捕获，获取异常的信息
3. Callable是支持泛型的



### 2. 新增方式二：使用线程池

背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程对性能影响很大。

**解决方案：**

提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。可以避免频繁创建销毁、实现重复利用。类似生活中的公共交通工具。

**实现方法：**

1. 提供指定线程数量的线程池
2. 执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
3. 关闭连接池

**相关API：**

```java
JDK 5.0起提供了线程池相关AP|： Executor Service和 Executors

Executor Service：真正的线程池接口。常见子类 Thread Poolexecutor
void execute(Runnable command）：执行任务/命令，没有返回值，一般用来执行Runnable
<T> Future<T> submit（Callable<T>task）：执行任务，有返回值，一般又来执行Callable
void shutdown()：关闭连接池

Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池
Executors. newCachedThreadPool()：创建一个可根据需要创建新线程的线程池
Executors.newFⅸedthreadPool(n)；创建一个可重用固定线程数的线程池
EXecutors. newSingleThreadEXecutor()：创建一个只有一个线程的线程池
Executors. new thread Poo(n)：创建一个线程池，它可安排在给定延迟后运行命令或者定期地执行。
```

**代码示例：**

```java
class NumberThread implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 == 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

class NumberThread1 implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 != 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

public class ThreadPool {

    public static void main(String[] args) {
        //1. 提供指定线程数量的线程池
        ExecutorService service = Executors.newFixedThreadPool(10);
        ThreadPoolExecutor service1 = (ThreadPoolExecutor) service;
        //设置线程池的属性
//        System.out.println(service.getClass());
//        service1.setCorePoolSize(15);
//        service1.setKeepAliveTime();


        //2.执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
        service.execute(new NumberThread());//适合适用于Runnable
        service.execute(new NumberThread1());//适合适用于Runnable

//        service.submit(Callable callable);//适合使用于Callable
        //3.关闭连接池
        service.shutdown();
    }

}
```

**应用线程池的好处：**

1. 提高响应速度（减少了创建新线程的时间）

2. 降低资源消耗（重复利用线程池中线程，不需要每次都创建）

3. 便于线程管理

   corePoolSize：核心池的大小

   maximumPoolSize：最大线程数

   keepAliveTime：线程没任务时最多保持多长时间后会终止

**面试题：Java中多线程的创建有几种方式？四种。**

JDK 5.0以前：

- 即继承Thread类重run方法
- 实现Runnable接口实现run方法

JDK 5.0以后：

- 实现callable接口，实现call方法
- 利用线程池, firstPicture=https://picsum.photos/id/113/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=3, userId=null, description=合理利用多线程可以提高应用程序的响应；对图形化界面更有意义，可增强用户体验；提高计算机系统CPU的利用率；改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。, tagIds=1), org.apache.catalina.session.StandardSessionFacade@80d4e86, {}]}
2021-05-01 18:05:48.277 DEBUG 6852 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.updateById   : ==>  Preparing: UPDATE t_blog SET title=?, content=?, first_picture=?, flag=?, appreciation=?, share_statement=?, commentabled=?, published=?, recommend=?, update_time=?, type_id=?, user_id=?, description=?, tag_ids=? WHERE id=?
2021-05-01 18:05:48.280 DEBUG 6852 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.updateById   : ==> Parameters: java多线程(String), 在进行多线程的内容之前我们需要首先了解涉及操作系统的几个知识点。



## 一、程序、进程、线程



### 1. 程序(program)

概念：是为完成特定任务、用某种语言编写的一组指令的集合。即指一段静态的代码。



### 2. 进程(process)

概念：程序的一次执行过程，或是正在运行的一个程序。 说明：进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域



### 3. 线程(thread)

概念：进程可进一步细化为线程，是一个程序内部的一条执行路径。 说明：线程作为调度和执行的单位，每个线程拥独立的运行栈和程序计数器(pc)，线程切换的开销小。

![image-20200411195447115](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195852.png)

**内存结构：**

![image-20200411195509394](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195855.png)

> 进程可以细化为多个线程。 每个线程，拥有自己独立的：栈、程序计数器 多个线程，共享同一个进程中的结构：方法区、堆。



## 二、并行与并发



### 1. 单核CPU与多核CPU

- 单核CPU，其实是一种假的多线程，因为在一个时间单元内，也只能执行一个线程的任务。涉及到CPU处理线程的方式，CPU在单位时间（也就是说一个时间片内）内只能处理一个线程，于是就将其他的线程设置为阻塞状态，加入到阻塞队列中，等到处理完成当前线程后从就绪队列中取出新的线程进行处理，由于切换和处理时间很快用户感知不到于是用户便认为CPU在同一时间内处理多个线程。
- 多核CPU，才能更好的发挥多线程的效率。（现在的服务器都是多核的）
- 一个Java应用程序java.exe，其实至少三个线程：main()主线程，gc()垃圾回收线程，异常处理线程。当然如果发生异常，会影响主线程。



### 2. 并行与并发的理解

并行：多个CPU同时执行多个任务。比如：多个人同时做不同的事。

并发：一个CPU(采用时间片)同时执行多个任务。比如：秒杀、多个人做同一件事



## 为什么要使用多线程？

当我们在进行商品抢购的时候，在支付按钮上总是有个计时器在进行倒计时，但是我们此时仍然可以进行商品信息的查看，这个计时器和我们浏览商品信息的线程是同时进行的，这样也就实现了抢购场景，增加了用户的体验。



### 多线程程序的优点：

1. 提高应用程序的响应。对图形化界面更有意义，可增强用户体验。
2. 提高计算机系统CPU的利用率。
3. 改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。



### 应用的场景

1. 程序需要同时执行两个或多个任务。
2. 程序需要实现一些需要等待的任务时，如用户输入、文件读写操作、网络操作、搜索等
3. 需要一些后台运行的程序时



## 三、Thread类

Java语言的JVM允许程序运行多个线程，它通过 java. lang.Thread类来体现



### 1. Thread类的特性

每个线程都是通过某个特定 Thread对象的run（方法来完成操作的，经常把run()方法的主体称为线程体 通过该 Thread对象的 start（方法来启动这个线程，而非直接调用run



### 2. 构造器：

- Thread()：创建新的 Thread对象
- Thread（String threadName）：创建线程并指定线程实例名
- Thread（Runnable target）：指定创建线程的目标对象，它实现了 Runnable接口中的run方法
- Thread（Runnable target， String name）：创建新的 Thread对象



### 3. 创建多线程的两种方式

3.1. 方式一继承Thread类的方式：

1. 创建一个继承于Thread类的子类
2. 重写Thread类的run() --> 将此线程执行的操作声明在run()中
3. 创建Thread类的子类的对象
4. 通过此对象调用start()：①启动当前线程 ② 调用当前线程的run()

**注意点：**

1. 我们启动一个线程，必须调用start()，不能调用run()的方式启动线程。 如果再启动一个线程，必须重新创建一个Thread子类的对象，调用此对象的start().（注意后面的点）
2. 如果自己手动调用run()方法，那么就只是普通方法，没有启动多线程模式
3. run（方法由JVM调用，什么时候调用，执行的过程控制都有操作系统的CPU调度决定。
4. 想要启动多线程，必须调用 start方法。
5. 一个线程对象只能调用一次 start()方法启动，如果重复调用了，则将抛出异常“lllegalThreadStateException”.

**代码示例**

```java
//1.继承Thread类
class MyThread extends Thread {
    public MyThread() {
    }

    //2.重run方法
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            if (i % 2 == 0) {
                System.out.println(i);
            }
        }
    }
}

public class ThreadTest {
    public static void main(String[] args) {
//3.新建Thread对象
        MyThread myThread = new MyThread();
        //4.调用start方法
        myThread.start();
    }
}
```

![image-20200411221700419](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195859.png)

3.2. 方式二实现Runnable接口的方式：

1. 创建一个实现了Runnable接口的类
2. 实现类去实现Runnable中的抽象方法：run()
3. 创建实现类的对象
4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
5. 通过Thread类的对象调用start()

**代码示例：**

```java
//1. 创建一个实现了Runnable接口的类
public class RunnableTest implements Runnable {
    // 2. 实现类去实现Runnable中的抽象方法：run()
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            System.out.println(i);
        }
    }
}

class test {
    public static void main(String[] args) {
        //3. 创建实现类的对象
        RunnableTest runnableTest = new RunnableTest();
        //4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
        Thread thread = new Thread(runnableTest);
        //5. 通过Thread类的对象调用start()
        thread.start();

    }
}
```

**两种方式的对比：**

开发中优先选择：实现Runnable接口的方式

**原因：**

1. 实现的方式没类的单继承性的局限性

 2. 实现的方式更适合来处理多个线程共享数据的情况。

**联系：**public class Thread implements Runnable

**相同点：**两种方式都需要重写run(),将线程要执行的逻辑声明在run()中。 目前两种方式，要想启动线程，都是调用的Thread类中的start()。

**也可以采用创建匿名类的方式**

```java
public class ThreadDemo {
    public static void main(String[] args) {

        //创建Thread类的匿名子类的方式
        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 == 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 != 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();


    }
}
```



### 4. Thread类的常用方法

4.1 常用方法：

1. start():启动当前线程；调用当前线程的run()，只有Thread类和他的子类才能调用start()方法
2. run(): 通常需要重写Thread类中的此方法，将创建的线程要执行的操作声明在此方法中
3. currentThread():静态方法，返回执行当前代码的线程
4. getName():获取当前线程的名字
5. setName():设置当前线程的名字
6. yield():释放当前cpu的执行权
7. join():在线程a中调用线程b的join(),此时线程a就进入阻塞状态，直到线程b完全执行完以后，线程a才结束阻塞状态。
8. stop():已过时。当执行此方法时，强制结束当前线程。
9. sleep(long millitime):让当前线程“睡眠”指定的millitime毫秒。在指定的millitime毫秒时间内，当前线程是阻塞状态。
10. isAlive():判断当前线程是否存活

4.2 线程的优先级：

- MAX_PRIORITY：10
- MIN _PRIORITY：1
- NORM_PRIORITY：5 -->默认优先级

获取和设置当前线程的优先级：

- getPriority():获取线程的优先级
- setPriority(int p):设置线程的优先级

> 说明：高优先级的线程要抢占低优先级线程CPU的执行权。但是只是从概率上讲，高优先级的线程高概率的情况下被执行。并不意味着只当高优先级的线程执行完以后，低优先级的线程才执行。

线程通信：wait() / notify() / notifyAll() :此三个方法定义在Object类中的。

**线程的分类**

- 守护线程，如：垃圾回收线程，依赖于主线程而存在
- 用户线程，如：main方法的线程



### 5. Thread的生命周期

**线程的五种状态：**

- 新建：当一个 Thread类或其子类的对象被声明并创建时，新生的线程对象处于新建状态
- 就绪：处于新建状态的线程被start()后，将进入线程队列等待CPU时间片，此时它已具备了运行的条件，只是没分配到CPU资源
- 运行：当就绪的线程被调度并获得CPU资源时，便进入运行状态，run()方法定义了线程的操作和功能
- 阻塞：在某种特殊情况下，被人为挂起或执行输入输出操作时，让出CPU并临时中止自己的执行，进入阻塞状态
- 死亡：线程完成了它的全部工作或线程被提前强制性地中止或出现异常导致结束

![image-20200414132655458](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195904.png)

**说明：**

1. 生命周期关注两个概念：状态、相应的方法
2. 关注：状态a-->状态b:哪些方法执行了（回调方法） 某个方法主动调用：状态a-->状态b
3. 阻塞：临时状态，不可以作为最终状态
4. 死亡：最终状态。



## 四、线程的同步机制



### 1.背景

例子：创建个窗口卖票，总票数为100张.使用实现Runnable接口的方式

- 问题：卖票过程中，出现了重票、错票 -->出现了线程的安全问题
- 问题出现的原因：当某个线程操作车票的过程中，尚未操作完成时，其他线程参与进来，也操作车票。
- 如何解决：当一个线程a在操作ticket的时候，其他线程不能参与进来。直到线程a操作完ticket时，其他线程才可以开始操作ticket。这种情况即使线程a出现了阻塞，也不能被改变。



### 2. Java解决方案：同步机制

在Java中，我们通过同步机制，来解决线程的安全问题。



#### 2.1 方式一：同步代码块

```java
synchronized(同步监视器){//同步监视器就是需要同步线程的公共对象
   //需要被同步的代码
    
}
```

**说明：**

1. 操作共享数据的代码，即为需要被同步的代码。 -->不能包含代码多了，也不能包含代码少了。
2. 共享数据：多个线程共同操作的变量。比如：ticket就是共享数据。
3. 同步监视器，俗称：锁。任何一个类的对象，都可以充当锁。
4. 要求多个线程必须要共用同一把锁。

- 在实现Runnable接口创建多线程的方式中，我们可以考虑使用this充当同步监视器。
- 在继承Thread类创建多线程的方式中，慎用this充当同步监视器，考虑使用当前类充当同步监视器。

**代码示例：**

**实现Runnable接口形式同步代码块**

```java
public class Ticket implements Runnable {
    private int tick = 100;

    @Override
    public void run() {

        while (true) {
            synchronized (this) {
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
                } else {
                    break;
                }
            }
        }
    }
}

class TicketTest {
    public static void main(String[] args) {
        Ticket ticket = new Ticket();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```

**继承Thread类形式同步代码块**

```java
public class Ticket2 extends Thread {
    private static int tick = 100;
    private static Object object = new Object();

    public Ticket2() {
    }

    @Override
    public void run() {

        while (true) {
            synchronized (object) {
            //synchronized (Ticket2.class) {//通过反射调用当前类
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为" + tick--);
                } else {
                    break;
                }
            }

        }
    }
}

class TicketTest2 {
    public static void main(String[] args) {
        Ticket2 ticket1 = new Ticket2();
        Ticket2 ticket2 = new Ticket2();
        Ticket2 ticket3 = new Ticket2();

        ticket1.setName("窗口1");
        ticket2.setName("窗口2");
        ticket3.setName("窗口3");

        ticket1.start();
        ticket2.start();
        ticket3.start();


    }
}
```



#### 2.2 方式二：同步方法

如果操作共享数据的代码完整的声明在一个方法中，我们不妨将此方法声明同步的。

```java
public synchronized void show(String namer){
....
}
```

**代码示例：**

```java
public class Ticket3 implements Runnable {
    private int tick = 100;
    private boolean isFlag = true;

    @Override
    public void run() {
        while (isFlag) {
            show();

        }
    }

    public synchronized void show() {//同步show方法，继承Thread类方法一样，只需同步方法即可，同时需要给方法加static关键字，确保不会创建多个对象
        if (tick > 0) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
        } else {
            isFlag = false;
        }
    }
}

class TicketTest3 {
    public static void main(String[] args) {
        Ticket3 ticket = new Ticket3();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```



#### 2.3 方式三：Lock锁 --- JDK 5.0新增

- 从JDK 5.0开始，Java提供了更强大的线程同步机制--通过显式定义同步锁对象来实现同步。同步锁使用Lock对象充当。
- java.util.concurrent.locks.Lock接口是控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次只能有一个线程对Lock对象加锁，线程开始访问共享资源之前应先获得Lock对象。
- ReentrantLock类实现了Lock，它拥有与 synchronized相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是 Reentrantlock，可以显式加锁、释放锁。

```java
class A {
	//1.实例化ReentrantLock对象
	private final ReenTrantLock lock = new ReenTrantLook();
	public void m() {
		lock.lock //2.先加锁
		try {
			//保证线程同步的代码
		} finally {
			lock.unlock(); //3.后解锁
		}
	}
}
//注意：如果同步代码块有异常，要将unlock()写入finally语句块中
```

**代码示例：**

```java
class Window implements Runnable {
    private int ticket = 100;

    //1.实例化ReentrantLock
    private ReentrantLock lock = new ReentrantLock();

    @Override
    public void run() {
        while (true) {
            try {
                //2.调用锁定方法lock()
                lock.lock();

                if (ticket > 0) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() +
                        "：售票，票号为：" + ticket);
                    ticket--;
                } else {
                    break;
                }
            } finally {
                //3.调用解锁方法：unlock()
                lock.unlock();
            }
        }
    }
}


public class LockTest {
    public static void main(String[] args) {
        Window w = new Window();
        Thread t1 = new Thread(w);
        Thread t2 = new Thread(w);
        Thread t3 = new Thread(w);
        t1.setName("窗口1");
        t2.setName("窗口2");
        t3.setName("窗口3");
        t1.start();
        t2.start();
        t3.start();
    }
}
```



### 3.同步方法的总结：

在《 Thinking in Java》中，是这么说的：对于并发工作，你需要某种方式来防止两个任务访问相同的资源（其实就是共享资源竞争）。防止这种冲突的方法就是当资源被一个任务使用时，在其上加锁。第一个访问某项资源的任务必须锁定这项资源，使其他仼务在其被解锁之前，就无法访问它了，而在其被解锁之时，另一个任务就可以锁定并使用它了。

**synchronized的锁是什么**：

1. 任意对象都可以作为同步锁。所有对象都自动含有单一的锁（监视器）
2. 同步方法的锁：静态方法（类名.class）、非静态方法（this）
3. 同步代码块：自己指定，很多时候也是指定为this或类名.class

**注意点：**

1. 必须确保使用同一个资源的多个线程共用一把锁，这个非常重要，否则就无法保证共享资源的安全
2. 一个线程类中的所有静态方法共用同一把锁（类名.class），所有非静态方法共用同一把锁（this），同步代码块（指定需谨慎）
3. 同步方法仍然涉及到同步监视器，只是不需要我们显式的声明。
4. 非静态的同步方法，同步监视器是：this
5. 静态的同步方法，同步监视器是：当前类本身



### 4. 同步的范围：

**如何找问题，即代码是否存在线程安全？（非常重要**）

（1）明确哪些代码是多线程运行的代码

（2）明确多个线程是否有共享数据

（3）明确多线程运行代码中是否有多条语句操作共享数据

**如何解决呢？（非常重要）**

对多条操作共享数据的语句，只能让一个线程都执行完，在执行过程中，其他线程不可以参与执行。 即所有操作共享数据的这些语句都要放在同步范围中

**注意点：**

范围太小：没锁住所有有安全问题的代码 范围太大：没发挥多线程的功能。



### 5. 面试题：

**1. synchronized 与 Lock的异同？**

1. 相同：二者都可以解决线程安全问题

2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器

3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）

4. 使用的优先顺序：

   Lock---> 同步代码块（已经进入了方法体，分配了相应资源 ) --->同步方法（在方法体之外)

5. 利弊： 同步的方式，解决了线程的安全问题。---好处 操作同步代码时，只能一个线程参与，其他线程等待。相当于是一个单线程的过程，效率低。

**2. Java是如何解决线程安全问题的，有几种方式？并对比几种方式的不同**

利用同步锁的方式，有三种方式同步代码块、同步方法和用lock方法

**3. synchronized和Lock方式解决线程安全问题的对比**

1. 相同：二者都可以解决线程安全问题
2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器
3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）



### 6. 线程安全的单例模式

```java
//使用同步机制将单例模式中的懒汉式改写为线程安全的。
class Bank {
    private static Bank instance = null;

    private Bank() {
    }

    public static Bank getInstance() {
        //方式一：效率稍差
        //        synchronized (Bank.class) {
        //            if(instance == null){
        //
        //                instance = new Bank();
        //            }
        //            return instance;
        //        }
        //方式二：效率更高
        if (instance == null) {
            synchronized (Bank.class) {
                if (instance == null) {
                    instance = new Bank();
                }
            }
        }

        return instance;
    }
}
```



### 7. 死锁问题

1. 死锁的理解： 不同的线程分别占用对方需要的同步资源不放弃，都在等待对方放弃自己需要的同步资源，就形成了线程的死锁
2. 说明：

- 出现死锁后，不会出现异常，不会出现提示，只是所的线程都处于阻塞状态，无法继续

- 我们使用同步时，要避免出现死锁。

  **死锁举例：**

```java
public static void main(String[] args) {

    StringBuffer s1 = new StringBuffer();
    StringBuffer s2 = new StringBuffer();


    new Thread(){
        @Override
        public void run() {

            synchronized (s1){

                s1.append("a");
                s2.append("1");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }


                synchronized (s2){
                    s1.append("b");
                    s2.append("2");

                    System.out.println(s1);
                    System.out.println(s2);
                }


            }

        }
    }.start();


    new Thread(new Runnable() {
        @Override
        public void run() {
            synchronized (s2){

                s1.append("c");
                s2.append("3");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                synchronized (s1){
                    s1.append("d");
                    s2.append("4");

                    System.out.println(s1);
                    System.out.println(s2);
                }
            }
        }
    }).start();
}
```



## 五、线程通讯

为了解决线程的死锁问题，引入线程通讯



### 1. 线程通信涉及到的三个方法：

- wait():一旦执行此方法，当前线程就进入阻塞状态，并释放同步监视器。
- notify():一旦执行此方法，就会唤醒被wait的一个线程。如果有多个线程被wait，就唤醒优先级高的那个。
- notifyAll():一旦执行此方法，就会唤醒所有被wait的线程。



### 2. 说明：

- wait()，notify()，notifyAll()三个方法必须使用在同步代码块或同步方法中。

- wait()，notify()，notifyAll()三个方法的调用者必须是同步代码块或同步方法中的同步监视器。

  否则，会出现IllegalMonitorStateException异常

- wait()，notify()，notifyAll()三个方法是定义在java.lang.Object类中。

**代码示例：**

使用两个线程打印 1-100，线程1, 线程2 交替打印。

```java
class MyThread implements Runnable {
    private int number = 1;
    private Object object = new Object();

    @Override
    public void run() {
        while (true) {

            synchronized (object) {
                object.notify();//调用notify()方法唤醒线程
                if (number <= 100) {
                    //线程休眠
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() + number);
                    number++;

                    try {
                        object.wait();//打印输出一次后调用wait()方法将线程阻塞
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                } else {
                    break;
                }
            }
        }
    }
}

public class CommunicationTest {
    public static void main(String[] args) {
        MyThread myThread = new MyThread();

        Thread thread1 = new Thread(myThread);
        Thread thread2 = new Thread(myThread);

        thread1.setName("线程1:");
        thread2.setName("线程2:");

        thread1.start();
        thread2.start();
    }
}
```



### 3. 面试题：

sleep() 和 wait()的异同？

相同点：一旦执行方法，都可以使得当前的线程进入阻塞状态。

不同点：

1）两个方法声明的位置不同：Thread类中声明sleep() , Object类中声明wait()

2）调用的要求不同：sleep()可以在任何需要的场景下调用。 wait()必须使用在同步代码块或同步方法中

3）关于是否释放同步监视器：如果两个方法都使用在同步代码块或同步方法中，sleep()不会释放锁，wait()会释放锁。



### 4. 释放锁的操作：

- 当前线程的同步方法、同步代码块执行结束
- 当前线程在同步代码块、同步方法中遇到 break、 return终止了该代码块该方法的继续执行。
- 当前线程在同步代码块、同步方法中出现了未处理的Error或 Exception，导致异常结束。
- 当前线程在同步代码块、同步方法中执行了线程对象的 wait()方法，当前线程暂停，并释放锁



### 5. 不会释放锁的操作：

- 线程执行同步代码块或同步方法时，程序调用 Thread. sleep()、Thread yield()方法暂停当前线程的执行
- 线程执行同步代码块时，其他线程调用了该线程的 suspend()方法将该线程挂起，该线程不会释放锁（同步监视器）
- 应尽量避免使用 suspend()和 resume()来控制线程



## 六、JDK 5.0新增线程创建方式



### 1. 新增方式一：实现Callable接口。

**实现方法：**

1. 创建一个实现Callable的实现类
2. 实现call方法，将此线程需要执行的操作声明在call()中
3. 创建Callable接口实现类的对象
4. 将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
5. 将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
6. 获取Callable中call方法的返回值

**代码示例：**

```java
//1.创建一个实现Callable的实现类
class NumThread implements Callable{
    //2.实现call方法，将此线程需要执行的操作声明在call()中
    @Override
    public Object call() throws Exception {
        int sum = 0;
        for (int i = 1; i <= 100; i++) {
            if(i % 2 == 0){
                System.out.println(i);
                sum += i;
            }
        }
        return sum;
    }
}


public class ThreadNew {
    public static void main(String[] args) {
        //3.创建Callable接口实现类的对象
        NumThread numThread = new NumThread();
        //4.将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
        FutureTask futureTask = new FutureTask(numThread);
        //5.将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
        new Thread(futureTask).start();

        try {
            //6.获取Callable中call方法的返回值
            //get()返回值即为FutureTask构造器参数Callable实现类重写的call()的返回值。
            Object sum = futureTask.get();
            System.out.println("总和为：" + sum);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (ExecutionException e) {
            e.printStackTrace();
        }
    }

}
```

**如何理解实现Callable接口的方式创建多线程比实现Runnable接口创建多线程方式强大？**

1. call()可以返回值的。
2. call()可以抛出异常，被外面的操作捕获，获取异常的信息
3. Callable是支持泛型的



### 2. 新增方式二：使用线程池

背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程对性能影响很大。

**解决方案：**

提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。可以避免频繁创建销毁、实现重复利用。类似生活中的公共交通工具。

**实现方法：**

1. 提供指定线程数量的线程池
2. 执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
3. 关闭连接池

**相关API：**

```java
JDK 5.0起提供了线程池相关AP|： Executor Service和 Executors

Executor Service：真正的线程池接口。常见子类 Thread Poolexecutor
void execute(Runnable command）：执行任务/命令，没有返回值，一般用来执行Runnable
<T> Future<T> submit（Callable<T>task）：执行任务，有返回值，一般又来执行Callable
void shutdown()：关闭连接池

Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池
Executors. newCachedThreadPool()：创建一个可根据需要创建新线程的线程池
Executors.newFⅸedthreadPool(n)；创建一个可重用固定线程数的线程池
EXecutors. newSingleThreadEXecutor()：创建一个只有一个线程的线程池
Executors. new thread Poo(n)：创建一个线程池，它可安排在给定延迟后运行命令或者定期地执行。
```

**代码示例：**

```java
class NumberThread implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 == 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

class NumberThread1 implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 != 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

public class ThreadPool {

    public static void main(String[] args) {
        //1. 提供指定线程数量的线程池
        ExecutorService service = Executors.newFixedThreadPool(10);
        ThreadPoolExecutor service1 = (ThreadPoolExecutor) service;
        //设置线程池的属性
//        System.out.println(service.getClass());
//        service1.setCorePoolSize(15);
//        service1.setKeepAliveTime();


        //2.执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
        service.execute(new NumberThread());//适合适用于Runnable
        service.execute(new NumberThread1());//适合适用于Runnable

//        service.submit(Callable callable);//适合使用于Callable
        //3.关闭连接池
        service.shutdown();
    }

}
```

**应用线程池的好处：**

1. 提高响应速度（减少了创建新线程的时间）

2. 降低资源消耗（重复利用线程池中线程，不需要每次都创建）

3. 便于线程管理

   corePoolSize：核心池的大小

   maximumPoolSize：最大线程数

   keepAliveTime：线程没任务时最多保持多长时间后会终止

**面试题：Java中多线程的创建有几种方式？四种。**

JDK 5.0以前：

- 即继承Thread类重run方法
- 实现Runnable接口实现run方法

JDK 5.0以后：

- 实现callable接口，实现call方法
- 利用线程池(String), https://picsum.photos/id/113/800/450(String), 原创(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T18:05:48.273(LocalDateTime), 3(Long), 1(Long), 合理利用多线程可以提高应用程序的响应；对图形化界面更有意义，可增强用户体验；提高计算机系统CPU的利用率；改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。(String), 1(String), 4(Long)
2021-05-01 18:05:48.283 DEBUG 6852 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.updateById   : <==    Updates: 1
2021-05-01 18:05:48.336  INFO 6852 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 18:05:48.340  INFO 6852 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=修改成功}]}
2021-05-01 18:05:48.347 DEBUG 6852 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 18:05:48.348 DEBUG 6852 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 18:05:48.349 DEBUG 6852 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 18:05:48.350 DEBUG 6852 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 18:05:48.350 DEBUG 6852 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 18:05:48.352 DEBUG 6852 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:05:48.356 DEBUG 6852 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 18:05:48.356 DEBUG 6852 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 18:05:48.357 DEBUG 6852 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 18:05:48.357  INFO 6852 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 18:05:53.459  INFO 17096 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:05:53.464 DEBUG 17096 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id
2021-05-01 18:05:53.464 DEBUG 17096 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:05:53.467 DEBUG 17096 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:05:53.471 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:05:53.472 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:05:53.474 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:05:53.478 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:05:53.479 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:05:53.480 DEBUG 17096 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:05:53.481  INFO 17096 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:08:01.643  INFO 15532 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 15532 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 18:08:01.645 DEBUG 15532 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 18:08:01.645  INFO 15532 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 18:08:01.681  INFO 15532 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 18:08:01.682  INFO 15532 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 18:08:02.815  INFO 15532 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 18:08:02.821  INFO 15532 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 18:08:02.822  INFO 15532 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 18:08:02.823  INFO 15532 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 18:08:02.823  INFO 15532 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 18:08:02.823  INFO 15532 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 18:08:02.826  INFO 15532 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 18:08:02.898  INFO 15532 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 18:08:02.898  INFO 15532 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1216 ms
2021-05-01 18:08:02.974  INFO 15532 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 18:08:03.195  INFO 15532 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 18:08:04.325  INFO 15532 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 18:08:04.404  INFO 15532 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 18:08:04.720  WARN 15532 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2021-05-01 18:08:04.746  INFO 15532 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 18:08:04.754  INFO 15532 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.49 seconds (JVM running for 4.408)
2021-05-01 18:08:09.249  INFO 11812 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 11812 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 18:08:09.251 DEBUG 11812 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 18:08:09.251  INFO 11812 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 18:08:09.293  INFO 11812 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 18:08:09.293  INFO 11812 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 18:08:10.326  INFO 11812 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 18:08:10.333  INFO 11812 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 18:08:10.333  INFO 11812 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 18:08:10.334  INFO 11812 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 18:08:10.335  INFO 11812 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 18:08:10.335  INFO 11812 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 18:08:10.337  INFO 11812 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 18:08:10.411  INFO 11812 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 18:08:10.412  INFO 11812 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1118 ms
2021-05-01 18:08:10.472  INFO 11812 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 18:08:10.703  INFO 11812 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 18:08:11.764  INFO 11812 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 18:08:11.840  INFO 11812 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 18:08:12.152  INFO 11812 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 18:08:12.217  INFO 11812 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 18:08:12.225  INFO 11812 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.345 seconds (JVM running for 4.291)
2021-05-01 18:08:17.205  INFO 11812 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 18:08:17.205  INFO 11812 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 18:08:17.207  INFO 11812 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2021-05-01 18:08:17.242  INFO 11812 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:08:17.278 DEBUG 11812 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:08:17.300 DEBUG 11812 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:08:17.325 DEBUG 11812 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:08:17.347 DEBUG 11812 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:08:17.347 DEBUG 11812 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:08:17.351 DEBUG 11812 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:08:17.356 DEBUG 11812 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:08:17.357 DEBUG 11812 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:08:17.359 DEBUG 11812 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:08:17.360  INFO 11812 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:11:39.806  INFO 11812 --- [http-nio-8888-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:11:39.811 DEBUG 11812 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:11:39.811 DEBUG 11812 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:11:39.815 DEBUG 11812 --- [http-nio-8888-exec-10] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:11:39.819 DEBUG 11812 --- [http-nio-8888-exec-10] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:11:39.819 DEBUG 11812 --- [http-nio-8888-exec-10] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:11:39.821 DEBUG 11812 --- [http-nio-8888-exec-10] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:11:39.825 DEBUG 11812 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:11:39.826 DEBUG 11812 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:11:39.829 DEBUG 11812 --- [http-nio-8888-exec-10] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:11:39.829  INFO 11812 --- [http-nio-8888-exec-10] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:12:32.017  INFO 11812 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:12:32.025 DEBUG 11812 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:12:32.027 DEBUG 11812 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:12:32.032 DEBUG 11812 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:12:32.037 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:12:32.037 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:12:32.041 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:12:32.047 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:12:32.048 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:12:32.051 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:12:32.051  INFO 11812 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:12:33.035  INFO 11812 --- [http-nio-8888-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:12:33.038 DEBUG 11812 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:12:33.039 DEBUG 11812 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:12:33.040 DEBUG 11812 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:12:33.044 DEBUG 11812 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:12:33.045 DEBUG 11812 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:12:33.046 DEBUG 11812 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:12:33.050 DEBUG 11812 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:12:33.050 DEBUG 11812 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:12:33.051 DEBUG 11812 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:12:33.051  INFO 11812 --- [http-nio-8888-exec-6] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:12:45.595  INFO 11812 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:12:45.599 DEBUG 11812 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:12:45.599 DEBUG 11812 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:12:45.601 DEBUG 11812 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:12:45.605 DEBUG 11812 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:12:45.605 DEBUG 11812 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:12:45.607 DEBUG 11812 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:12:45.611 DEBUG 11812 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:12:45.612 DEBUG 11812 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:12:45.613 DEBUG 11812 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:12:45.613  INFO 11812 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:14:14.687  INFO 11812 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:14:14.693 DEBUG 11812 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:14:14.694 DEBUG 11812 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:14:14.701 DEBUG 11812 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:14:14.707 DEBUG 11812 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:14:14.707 DEBUG 11812 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:14:14.709 DEBUG 11812 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:14:14.712 DEBUG 11812 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:14:14.713 DEBUG 11812 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:14:14.716 DEBUG 11812 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:14:14.716  INFO 11812 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:15:16.005  INFO 11812 --- [http-nio-8888-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:15:16.011 DEBUG 11812 --- [http-nio-8888-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:15:16.012 DEBUG 11812 --- [http-nio-8888-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:15:16.014 DEBUG 11812 --- [http-nio-8888-exec-5] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:15:16.018 DEBUG 11812 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:15:16.018 DEBUG 11812 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:15:16.020 DEBUG 11812 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:15:16.025 DEBUG 11812 --- [http-nio-8888-exec-5] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:15:16.025 DEBUG 11812 --- [http-nio-8888-exec-5] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:15:16.027 DEBUG 11812 --- [http-nio-8888-exec-5] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:15:16.027  INFO 11812 --- [http-nio-8888-exec-5] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:16:07.805  INFO 11812 --- [http-nio-8888-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:16:07.813 DEBUG 11812 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:16:07.814 DEBUG 11812 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:16:07.817 DEBUG 11812 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:16:07.822 DEBUG 11812 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:16:07.823 DEBUG 11812 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:16:07.824 DEBUG 11812 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:16:07.830 DEBUG 11812 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:16:07.830 DEBUG 11812 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:16:07.833 DEBUG 11812 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:16:07.834  INFO 11812 --- [http-nio-8888-exec-7] com.manster.aspect.LogAspect             : Result : index
2021-05-01 18:16:58.894  INFO 11812 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 18:16:58.899 DEBUG 11812 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 18:16:58.899 DEBUG 11812 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 18:16:58.902 DEBUG 11812 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 18:16:58.905 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 18:16:58.906 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 18:16:58.908 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 18:16:58.912 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 18:16:58.912 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 18:16:58.913 DEBUG 11812 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 18:16:58.913  INFO 11812 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 20:29:22.205  INFO 7172 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 7172 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 20:29:22.207 DEBUG 7172 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 20:29:22.208  INFO 7172 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 20:29:22.244  INFO 7172 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 20:29:22.244  INFO 7172 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 20:29:23.389  INFO 7172 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 20:29:23.396  INFO 7172 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 20:29:23.396  INFO 7172 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 20:29:23.398  INFO 7172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 20:29:23.398  INFO 7172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 20:29:23.398  INFO 7172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 20:29:23.401  INFO 7172 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 20:29:23.475  INFO 7172 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 20:29:23.475  INFO 7172 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1229 ms
2021-05-01 20:29:23.533  INFO 7172 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 20:29:23.758  INFO 7172 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 20:29:24.945  INFO 7172 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 20:29:25.023  INFO 7172 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 20:29:25.344  INFO 7172 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 20:29:25.410  INFO 7172 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 20:29:25.418  INFO 7172 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.644 seconds (JVM running for 4.581)
2021-05-01 20:29:36.040  INFO 16740 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 16740 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 20:29:36.042 DEBUG 16740 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 20:29:36.042  INFO 16740 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 20:29:36.082  INFO 16740 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 20:29:36.082  INFO 16740 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 20:29:37.304  INFO 16740 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 20:29:37.311  INFO 16740 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 20:29:37.311  INFO 16740 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 20:29:37.313  INFO 16740 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 20:29:37.313  INFO 16740 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 20:29:37.313  INFO 16740 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 20:29:37.316  INFO 16740 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 20:29:37.394  INFO 16740 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 20:29:37.395  INFO 16740 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1312 ms
2021-05-01 20:29:37.473  INFO 16740 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 20:29:37.707  INFO 16740 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 20:29:38.889  INFO 16740 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 20:29:38.975  INFO 16740 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 20:29:39.335  INFO 16740 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 20:29:39.367  INFO 16740 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 20:29:39.376  INFO 16740 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.76 seconds (JVM running for 4.699)
2021-05-01 20:29:44.272  INFO 16740 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 20:29:44.272  INFO 16740 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 20:29:44.273  INFO 16740 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 20:29:44.293  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 20:29:44.298  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 20:29:47.708  INFO 16740 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@9507c34, {}]}
2021-05-01 20:29:47.781 DEBUG 16740 --- [http-nio-9000-exec-9] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 20:29:47.799 DEBUG 16740 --- [http-nio-9000-exec-9] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 20:29:47.815 DEBUG 16740 --- [http-nio-9000-exec-9] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 20:29:47.819  INFO 16740 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Result : main
2021-05-01 20:29:49.132  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 20:29:49.168 DEBUG 16740 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:29:49.168 DEBUG 16740 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:29:49.169 DEBUG 16740 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:29:49.175 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:29:49.176 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:29:49.181 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 20:29:49.189 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:29:49.189 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:29:49.191 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:29:49.192  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:29:58.697  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/2/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[2, {}]}
2021-05-01 20:29:58.702 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:29:58.704 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:29:58.707 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:29:58.716 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 20:29:58.716 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 20:29:58.719 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 20:29:58.723 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 20:29:58.724 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 2(Long)
2021-05-01 20:29:58.728 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 20:29:58.728  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 20:30:18.929  INFO 16740 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 20:30:18.930  INFO 16740 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : login
2021-05-01 20:30:22.563  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@9507c34, {}]}
2021-05-01 20:30:22.572 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 20:30:22.572 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 20:30:22.574 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 20:30:22.575  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : main
2021-05-01 20:30:23.890  INFO 16740 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 20:30:23.896 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:30:23.897 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:30:23.898 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:30:23.898 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:30:23.899 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:30:23.903 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 20:30:23.907 DEBUG 16740 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:30:23.907 DEBUG 16740 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:30:23.909 DEBUG 16740 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:30:23.909  INFO 16740 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:30:28.149  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.input', args=[{}]}
2021-05-01 20:30:28.155 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:30:28.155 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:30:28.157 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:30:28.161 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 20:30:28.162 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 20:30:28.164 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 20:30:28.165  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 20:31:17.602  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/2/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.delete', args=[2, {}]}
2021-05-01 20:31:17.619 DEBUG 16740 --- [http-nio-9000-exec-1] c.m.mapper.BlogAndTagsMapper.delete      : ==>  Preparing: DELETE FROM t_blog_tags WHERE (blog_id = ?)
2021-05-01 20:31:17.620 DEBUG 16740 --- [http-nio-9000-exec-1] c.m.mapper.BlogAndTagsMapper.delete      : ==> Parameters: 2(Long)
2021-05-01 20:31:17.623 DEBUG 16740 --- [http-nio-9000-exec-1] c.m.mapper.BlogAndTagsMapper.delete      : <==    Updates: 0
2021-05-01 20:31:17.624 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.deleteById   : ==>  Preparing: DELETE FROM t_blog WHERE id=?
2021-05-01 20:31:17.624 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.deleteById   : ==> Parameters: 2(Long)
2021-05-01 20:31:17.625 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.BlogMapper.deleteById   : <==    Updates: 1
2021-05-01 20:31:17.709  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 20:31:17.727  INFO 16740 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=删除成功}]}
2021-05-01 20:31:17.736 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:31:17.736 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:31:17.739 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:31:17.740 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:31:17.741 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:31:17.742 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 20:31:17.746 DEBUG 16740 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:31:17.747 DEBUG 16740 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:31:17.748 DEBUG 16740 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:31:17.749  INFO 16740 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:31:20.303  INFO 16740 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=null, title=实现前后端分页, content=# 1.环境

后端单表查询利器：[MyBatis-Plus](https://mp.baomidou.com/)

前端表格插件：[Datatables](http://datatables.club/)

MySQL8

SpringBoot

Thymeleaf

# 2.数据库表关系

![table1](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210430194454.png)

# 3.插入测试数据

```sql
insert into academy values (null,'软件学院');
insert into department values (null,'软件工程',1);
insert into building values (null,1);
insert into building values (null,0);
insert into building values (null,0);
insert into building values (null,1);
insert into building values (null,1);
insert into building values (null,1);
insert into dormitory values (101,null,1,1,6,null);
insert into dormitory values (101,null,2,1,6,null);
insert into dormitory values (101,null,3,1,6,null);
insert into dormitory values (101,null,4,1,6,null);
insert into dormitory values (101,null,5,1,6,null);
insert into dormitory values (101,null,6,1,6,null);
insert into dormitory values (304,null,1,1,6,null);
insert into dormitory values (305,null,1,3,6,null);
insert into dormitory values (306,null,1,2,6,null);
insert into dormitory values (304,null,2,2,6,null);
insert into property values (null,'桌子','1',304,50.0,1);
insert into property values (null,'椅子','1',304,30.0,1);
insert into property values (null,'桌子','1',305,50.0,1);
insert into property values (null,'椅子','1',305,30.0,0);
insert into property values (null,'桌子','1',306,50.0,1);
insert into property values (null,'窗帘','1',304,100.0,1);
insert into property values (null,'暖瓶','1',304,40.0,1);
insert into property values (null,'窗帘','1',305,100.0,1);
insert into property values (null,'暖瓶','1',305,40.0,0);
insert into property values (null,'窗帘','1',306,100.0,1);
insert into property values (null,'门','1',306,150.0,1);
insert into property values (null,'灯管','1',306,60.0,1);
insert into property values (null,'簸箕','1',306,9.99,1);
insert into property values (null,'簸箕','2',304,9.99,1);
insert into role  values (null,'管理员');
insert into administrator values ('2018006509','manster','bebd3785c6ff7d5f60573bcbde9281f1',1);
```

# 4.配置分页

1.配置主类

```java
@SpringBootApplication
@MapperScan("cn.tyut.ks.dao")
public class KsApplication {

    public static void main(String[] args) {
        SpringApplication.run(KsApplication.class, args);
    }

}
```

2.配置分页插件

```java
package cn.tyut.ks.config;

import com.baomidou.mybatisplus.annotation.DbType;
import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @Author 孟浩然
 * @Date 2021/3/1
 **/
@Configuration
public class MybatisPlusConfig {
    @Bean
    public MybatisPlusInterceptor mybatisPlusInterceptor() {
        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
        return interceptor;
    }
}
```

3.实体类

```java
package cn.tyut.ks.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * 财产
 *
 * @author
 */
@Data
public class Property implements Serializable {

    private Integer id;

    /**
     * 财产名
     */
    private String name;

    /**
     * 宿舍号
     */
    private Integer did;

    /**
     * 财产价格
     */
    private BigDecimal price;

    /**
     * 财产状态，有正常与故障两种
     */
    private String state;

    private static final long serialVersionUID = 1L;
}
```

# 5.测试分页

```java
package cn.tyut.ks.mapper;

import cn.tyut.ks.dao.PropertyMapper;
import cn.tyut.ks.entity.Property;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @Author manster
 * @Date 2021/3/2
 **/
@SpringBootTest
public class PropertyMapperTest {

    @Autowired
    private PropertyMapper propertyMapper;

    @Test
    public void selectPage(){
        LambdaQueryWrapper<Property> userLambdaQueryWrapper = Wrappers.lambdaQuery();
        userLambdaQueryWrapper.like(Property::getName , "桌");

        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , userLambdaQueryWrapper);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }

}

```

```
总页数： 2
总记录数： 3
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=3, name=桌子, did=305, price=50.00, state=1)
```

查询全部进行分页,就是将 `queryWrapper` 置为 `null`

```java
    @Test
    public void selectPage(){
        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }
```

```
总页数： 6
总记录数： 12
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=2, name=椅子, did=304, price=30.00, state=1)
```

# 6.实现分页

```sequence
    点击->>财产列表: 打开页面
    财产列表->>PropertyController:请求页面信息'/property/list'
    PropertyController-->>财产列表:返回'propertylist'页面
    财产列表->>PropertyController:ajax请求分页信息'/property/page'
    PropertyController->>PropertyService:调用allpage(Long index,Long size)方法
    PropertyService->>PropertyMapper:调用selectPage(Page<Property> page,@Param Wrapper<Property> queryWarpper)
    PropertyMapper-->>PropertyService:返回'IPage<Property> propertyIPage'
    PropertyService-->>PropertyController:返回'IPage<Property> propertyIPage'
    PropertyController-->>财产列表:返回封装好的pageUtil(页面信息类)
```

## 1.html

```html
<table id="mytable" class="table table-bordered table-hover">
<thead>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</thead>
<tbody>

</tbody>
<tfoot>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</tfoot>
</table>



<script>
    var _datatable;
    $(function () {
        var _columns = [
            {"data": "id"},
            {"data": "name"},
            {"data": "did"},
            {
                "data": "price",
                "render": function (data, type, full){
                    return data.toFixed(2);
                }
            },
            {
                "data": "state",
                "render": function (data, type, full) {
                    switch (data) {
                        case '1':
                            return "正常";
                            break;
                        case '0':
                            return "故障";
                            break;
                    }
                }
            },
            {
                "data": function (row, type, val, meta) {
                    var _id = row.id;
                    var editUrl = "/property/edit?id=" + _id;
                    var deleteUrl = "/property/delete?id=" + _id;
                    return '<a href="/property/edit?id=' + _id + '" type="button" class="btn btn-sm btn-primary"><i class="fa fa-edit">修改</i></a>&nbsp;&nbsp;'
                        + '<a href="/property/delete?id=' + _id + '" type="button" class="btn btn-sm btn-danger" ><i class="fa fa-trash">删除</i></button></a>';
                }
            }
        ];
        _datatable = App.initDataTables("/property/page",_columns);
    });

    function search(){
        var did = $("#did").val();
        var param = {
            "did": did
        };
        _datatable.settings()[0].ajax.data = param;
        _datatable.ajax.reload();
    }
</script>
```

## 2.app.js

```javascript
var App = function () {
    /**
     * 初始化DataTables
     */
    var handlerInitDataTables = function (url,columns) {
        var _datatable = $("#mytable").DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "processing": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
            "serverSide": true,
            "ajax": {
                "url": url,
                "type": "post"
            },
            "columns": columns,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
        });
        return _datatable;
    };

    return {
        /**
         * 初始化datatables
         * @param url
         * @param columns
         * @returns {jQuery}
         */
        initDataTables: function (url,columns) {
            return handlerInitDataTables(url,columns);
        },
    }
}();

```

## 3.PropertyController

```java
    /**
     * 查询全部数据
     * @param draw 请求次数
     * @param start 其实数据记录
     * @param length 页面大小
     * @param did 如果有值则为搜索
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    public PageUtil<Property> page(Integer draw, Integer start, Integer length, String did){
        //datatable服务传回的数据为start为第几条，而mybatisplus要的是页码，这里转换一下
        int index = 1;
        if(start > 0){
            index += start/length;
        }
        IPage<Property> propertyIPage;
        if(StringUtils.hasText(did)){
            propertyIPage = propertyService.searchPage(Integer.parseInt(did), index, length);
        }else {
            propertyIPage = propertyService.allPage(index, length);
        }
        pageUtil = new PageUtil();
        pageUtil.setDraw(draw);
        pageUtil.setData(propertyIPage.getRecords());
        pageUtil.setRecordsFiltered(propertyIPage.getTotal());
        pageUtil.setRecordsTotal(propertyIPage.getTotal());
        return pageUtil;
    }
```

## 4.PageUtil

```java
@Data
public class PageUtil<T> {

    private int draw;//请求次数

    private long recordsFiltered; //过滤后总数

    private long recordsTotal; //记录总数

    private List<T> data; //分页查询到的数据
}
```

## 5.PropertyServiceImpl

```java
    /**
     * 实现分页
     * @param index 页码
     * @param size 页面数据量
     * @return
     */
    public IPage<Property> allPage(long index, long size) {
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);

        return propertyIPage;
    }

    /**
     * 实现分页搜索
     * @param did 宿舍号
     * @param index 页码
     * @param size 每页数据量
     * @return
     */
    @Override
    public IPage<Property> searchPage(int did, long index, long size) {
        QueryWrapper<Property> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("did",did);
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , queryWrapper);

        return propertyIPage;
    }
```, firstPicture=https://picsum.photos/id/1073/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=面对大量的数据时，我们需要将数据分页，分页又分为前端分页和后端分页，我们需要前后端分页结合起来实现真分页以提高性能。这里我们使用 MyBatis-Plus 和 Datatables 来进行实现前后端分页。, tagIds=8), org.apache.catalina.session.StandardSessionFacade@9507c34, {}]}
2021-05-01 20:31:20.315 DEBUG 16740 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.insert     : ==>  Preparing: INSERT INTO t_blog ( title, content, first_picture, flag, views, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, description, tag_ids ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-05-01 20:31:20.319 DEBUG 16740 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.insert     : ==> Parameters: 实现前后端分页(String), # 1.环境

后端单表查询利器：[MyBatis-Plus](https://mp.baomidou.com/)

前端表格插件：[Datatables](http://datatables.club/)

MySQL8

SpringBoot

Thymeleaf

# 2.数据库表关系

![table1](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210430194454.png)

# 3.插入测试数据

```sql
insert into academy values (null,'软件学院');
insert into department values (null,'软件工程',1);
insert into building values (null,1);
insert into building values (null,0);
insert into building values (null,0);
insert into building values (null,1);
insert into building values (null,1);
insert into building values (null,1);
insert into dormitory values (101,null,1,1,6,null);
insert into dormitory values (101,null,2,1,6,null);
insert into dormitory values (101,null,3,1,6,null);
insert into dormitory values (101,null,4,1,6,null);
insert into dormitory values (101,null,5,1,6,null);
insert into dormitory values (101,null,6,1,6,null);
insert into dormitory values (304,null,1,1,6,null);
insert into dormitory values (305,null,1,3,6,null);
insert into dormitory values (306,null,1,2,6,null);
insert into dormitory values (304,null,2,2,6,null);
insert into property values (null,'桌子','1',304,50.0,1);
insert into property values (null,'椅子','1',304,30.0,1);
insert into property values (null,'桌子','1',305,50.0,1);
insert into property values (null,'椅子','1',305,30.0,0);
insert into property values (null,'桌子','1',306,50.0,1);
insert into property values (null,'窗帘','1',304,100.0,1);
insert into property values (null,'暖瓶','1',304,40.0,1);
insert into property values (null,'窗帘','1',305,100.0,1);
insert into property values (null,'暖瓶','1',305,40.0,0);
insert into property values (null,'窗帘','1',306,100.0,1);
insert into property values (null,'门','1',306,150.0,1);
insert into property values (null,'灯管','1',306,60.0,1);
insert into property values (null,'簸箕','1',306,9.99,1);
insert into property values (null,'簸箕','2',304,9.99,1);
insert into role  values (null,'管理员');
insert into administrator values ('2018006509','manster','bebd3785c6ff7d5f60573bcbde9281f1',1);
```

# 4.配置分页

1.配置主类

```java
@SpringBootApplication
@MapperScan("cn.tyut.ks.dao")
public class KsApplication {

    public static void main(String[] args) {
        SpringApplication.run(KsApplication.class, args);
    }

}
```

2.配置分页插件

```java
package cn.tyut.ks.config;

import com.baomidou.mybatisplus.annotation.DbType;
import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;
import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * @Author 孟浩然
 * @Date 2021/3/1
 **/
@Configuration
public class MybatisPlusConfig {
    @Bean
    public MybatisPlusInterceptor mybatisPlusInterceptor() {
        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
        return interceptor;
    }
}
```

3.实体类

```java
package cn.tyut.ks.entity;

import lombok.Data;

import java.io.Serializable;
import java.math.BigDecimal;

/**
 * 财产
 *
 * @author
 */
@Data
public class Property implements Serializable {

    private Integer id;

    /**
     * 财产名
     */
    private String name;

    /**
     * 宿舍号
     */
    private Integer did;

    /**
     * 财产价格
     */
    private BigDecimal price;

    /**
     * 财产状态，有正常与故障两种
     */
    private String state;

    private static final long serialVersionUID = 1L;
}
```

# 5.测试分页

```java
package cn.tyut.ks.mapper;

import cn.tyut.ks.dao.PropertyMapper;
import cn.tyut.ks.entity.Property;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @Author manster
 * @Date 2021/3/2
 **/
@SpringBootTest
public class PropertyMapperTest {

    @Autowired
    private PropertyMapper propertyMapper;

    @Test
    public void selectPage(){
        LambdaQueryWrapper<Property> userLambdaQueryWrapper = Wrappers.lambdaQuery();
        userLambdaQueryWrapper.like(Property::getName , "桌");

        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , userLambdaQueryWrapper);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }

}

```

```
总页数： 2
总记录数： 3
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=3, name=桌子, did=305, price=50.00, state=1)
```

查询全部进行分页,就是将 `queryWrapper` 置为 `null`

```java
    @Test
    public void selectPage(){
        Page<Property> propertyPage = new Page<>(1 , 2);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);
        System.out.println("总页数： "+propertyIPage.getPages());
        System.out.println("总记录数： "+propertyIPage.getTotal());
        propertyIPage.getRecords().forEach(System.out::println);
    }
```

```
总页数： 6
总记录数： 12
Property(id=1, name=桌子, did=304, price=50.00, state=1)
Property(id=2, name=椅子, did=304, price=30.00, state=1)
```

# 6.实现分页

```sequence
    点击->>财产列表: 打开页面
    财产列表->>PropertyController:请求页面信息'/property/list'
    PropertyController-->>财产列表:返回'propertylist'页面
    财产列表->>PropertyController:ajax请求分页信息'/property/page'
    PropertyController->>PropertyService:调用allpage(Long index,Long size)方法
    PropertyService->>PropertyMapper:调用selectPage(Page<Property> page,@Param Wrapper<Property> queryWarpper)
    PropertyMapper-->>PropertyService:返回'IPage<Property> propertyIPage'
    PropertyService-->>PropertyController:返回'IPage<Property> propertyIPage'
    PropertyController-->>财产列表:返回封装好的pageUtil(页面信息类)
```

## 1.html

```html
<table id="mytable" class="table table-bordered table-hover">
<thead>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</thead>
<tbody>

</tbody>
<tfoot>
    <tr>
        <th>财产ID</th>
        <th>财产名</th>
        <th>宿舍号</th>
        <th>财产价格</th>
        <th>财产状态</th>
        <th>操作</th>
    </tr>
</tfoot>
</table>



<script>
    var _datatable;
    $(function () {
        var _columns = [
            {"data": "id"},
            {"data": "name"},
            {"data": "did"},
            {
                "data": "price",
                "render": function (data, type, full){
                    return data.toFixed(2);
                }
            },
            {
                "data": "state",
                "render": function (data, type, full) {
                    switch (data) {
                        case '1':
                            return "正常";
                            break;
                        case '0':
                            return "故障";
                            break;
                    }
                }
            },
            {
                "data": function (row, type, val, meta) {
                    var _id = row.id;
                    var editUrl = "/property/edit?id=" + _id;
                    var deleteUrl = "/property/delete?id=" + _id;
                    return '<a href="/property/edit?id=' + _id + '" type="button" class="btn btn-sm btn-primary"><i class="fa fa-edit">修改</i></a>&nbsp;&nbsp;'
                        + '<a href="/property/delete?id=' + _id + '" type="button" class="btn btn-sm btn-danger" ><i class="fa fa-trash">删除</i></button></a>';
                }
            }
        ];
        _datatable = App.initDataTables("/property/page",_columns);
    });

    function search(){
        var did = $("#did").val();
        var param = {
            "did": did
        };
        _datatable.settings()[0].ajax.data = param;
        _datatable.ajax.reload();
    }
</script>
```

## 2.app.js

```javascript
var App = function () {
    /**
     * 初始化DataTables
     */
    var handlerInitDataTables = function (url,columns) {
        var _datatable = $("#mytable").DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": false,
            "info": true,
            "processing": true,
            "autoWidth": false,
            "responsive": true,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
            "serverSide": true,
            "ajax": {
                "url": url,
                "type": "post"
            },
            "columns": columns,
            "language": {
                "sProcessing": "处理中...",
                "sLengthMenu": "显示 _MENU_ 项结果",
                "sZeroRecords": "没有匹配结果",
                "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                "sInfoPostFix": "",
                "sSearch": "搜索:",
                "sUrl": "",
                "sEmptyTable": "表中数据为空",
                "sLoadingRecords": "载入中...",
                "sInfoThousands": ",",
                "oPaginate": {
                    "sFirst": "首页",
                    "sPrevious": "上页",
                    "sNext": "下页",
                    "sLast": "末页"
                },
                "oAria": {
                    "sSortAscending": ": 以升序排列此列",
                    "sSortDescending": ": 以降序排列此列"
                }
            },
        });
        return _datatable;
    };

    return {
        /**
         * 初始化datatables
         * @param url
         * @param columns
         * @returns {jQuery}
         */
        initDataTables: function (url,columns) {
            return handlerInitDataTables(url,columns);
        },
    }
}();

```

## 3.PropertyController

```java
    /**
     * 查询全部数据
     * @param draw 请求次数
     * @param start 其实数据记录
     * @param length 页面大小
     * @param did 如果有值则为搜索
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    public PageUtil<Property> page(Integer draw, Integer start, Integer length, String did){
        //datatable服务传回的数据为start为第几条，而mybatisplus要的是页码，这里转换一下
        int index = 1;
        if(start > 0){
            index += start/length;
        }
        IPage<Property> propertyIPage;
        if(StringUtils.hasText(did)){
            propertyIPage = propertyService.searchPage(Integer.parseInt(did), index, length);
        }else {
            propertyIPage = propertyService.allPage(index, length);
        }
        pageUtil = new PageUtil();
        pageUtil.setDraw(draw);
        pageUtil.setData(propertyIPage.getRecords());
        pageUtil.setRecordsFiltered(propertyIPage.getTotal());
        pageUtil.setRecordsTotal(propertyIPage.getTotal());
        return pageUtil;
    }
```

## 4.PageUtil

```java
@Data
public class PageUtil<T> {

    private int draw;//请求次数

    private long recordsFiltered; //过滤后总数

    private long recordsTotal; //记录总数

    private List<T> data; //分页查询到的数据
}
```

## 5.PropertyServiceImpl

```java
    /**
     * 实现分页
     * @param index 页码
     * @param size 页面数据量
     * @return
     */
    public IPage<Property> allPage(long index, long size) {
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , null);

        return propertyIPage;
    }

    /**
     * 实现分页搜索
     * @param did 宿舍号
     * @param index 页码
     * @param size 每页数据量
     * @return
     */
    @Override
    public IPage<Property> searchPage(int did, long index, long size) {
        QueryWrapper<Property> queryWrapper = new QueryWrapper<>();
        queryWrapper.eq("did",did);
        Page<Property> propertyPage = new Page<>(index , size);
        IPage<Property> propertyIPage = propertyMapper.selectPage(propertyPage , queryWrapper);

        return propertyIPage;
    }
```(String), https://picsum.photos/id/1073/800/450(String), 原创(String), 0(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T20:31:20.312(LocalDateTime), 2021-05-01T20:31:20.312(LocalDateTime), 2(Long), 1(Long), 面对大量的数据时，我们需要将数据分页，分页又分为前端分页和后端分页，我们需要前后端分页结合起来实现真分页以提高性能。这里我们使用 MyBatis-Plus 和 Datatables 来进行实现前后端分页。(String), 8(String)
2021-05-01 20:31:20.322 DEBUG 16740 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.insert     : <==    Updates: 1
2021-05-01 20:31:20.325 DEBUG 16740 --- [http-nio-9000-exec-5] c.m.mapper.BlogAndTagsMapper.insert      : ==>  Preparing: INSERT INTO t_blog_tags ( tag_id, blog_id ) VALUES ( ?, ? )
2021-05-01 20:31:20.325 DEBUG 16740 --- [http-nio-9000-exec-5] c.m.mapper.BlogAndTagsMapper.insert      : ==> Parameters: 8(Long), 5(Long)
2021-05-01 20:31:20.326 DEBUG 16740 --- [http-nio-9000-exec-5] c.m.mapper.BlogAndTagsMapper.insert      : <==    Updates: 1
2021-05-01 20:31:20.433  INFO 16740 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 20:31:20.437  INFO 16740 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=新增成功}]}
2021-05-01 20:31:20.441 DEBUG 16740 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:31:20.441 DEBUG 16740 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:31:20.442 DEBUG 16740 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:31:20.442 DEBUG 16740 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:31:20.442 DEBUG 16740 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:31:20.444 DEBUG 16740 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 20:31:20.448 DEBUG 16740 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:31:20.448 DEBUG 16740 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:31:20.448 DEBUG 16740 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:31:20.448  INFO 16740 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:31:43.342  INFO 16740 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.input', args=[{}]}
2021-05-01 20:31:43.346 DEBUG 16740 --- [http-nio-9000-exec-9] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:31:43.346 DEBUG 16740 --- [http-nio-9000-exec-9] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:31:43.348 DEBUG 16740 --- [http-nio-9000-exec-9] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:31:43.352 DEBUG 16740 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 20:31:43.352 DEBUG 16740 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 20:31:43.354 DEBUG 16740 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 20:31:43.355  INFO 16740 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 20:31:46.732  INFO 16740 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 20:31:46.736 DEBUG 16740 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:31:46.736 DEBUG 16740 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:31:46.738 DEBUG 16740 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:31:46.739 DEBUG 16740 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:31:46.739 DEBUG 16740 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:31:46.741 DEBUG 16740 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 20:31:46.746 DEBUG 16740 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:31:46.746 DEBUG 16740 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:31:46.746 DEBUG 16740 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:31:46.746  INFO 16740 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:31:51.906  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[3, {}]}
2021-05-01 20:31:51.912 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:31:51.912 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:31:51.913 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:31:51.918 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 20:31:51.918 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 20:31:51.920 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 20:31:51.923 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 20:31:51.924 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 3(Long)
2021-05-01 20:31:51.926 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 20:31:51.926  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 20:32:34.075  INFO 16740 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/3/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.delete', args=[3, {}]}
2021-05-01 20:32:34.082 DEBUG 16740 --- [http-nio-9000-exec-9] c.m.mapper.BlogAndTagsMapper.delete      : ==>  Preparing: DELETE FROM t_blog_tags WHERE (blog_id = ?)
2021-05-01 20:32:34.083 DEBUG 16740 --- [http-nio-9000-exec-9] c.m.mapper.BlogAndTagsMapper.delete      : ==> Parameters: 3(Long)
2021-05-01 20:32:34.084 DEBUG 16740 --- [http-nio-9000-exec-9] c.m.mapper.BlogAndTagsMapper.delete      : <==    Updates: 0
2021-05-01 20:32:34.085 DEBUG 16740 --- [http-nio-9000-exec-9] c.manster.mapper.BlogMapper.deleteById   : ==>  Preparing: DELETE FROM t_blog WHERE id=?
2021-05-01 20:32:34.085 DEBUG 16740 --- [http-nio-9000-exec-9] c.manster.mapper.BlogMapper.deleteById   : ==> Parameters: 3(Long)
2021-05-01 20:32:34.086 DEBUG 16740 --- [http-nio-9000-exec-9] c.manster.mapper.BlogMapper.deleteById   : <==    Updates: 1
2021-05-01 20:32:34.201  INFO 16740 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 20:32:34.205  INFO 16740 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=删除成功}]}
2021-05-01 20:32:34.210 DEBUG 16740 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:32:34.211 DEBUG 16740 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:32:34.211 DEBUG 16740 --- [http-nio-9000-exec-8] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:32:34.212 DEBUG 16740 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:32:34.212 DEBUG 16740 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:32:34.217 DEBUG 16740 --- [http-nio-9000-exec-8] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 20:32:34.220 DEBUG 16740 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:32:34.221 DEBUG 16740 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:32:34.222 DEBUG 16740 --- [http-nio-9000-exec-8] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:32:34.223  INFO 16740 --- [http-nio-9000-exec-8] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:32:36.570  INFO 16740 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=null, title=微信小程序同步歌词, content=**主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```, firstPicture=https://picsum.photos/id/39/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=2, userId=null, description=播放歌曲时我们总希望歌词同步显示出来，这里以微信小程序为例，实现歌曲播放时歌词的同步显示., tagIds=11,12), org.apache.catalina.session.StandardSessionFacade@9507c34, {}]}
2021-05-01 20:32:36.576 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.insert     : ==>  Preparing: INSERT INTO t_blog ( title, content, first_picture, flag, views, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, description, tag_ids ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-05-01 20:32:36.577 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.insert     : ==> Parameters: 微信小程序同步歌词(String), **主要是对于歌词部分的描述**


1. 先在加载页面时异步获取歌词
2. 对歌词进行切分并以对象的形式放入数组中
3. 将每个时间段获得的歌词存起来方便页面渲染
4. 判定该显示那句歌词。将歌词数组进行遍历，如果当前歌曲播放时间等于歌词数组中歌词的时间，就将当前歌词换为这一句;这样当改到下一句时就会等到上一句完全唱完再进行切换

直接看效果

![播放样例](https://img-blog.csdnimg.cn/20210225102350736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODAzNTkz,size_16,color_FFFFFF,t_70#pic_center)
## wxml代码
```html
<!--pages/songDetail/songDetail.wxml-->
<view class="songDetailContainer">

  <view class="musicAuthor">{{song.ar[0].name}}</view>
  <view class="circle"></view>
  
  <!-- 摇杆 -->
  <image class="needle {{isPlay && 'needleRotate'}}" src="/static/images/song/needle.png"></image>
  <!-- 磁盘 -->
  <view class="discContainer {{isPlay && 'discAnimation'}}">
    <image class="disc" src="/static/images/song/disc.png"></image>
    <!-- 歌曲封面图 -->
    <image class="musicImg" src="{{song.al.picUrl}}"></image>
  </view>
  <!-- 歌词 -->
  <view class="scrollLrc">
    <text>{{currentLyric}}</text>
  </view>
  <!-- 进度条控制 -->
  <view class="progressControl">
    <text>{{currentTime}}</text>
    <!-- 总进度条 -->
    <view class="barControl">
      <!-- 实时进度条 -->
      <view class="audio-currentTime-Bar" style="width: {{currentWidth + 'rpx'}}">
        <!-- 小圆球 -->
        <view class="audio-circle"></view>
      </view>
    </view>
    <text>{{durationTime}}</text>
  </view>

  <!-- 歌曲播放控制 -->
  <view class="musicControl">
    <text class="iconfont icon-random"></text>
    <text class="iconfont icon-diyigeshipin" id="pre" bindtap="handleSwitch"></text>
    <text class="iconfont {{isPlay ? 'icon-zanting' : 'icon-kaishi'}} big" bindtap="handleMusicPlay"></text>
    <text class="iconfont icon-zuihouyigeshipin" id="next" bindtap="handleSwitch"></text>
    <text class="iconfont icon-liebiao"></text>
  </view>

</view>

```
## wxss代码
```css
/* pages/songDetail/songDetail.wxss */
.songDetailContainer {
  height: 100%;
  background: rgba(0,0,0,0.5);
  display: flex;
  flex-flow: column;
  align-items: center;
}
/* 底座 */
.circle {
  position: relative;
  z-index: 100;
  width: 60rpx;
  height: 60rpx;
  border-radius: 50%;
  background: #fff;
  margin: 10rpx 0;
}
/* 摇杆 */
.needle {
  position: relative;
  z-index: 99;
  top: -40rpx;
  left: 56rpx;
  width: 192rpx;
  height: 274rpx;
  transform-origin: 40rpx 0;
  transform: rotate(-20deg);
  transition: transform 1s;
}
/* 摇杆落下 */
.needleRotate {
  transform: rotate(0deg);
}
.discContainer {
  position: relative;
  top: -170rpx;
  width: 598rpx;
  height: 598rpx;
}
.discAnimation {
  animation: disc 20s linear infinite;
  animation-delay: 1s;
}
/*设置动画帧 1.from to(只有起始帧和结束帧)  2.百分比(不止两帧)*/
@keyframes disc{
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 磁盘 */
.disc {
  width: 100%;
  height: 100%;
}
/* 歌曲封面 */
.musicImg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  width: 370rpx;
  height: 370rpx;
  border-radius: 50%;
}
/* 歌词显示 */
.scrollLrc {
  position: absolute;
  bottom: 280rpx;
  width: 640rpx;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
}
/* 底部控制器 */
.musicControl {
  position: absolute;
  bottom: 40rpx;
  left: 0;
  border-top: 1rpx solid #fff;
  width: 100%;
  display: flex;
}
.musicControl text {
  width: 20%;
  height: 120rpx;
  line-height: 120rpx;
  text-align: center;
  color: #fff;
  font-size: 50rpx;
}
.musicControl text.big {
  font-size: 80rpx;
}
/* 进度条控制 */
.progressControl {
  position: absolute;
  bottom: 200rpx;
  width: 640rpx;
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
}
.barControl {
  position: relative;
  width: 450rpx;
  height: 4rpx;
  background: rgba(0,0,0,0.4);
  margin: auto;
}
.audio-currentTime-Bar {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  height: 4rpx;
  background: red;
}
/* 小圆球 */
.audio-circle {
  position: absolute;
  right: -12rpx;
  top: -4rpx;
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background: #fff;
}
```
## js代码
首先使用了 `lyric: []` 用来存放所有的歌词对象(以 `{time:0, text:'歌词'} `的形式)

然后使用 `lyricTime`  来对歌曲进行与歌词一样样式的时间来方便进行判断，单位为秒

然后每次对 `currentLyric` 进行操作，方便 wxml 渲染歌词
```js
// pages/songDetail/songDetail.js
import PubSub from 'pubsub-js';
import moment from 'moment';
import request from '../../utils/request';
//获取全局实例
const appInstance = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    isPlay: false,//标识播放状态
    song: {},//歌曲详情对象
    musicId: '',//歌曲Id
    currentTime: '00:00',//当前时长
    durationTime:'00:00',//总时长
    currentWidth: 0,//实时进度条宽度
    lyric: [],//歌词
    lyricTime: 0,//歌词对应的时间
    currentLyric: "",//当前歌词对象
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    //options路由跳转参数
    let musicId = options.song;
    this.setData({
      musicId: musicId
    })
    this.getMusicInfo(musicId);
    this.getLyric(musicId);
    //判断当前页面音乐是否在播放
    if(appInstance.globalData.isMusicPlay && appInstance.globalData.musicId === musicId){
      //修改当前页面音乐播放状态
      this.setData({
        isPlay: true
      })
    }

    //创建控制音乐播放实例对象
    this.backgroundAudioManager = wx.getBackgroundAudioManager();
    //监视音乐播放与暂停
    this.backgroundAudioManager.onPlay(()=>{
      //修改音乐播放状态
      this.changePlayState(true);

      appInstance.globalData.musicId = musicId;
    });
    this.backgroundAudioManager.onPause(()=>{
      this.changePlayState(false);
    });
    this.backgroundAudioManager.onStop(()=>{
      this.changePlayState(false);
    });
    //音乐播放自然结束
    this.backgroundAudioManager.onEnded(()=>{
      //切歌
      PubSub.publish('switchMusic','next');
      this.setData({
        currentWidth: 0,
        currentTime: '00:00',
        lyric: 0,
        lyricTime: 0,
      })
    })
    //监听音乐实时播放的进度
    this.backgroundAudioManager.onTimeUpdate(() => {
      //获取歌词对应时间
      let lyricTime = Math.ceil(this.backgroundAudioManager.currentTime); 
      let currentTime = moment(this.backgroundAudioManager.currentTime * 1000).format('mm:ss');
      let currentWidth = (this.backgroundAudioManager.currentTime/this.backgroundAudioManager.duration) * 450;

      this.setData({
        lyricTime,
        currentTime,
        currentWidth
      })

      this.getCurrentLyric();
    })

  },

  //修改播放状态
  changePlayState(isPlay){
    this.setData({
      isPlay: isPlay
    })
    //修改全局播放状态
    appInstance.globalData.isMusicPlay = isPlay;
  },
  //点击暂停/播放的回调
  handleMusicPlay(){
    //修改是否播放的状态
    let isPlay = !this.data.isPlay;
    // this.setData({
    //   isPlay: isPlay
    // })
    let {musicId} = this.data;
    this.musicControl(isPlay,musicId);
  },
  //请求歌曲信息
  async getMusicInfo(musicId){
    let songData = await request('/song/detail',{ids: musicId});
    let durationTime = moment(songData.songs[0].dt).format('mm:ss');
    this.setData({
      song: songData.songs[0],
      durationTime: durationTime
    })
    //动态修改窗口标题
    wx.setNavigationBarTitle({
      title: this.data.song.name
    })
  },

  //歌曲播放控制功能
  async musicControl(isPlay,musicId){

    if(isPlay){//音乐播放
      //获取音频资源
      let musicLinkData = await request('/song/url',{id: musicId})
      let musicLink = musicLinkData.data[0].url;
      if(musicLink === null){
        wx.showToast({
          title: '请开通会员后听取',
          icon: 'none'
        })
        return;
      }
      //歌曲播放
      this.backgroundAudioManager.src = musicLink;
      this.backgroundAudioManager.title = this.data.song.name;
    }else{//音乐暂停
      this.backgroundAudioManager.pause();
    }
  },

  //歌曲切换
  handleSwitch(event){
    //切换类型
    let type = event.currentTarget.id;

    //关闭当前播放音乐
    this.backgroundAudioManager.stop();

    //订阅来自recommendSong页面
    PubSub.subscribe('musicId',(msg,musicId) => {
      //获取歌曲
      this.getMusicInfo(musicId);
      //自动播放当前音乐
      this.musicControl(true,musicId);
      //取消订阅
      PubSub.unsubscribe('musicId');
    })
    //发布消息数据给recommendSong页面
    PubSub.publish('switchMusic',type);
  },

  //获取歌词
  async getLyric(musicId){
    let lyricData = await request("/lyric", {id: musicId});
    let lyric = this.formatLyric(lyricData.lrc.lyric);
  },

  //传入初始歌词文本text
  formatLyric(text) {
    let result = [];
    let arr = text.split("\n"); //原歌词文本已经换好行了方便很多，我们直接通过换行符“\n”进行切割
    let row = arr.length; //获取歌词行数
    for (let i = 0; i < row; i++) {
      let temp_row = arr[i]; //现在每一行格式大概就是这样"[00:04.302][02:10.00]hello world";
      let temp_arr = temp_row.split("]");//我们可以通过“]”对时间和文本进行分离
      let text = temp_arr.pop(); //把歌词文本从数组中剔除出来，获取到歌词文本了！
      //再对剩下的歌词时间进行处理
      temp_arr.forEach(element => {
        let obj = {};
        let time_arr = element.substr(1, element.length - 1).split(":");//先把多余的“[”去掉，再分离出分、秒
        let s = parseInt(time_arr[0]) * 60 + Math.ceil(time_arr[1]); //把时间转换成与currentTime相同的类型，方便待会实现滚动效果
        obj.time = s;
        obj.text = text;
        result.push(obj); //每一行歌词对象存到组件的lyric歌词属性里
      });
    }
    result.sort(this.sortRule) //由于不同时间的相同歌词我们给排到一起了，所以这里要以时间顺序重新排列一下
    this.setData({
      lyric: result
    })
  },
  sortRule(a, b) { //设置一下排序规则
    return a.time - b.time;
  },

  //控制歌词播放
  getCurrentLyric(){
    let j;
    for(j=0; j<this.data.lyric.length-1; j++){
      if(this.data.lyricTime == this.data.lyric[j].time){
        this.setData({
          currentLyric : this.data.lyric[j].text
        })
      }
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})
```(String), https://picsum.photos/id/39/800/450(String), 原创(String), 0(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T20:32:36.575(LocalDateTime), 2021-05-01T20:32:36.575(LocalDateTime), 2(Long), 1(Long), 播放歌曲时我们总希望歌词同步显示出来，这里以微信小程序为例，实现歌曲播放时歌词的同步显示.(String), 11,12(String)
2021-05-01 20:32:36.579 DEBUG 16740 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.insert     : <==    Updates: 1
2021-05-01 20:32:36.579 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogAndTagsMapper.insert      : ==>  Preparing: INSERT INTO t_blog_tags ( tag_id, blog_id ) VALUES ( ?, ? )
2021-05-01 20:32:36.580 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogAndTagsMapper.insert      : ==> Parameters: 11(Long), 6(Long)
2021-05-01 20:32:36.582 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogAndTagsMapper.insert      : <==    Updates: 1
2021-05-01 20:32:36.583 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogAndTagsMapper.insert      : ==>  Preparing: INSERT INTO t_blog_tags ( tag_id, blog_id ) VALUES ( ?, ? )
2021-05-01 20:32:36.584 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogAndTagsMapper.insert      : ==> Parameters: 12(Long), 6(Long)
2021-05-01 20:32:36.585 DEBUG 16740 --- [http-nio-9000-exec-3] c.m.mapper.BlogAndTagsMapper.insert      : <==    Updates: 1
2021-05-01 20:32:36.726  INFO 16740 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 20:32:36.731  INFO 16740 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=新增成功}]}
2021-05-01 20:32:36.738 DEBUG 16740 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:32:36.738 DEBUG 16740 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:32:36.739 DEBUG 16740 --- [http-nio-9000-exec-7] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:32:36.740 DEBUG 16740 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:32:36.741 DEBUG 16740 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:32:36.742 DEBUG 16740 --- [http-nio-9000-exec-7] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 20:32:36.745 DEBUG 16740 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:32:36.745 DEBUG 16740 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:32:36.746 DEBUG 16740 --- [http-nio-9000-exec-7] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:32:36.747  INFO 16740 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:32:53.342  INFO 16740 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 20:32:53.347 DEBUG 16740 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:32:53.347 DEBUG 16740 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:32:53.348 DEBUG 16740 --- [http-nio-9000-exec-4] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:32:53.349 DEBUG 16740 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:32:53.349 DEBUG 16740 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:32:53.351 DEBUG 16740 --- [http-nio-9000-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 20:32:53.354 DEBUG 16740 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:32:53.355 DEBUG 16740 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:32:53.357 DEBUG 16740 --- [http-nio-9000-exec-4] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:32:53.358  INFO 16740 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:32:58.626  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/4/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.edit', args=[4, {}]}
2021-05-01 20:32:58.631 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:32:58.631 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:32:58.633 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:32:58.637 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 20:32:58.637 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 20:32:58.638 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 20:32:58.643 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE id=?
2021-05-01 20:32:58.643 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : ==> Parameters: 4(Long)
2021-05-01 20:32:58.644 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.BlogMapper.selectById   : <==      Total: 1
2021-05-01 20:32:58.645  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 20:33:00.266  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.input', args=[{}]}
2021-05-01 20:33:00.269 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:33:00.270 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:33:00.272 DEBUG 16740 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:33:00.275 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 20:33:00.275 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 20:33:00.276 DEBUG 16740 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 20:33:00.278  INFO 16740 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 20:33:44.225  INFO 16740 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/4/delete', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.delete', args=[4, {}]}
2021-05-01 20:33:44.232 DEBUG 16740 --- [http-nio-9000-exec-4] c.m.mapper.BlogAndTagsMapper.delete      : ==>  Preparing: DELETE FROM t_blog_tags WHERE (blog_id = ?)
2021-05-01 20:33:44.232 DEBUG 16740 --- [http-nio-9000-exec-4] c.m.mapper.BlogAndTagsMapper.delete      : ==> Parameters: 4(Long)
2021-05-01 20:33:44.233 DEBUG 16740 --- [http-nio-9000-exec-4] c.m.mapper.BlogAndTagsMapper.delete      : <==    Updates: 0
2021-05-01 20:33:44.234 DEBUG 16740 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.deleteById   : ==>  Preparing: DELETE FROM t_blog WHERE id=?
2021-05-01 20:33:44.234 DEBUG 16740 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.deleteById   : ==> Parameters: 4(Long)
2021-05-01 20:33:44.237 DEBUG 16740 --- [http-nio-9000-exec-4] c.manster.mapper.BlogMapper.deleteById   : <==    Updates: 1
2021-05-01 20:33:44.319  INFO 16740 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 20:33:44.323  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=删除成功}]}
2021-05-01 20:33:44.327 DEBUG 16740 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:33:44.328 DEBUG 16740 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:33:44.328 DEBUG 16740 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:33:44.329 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:33:44.329 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:33:44.330 DEBUG 16740 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 2
2021-05-01 20:33:44.340 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:33:44.340 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:33:44.341 DEBUG 16740 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:33:44.342  INFO 16740 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 20:33:50.902  INFO 16740 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=null, title=java多线程, content=在进行多线程的内容之前我们需要首先了解涉及操作系统的几个知识点。



## 一、程序、进程、线程



### 1. 程序(program)

概念：是为完成特定任务、用某种语言编写的一组指令的集合。即指一段静态的代码。



### 2. 进程(process)

概念：程序的一次执行过程，或是正在运行的一个程序。 说明：进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域



### 3. 线程(thread)

概念：进程可进一步细化为线程，是一个程序内部的一条执行路径。 说明：线程作为调度和执行的单位，每个线程拥独立的运行栈和程序计数器(pc)，线程切换的开销小。

![image-20200411195447115](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195852.png)

**内存结构：**

![image-20200411195509394](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195855.png)

> 进程可以细化为多个线程。 每个线程，拥有自己独立的：栈、程序计数器 多个线程，共享同一个进程中的结构：方法区、堆。



## 二、并行与并发



### 1. 单核CPU与多核CPU

- 单核CPU，其实是一种假的多线程，因为在一个时间单元内，也只能执行一个线程的任务。涉及到CPU处理线程的方式，CPU在单位时间（也就是说一个时间片内）内只能处理一个线程，于是就将其他的线程设置为阻塞状态，加入到阻塞队列中，等到处理完成当前线程后从就绪队列中取出新的线程进行处理，由于切换和处理时间很快用户感知不到于是用户便认为CPU在同一时间内处理多个线程。
- 多核CPU，才能更好的发挥多线程的效率。（现在的服务器都是多核的）
- 一个Java应用程序java.exe，其实至少三个线程：main()主线程，gc()垃圾回收线程，异常处理线程。当然如果发生异常，会影响主线程。



### 2. 并行与并发的理解

并行：多个CPU同时执行多个任务。比如：多个人同时做不同的事。

并发：一个CPU(采用时间片)同时执行多个任务。比如：秒杀、多个人做同一件事



## 为什么要使用多线程？

当我们在进行商品抢购的时候，在支付按钮上总是有个计时器在进行倒计时，但是我们此时仍然可以进行商品信息的查看，这个计时器和我们浏览商品信息的线程是同时进行的，这样也就实现了抢购场景，增加了用户的体验。



### 多线程程序的优点：

1. 提高应用程序的响应。对图形化界面更有意义，可增强用户体验。
2. 提高计算机系统CPU的利用率。
3. 改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。



### 应用的场景

1. 程序需要同时执行两个或多个任务。
2. 程序需要实现一些需要等待的任务时，如用户输入、文件读写操作、网络操作、搜索等
3. 需要一些后台运行的程序时



## 三、Thread类

Java语言的JVM允许程序运行多个线程，它通过 java. lang.Thread类来体现



### 1. Thread类的特性

每个线程都是通过某个特定 Thread对象的run（方法来完成操作的，经常把run()方法的主体称为线程体 通过该 Thread对象的 start（方法来启动这个线程，而非直接调用run



### 2. 构造器：

- Thread()：创建新的 Thread对象
- Thread（String threadName）：创建线程并指定线程实例名
- Thread（Runnable target）：指定创建线程的目标对象，它实现了 Runnable接口中的run方法
- Thread（Runnable target， String name）：创建新的 Thread对象



### 3. 创建多线程的两种方式

3.1. 方式一继承Thread类的方式：

1. 创建一个继承于Thread类的子类
2. 重写Thread类的run() --> 将此线程执行的操作声明在run()中
3. 创建Thread类的子类的对象
4. 通过此对象调用start()：①启动当前线程 ② 调用当前线程的run()

**注意点：**

1. 我们启动一个线程，必须调用start()，不能调用run()的方式启动线程。 如果再启动一个线程，必须重新创建一个Thread子类的对象，调用此对象的start().（注意后面的点）
2. 如果自己手动调用run()方法，那么就只是普通方法，没有启动多线程模式
3. run（方法由JVM调用，什么时候调用，执行的过程控制都有操作系统的CPU调度决定。
4. 想要启动多线程，必须调用 start方法。
5. 一个线程对象只能调用一次 start()方法启动，如果重复调用了，则将抛出异常“lllegalThreadStateException”.

**代码示例**

```java
//1.继承Thread类
class MyThread extends Thread {
    public MyThread() {
    }

    //2.重run方法
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            if (i % 2 == 0) {
                System.out.println(i);
            }
        }
    }
}

public class ThreadTest {
    public static void main(String[] args) {
//3.新建Thread对象
        MyThread myThread = new MyThread();
        //4.调用start方法
        myThread.start();
    }
}
```

![image-20200411221700419](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195859.png)

3.2. 方式二实现Runnable接口的方式：

1. 创建一个实现了Runnable接口的类
2. 实现类去实现Runnable中的抽象方法：run()
3. 创建实现类的对象
4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
5. 通过Thread类的对象调用start()

**代码示例：**

```java
//1. 创建一个实现了Runnable接口的类
public class RunnableTest implements Runnable {
    // 2. 实现类去实现Runnable中的抽象方法：run()
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            System.out.println(i);
        }
    }
}

class test {
    public static void main(String[] args) {
        //3. 创建实现类的对象
        RunnableTest runnableTest = new RunnableTest();
        //4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
        Thread thread = new Thread(runnableTest);
        //5. 通过Thread类的对象调用start()
        thread.start();

    }
}
```

**两种方式的对比：**

开发中优先选择：实现Runnable接口的方式

**原因：**

1. 实现的方式没类的单继承性的局限性

 2. 实现的方式更适合来处理多个线程共享数据的情况。

**联系：**public class Thread implements Runnable

**相同点：**两种方式都需要重写run(),将线程要执行的逻辑声明在run()中。 目前两种方式，要想启动线程，都是调用的Thread类中的start()。

**也可以采用创建匿名类的方式**

```java
public class ThreadDemo {
    public static void main(String[] args) {

        //创建Thread类的匿名子类的方式
        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 == 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 != 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();


    }
}
```



### 4. Thread类的常用方法

4.1 常用方法：

1. start():启动当前线程；调用当前线程的run()，只有Thread类和他的子类才能调用start()方法
2. run(): 通常需要重写Thread类中的此方法，将创建的线程要执行的操作声明在此方法中
3. currentThread():静态方法，返回执行当前代码的线程
4. getName():获取当前线程的名字
5. setName():设置当前线程的名字
6. yield():释放当前cpu的执行权
7. join():在线程a中调用线程b的join(),此时线程a就进入阻塞状态，直到线程b完全执行完以后，线程a才结束阻塞状态。
8. stop():已过时。当执行此方法时，强制结束当前线程。
9. sleep(long millitime):让当前线程“睡眠”指定的millitime毫秒。在指定的millitime毫秒时间内，当前线程是阻塞状态。
10. isAlive():判断当前线程是否存活

4.2 线程的优先级：

- MAX_PRIORITY：10
- MIN _PRIORITY：1
- NORM_PRIORITY：5 -->默认优先级

获取和设置当前线程的优先级：

- getPriority():获取线程的优先级
- setPriority(int p):设置线程的优先级

> 说明：高优先级的线程要抢占低优先级线程CPU的执行权。但是只是从概率上讲，高优先级的线程高概率的情况下被执行。并不意味着只当高优先级的线程执行完以后，低优先级的线程才执行。

线程通信：wait() / notify() / notifyAll() :此三个方法定义在Object类中的。

**线程的分类**

- 守护线程，如：垃圾回收线程，依赖于主线程而存在
- 用户线程，如：main方法的线程



### 5. Thread的生命周期

**线程的五种状态：**

- 新建：当一个 Thread类或其子类的对象被声明并创建时，新生的线程对象处于新建状态
- 就绪：处于新建状态的线程被start()后，将进入线程队列等待CPU时间片，此时它已具备了运行的条件，只是没分配到CPU资源
- 运行：当就绪的线程被调度并获得CPU资源时，便进入运行状态，run()方法定义了线程的操作和功能
- 阻塞：在某种特殊情况下，被人为挂起或执行输入输出操作时，让出CPU并临时中止自己的执行，进入阻塞状态
- 死亡：线程完成了它的全部工作或线程被提前强制性地中止或出现异常导致结束

![image-20200414132655458](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195904.png)

**说明：**

1. 生命周期关注两个概念：状态、相应的方法
2. 关注：状态a-->状态b:哪些方法执行了（回调方法） 某个方法主动调用：状态a-->状态b
3. 阻塞：临时状态，不可以作为最终状态
4. 死亡：最终状态。



## 四、线程的同步机制



### 1.背景

例子：创建个窗口卖票，总票数为100张.使用实现Runnable接口的方式

- 问题：卖票过程中，出现了重票、错票 -->出现了线程的安全问题
- 问题出现的原因：当某个线程操作车票的过程中，尚未操作完成时，其他线程参与进来，也操作车票。
- 如何解决：当一个线程a在操作ticket的时候，其他线程不能参与进来。直到线程a操作完ticket时，其他线程才可以开始操作ticket。这种情况即使线程a出现了阻塞，也不能被改变。



### 2. Java解决方案：同步机制

在Java中，我们通过同步机制，来解决线程的安全问题。



#### 2.1 方式一：同步代码块

```java
synchronized(同步监视器){//同步监视器就是需要同步线程的公共对象
   //需要被同步的代码
    
}
```

**说明：**

1. 操作共享数据的代码，即为需要被同步的代码。 -->不能包含代码多了，也不能包含代码少了。
2. 共享数据：多个线程共同操作的变量。比如：ticket就是共享数据。
3. 同步监视器，俗称：锁。任何一个类的对象，都可以充当锁。
4. 要求多个线程必须要共用同一把锁。

- 在实现Runnable接口创建多线程的方式中，我们可以考虑使用this充当同步监视器。
- 在继承Thread类创建多线程的方式中，慎用this充当同步监视器，考虑使用当前类充当同步监视器。

**代码示例：**

**实现Runnable接口形式同步代码块**

```java
public class Ticket implements Runnable {
    private int tick = 100;

    @Override
    public void run() {

        while (true) {
            synchronized (this) {
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
                } else {
                    break;
                }
            }
        }
    }
}

class TicketTest {
    public static void main(String[] args) {
        Ticket ticket = new Ticket();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```

**继承Thread类形式同步代码块**

```java
public class Ticket2 extends Thread {
    private static int tick = 100;
    private static Object object = new Object();

    public Ticket2() {
    }

    @Override
    public void run() {

        while (true) {
            synchronized (object) {
            //synchronized (Ticket2.class) {//通过反射调用当前类
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为" + tick--);
                } else {
                    break;
                }
            }

        }
    }
}

class TicketTest2 {
    public static void main(String[] args) {
        Ticket2 ticket1 = new Ticket2();
        Ticket2 ticket2 = new Ticket2();
        Ticket2 ticket3 = new Ticket2();

        ticket1.setName("窗口1");
        ticket2.setName("窗口2");
        ticket3.setName("窗口3");

        ticket1.start();
        ticket2.start();
        ticket3.start();


    }
}
```



#### 2.2 方式二：同步方法

如果操作共享数据的代码完整的声明在一个方法中，我们不妨将此方法声明同步的。

```java
public synchronized void show(String namer){
....
}
```

**代码示例：**

```java
public class Ticket3 implements Runnable {
    private int tick = 100;
    private boolean isFlag = true;

    @Override
    public void run() {
        while (isFlag) {
            show();

        }
    }

    public synchronized void show() {//同步show方法，继承Thread类方法一样，只需同步方法即可，同时需要给方法加static关键字，确保不会创建多个对象
        if (tick > 0) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
        } else {
            isFlag = false;
        }
    }
}

class TicketTest3 {
    public static void main(String[] args) {
        Ticket3 ticket = new Ticket3();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```



#### 2.3 方式三：Lock锁 --- JDK 5.0新增

- 从JDK 5.0开始，Java提供了更强大的线程同步机制--通过显式定义同步锁对象来实现同步。同步锁使用Lock对象充当。
- java.util.concurrent.locks.Lock接口是控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次只能有一个线程对Lock对象加锁，线程开始访问共享资源之前应先获得Lock对象。
- ReentrantLock类实现了Lock，它拥有与 synchronized相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是 Reentrantlock，可以显式加锁、释放锁。

```java
class A {
	//1.实例化ReentrantLock对象
	private final ReenTrantLock lock = new ReenTrantLook();
	public void m() {
		lock.lock //2.先加锁
		try {
			//保证线程同步的代码
		} finally {
			lock.unlock(); //3.后解锁
		}
	}
}
//注意：如果同步代码块有异常，要将unlock()写入finally语句块中
```

**代码示例：**

```java
class Window implements Runnable {
    private int ticket = 100;

    //1.实例化ReentrantLock
    private ReentrantLock lock = new ReentrantLock();

    @Override
    public void run() {
        while (true) {
            try {
                //2.调用锁定方法lock()
                lock.lock();

                if (ticket > 0) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() +
                        "：售票，票号为：" + ticket);
                    ticket--;
                } else {
                    break;
                }
            } finally {
                //3.调用解锁方法：unlock()
                lock.unlock();
            }
        }
    }
}


public class LockTest {
    public static void main(String[] args) {
        Window w = new Window();
        Thread t1 = new Thread(w);
        Thread t2 = new Thread(w);
        Thread t3 = new Thread(w);
        t1.setName("窗口1");
        t2.setName("窗口2");
        t3.setName("窗口3");
        t1.start();
        t2.start();
        t3.start();
    }
}
```



### 3.同步方法的总结：

在《 Thinking in Java》中，是这么说的：对于并发工作，你需要某种方式来防止两个任务访问相同的资源（其实就是共享资源竞争）。防止这种冲突的方法就是当资源被一个任务使用时，在其上加锁。第一个访问某项资源的任务必须锁定这项资源，使其他仼务在其被解锁之前，就无法访问它了，而在其被解锁之时，另一个任务就可以锁定并使用它了。

**synchronized的锁是什么**：

1. 任意对象都可以作为同步锁。所有对象都自动含有单一的锁（监视器）
2. 同步方法的锁：静态方法（类名.class）、非静态方法（this）
3. 同步代码块：自己指定，很多时候也是指定为this或类名.class

**注意点：**

1. 必须确保使用同一个资源的多个线程共用一把锁，这个非常重要，否则就无法保证共享资源的安全
2. 一个线程类中的所有静态方法共用同一把锁（类名.class），所有非静态方法共用同一把锁（this），同步代码块（指定需谨慎）
3. 同步方法仍然涉及到同步监视器，只是不需要我们显式的声明。
4. 非静态的同步方法，同步监视器是：this
5. 静态的同步方法，同步监视器是：当前类本身



### 4. 同步的范围：

**如何找问题，即代码是否存在线程安全？（非常重要**）

（1）明确哪些代码是多线程运行的代码

（2）明确多个线程是否有共享数据

（3）明确多线程运行代码中是否有多条语句操作共享数据

**如何解决呢？（非常重要）**

对多条操作共享数据的语句，只能让一个线程都执行完，在执行过程中，其他线程不可以参与执行。 即所有操作共享数据的这些语句都要放在同步范围中

**注意点：**

范围太小：没锁住所有有安全问题的代码 范围太大：没发挥多线程的功能。



### 5. 面试题：

**1. synchronized 与 Lock的异同？**

1. 相同：二者都可以解决线程安全问题

2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器

3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）

4. 使用的优先顺序：

   Lock---> 同步代码块（已经进入了方法体，分配了相应资源 ) --->同步方法（在方法体之外)

5. 利弊： 同步的方式，解决了线程的安全问题。---好处 操作同步代码时，只能一个线程参与，其他线程等待。相当于是一个单线程的过程，效率低。

**2. Java是如何解决线程安全问题的，有几种方式？并对比几种方式的不同**

利用同步锁的方式，有三种方式同步代码块、同步方法和用lock方法

**3. synchronized和Lock方式解决线程安全问题的对比**

1. 相同：二者都可以解决线程安全问题
2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器
3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）



### 6. 线程安全的单例模式

```java
//使用同步机制将单例模式中的懒汉式改写为线程安全的。
class Bank {
    private static Bank instance = null;

    private Bank() {
    }

    public static Bank getInstance() {
        //方式一：效率稍差
        //        synchronized (Bank.class) {
        //            if(instance == null){
        //
        //                instance = new Bank();
        //            }
        //            return instance;
        //        }
        //方式二：效率更高
        if (instance == null) {
            synchronized (Bank.class) {
                if (instance == null) {
                    instance = new Bank();
                }
            }
        }

        return instance;
    }
}
```



### 7. 死锁问题

1. 死锁的理解： 不同的线程分别占用对方需要的同步资源不放弃，都在等待对方放弃自己需要的同步资源，就形成了线程的死锁
2. 说明：

- 出现死锁后，不会出现异常，不会出现提示，只是所的线程都处于阻塞状态，无法继续

- 我们使用同步时，要避免出现死锁。

  **死锁举例：**

```java
public static void main(String[] args) {

    StringBuffer s1 = new StringBuffer();
    StringBuffer s2 = new StringBuffer();


    new Thread(){
        @Override
        public void run() {

            synchronized (s1){

                s1.append("a");
                s2.append("1");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }


                synchronized (s2){
                    s1.append("b");
                    s2.append("2");

                    System.out.println(s1);
                    System.out.println(s2);
                }


            }

        }
    }.start();


    new Thread(new Runnable() {
        @Override
        public void run() {
            synchronized (s2){

                s1.append("c");
                s2.append("3");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                synchronized (s1){
                    s1.append("d");
                    s2.append("4");

                    System.out.println(s1);
                    System.out.println(s2);
                }
            }
        }
    }).start();
}
```



## 五、线程通讯

为了解决线程的死锁问题，引入线程通讯



### 1. 线程通信涉及到的三个方法：

- wait():一旦执行此方法，当前线程就进入阻塞状态，并释放同步监视器。
- notify():一旦执行此方法，就会唤醒被wait的一个线程。如果有多个线程被wait，就唤醒优先级高的那个。
- notifyAll():一旦执行此方法，就会唤醒所有被wait的线程。



### 2. 说明：

- wait()，notify()，notifyAll()三个方法必须使用在同步代码块或同步方法中。

- wait()，notify()，notifyAll()三个方法的调用者必须是同步代码块或同步方法中的同步监视器。

  否则，会出现IllegalMonitorStateException异常

- wait()，notify()，notifyAll()三个方法是定义在java.lang.Object类中。

**代码示例：**

使用两个线程打印 1-100，线程1, 线程2 交替打印。

```java
class MyThread implements Runnable {
    private int number = 1;
    private Object object = new Object();

    @Override
    public void run() {
        while (true) {

            synchronized (object) {
                object.notify();//调用notify()方法唤醒线程
                if (number <= 100) {
                    //线程休眠
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() + number);
                    number++;

                    try {
                        object.wait();//打印输出一次后调用wait()方法将线程阻塞
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                } else {
                    break;
                }
            }
        }
    }
}

public class CommunicationTest {
    public static void main(String[] args) {
        MyThread myThread = new MyThread();

        Thread thread1 = new Thread(myThread);
        Thread thread2 = new Thread(myThread);

        thread1.setName("线程1:");
        thread2.setName("线程2:");

        thread1.start();
        thread2.start();
    }
}
```



### 3. 面试题：

sleep() 和 wait()的异同？

相同点：一旦执行方法，都可以使得当前的线程进入阻塞状态。

不同点：

1）两个方法声明的位置不同：Thread类中声明sleep() , Object类中声明wait()

2）调用的要求不同：sleep()可以在任何需要的场景下调用。 wait()必须使用在同步代码块或同步方法中

3）关于是否释放同步监视器：如果两个方法都使用在同步代码块或同步方法中，sleep()不会释放锁，wait()会释放锁。



### 4. 释放锁的操作：

- 当前线程的同步方法、同步代码块执行结束
- 当前线程在同步代码块、同步方法中遇到 break、 return终止了该代码块该方法的继续执行。
- 当前线程在同步代码块、同步方法中出现了未处理的Error或 Exception，导致异常结束。
- 当前线程在同步代码块、同步方法中执行了线程对象的 wait()方法，当前线程暂停，并释放锁



### 5. 不会释放锁的操作：

- 线程执行同步代码块或同步方法时，程序调用 Thread. sleep()、Thread yield()方法暂停当前线程的执行
- 线程执行同步代码块时，其他线程调用了该线程的 suspend()方法将该线程挂起，该线程不会释放锁（同步监视器）
- 应尽量避免使用 suspend()和 resume()来控制线程



## 六、JDK 5.0新增线程创建方式



### 1. 新增方式一：实现Callable接口。

**实现方法：**

1. 创建一个实现Callable的实现类
2. 实现call方法，将此线程需要执行的操作声明在call()中
3. 创建Callable接口实现类的对象
4. 将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
5. 将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
6. 获取Callable中call方法的返回值

**代码示例：**

```java
//1.创建一个实现Callable的实现类
class NumThread implements Callable{
    //2.实现call方法，将此线程需要执行的操作声明在call()中
    @Override
    public Object call() throws Exception {
        int sum = 0;
        for (int i = 1; i <= 100; i++) {
            if(i % 2 == 0){
                System.out.println(i);
                sum += i;
            }
        }
        return sum;
    }
}


public class ThreadNew {
    public static void main(String[] args) {
        //3.创建Callable接口实现类的对象
        NumThread numThread = new NumThread();
        //4.将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
        FutureTask futureTask = new FutureTask(numThread);
        //5.将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
        new Thread(futureTask).start();

        try {
            //6.获取Callable中call方法的返回值
            //get()返回值即为FutureTask构造器参数Callable实现类重写的call()的返回值。
            Object sum = futureTask.get();
            System.out.println("总和为：" + sum);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (ExecutionException e) {
            e.printStackTrace();
        }
    }

}
```

**如何理解实现Callable接口的方式创建多线程比实现Runnable接口创建多线程方式强大？**

1. call()可以返回值的。
2. call()可以抛出异常，被外面的操作捕获，获取异常的信息
3. Callable是支持泛型的



### 2. 新增方式二：使用线程池

背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程对性能影响很大。

**解决方案：**

提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。可以避免频繁创建销毁、实现重复利用。类似生活中的公共交通工具。

**实现方法：**

1. 提供指定线程数量的线程池
2. 执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
3. 关闭连接池

**相关API：**

```java
JDK 5.0起提供了线程池相关AP|： Executor Service和 Executors

Executor Service：真正的线程池接口。常见子类 Thread Poolexecutor
void execute(Runnable command）：执行任务/命令，没有返回值，一般用来执行Runnable
<T> Future<T> submit（Callable<T>task）：执行任务，有返回值，一般又来执行Callable
void shutdown()：关闭连接池

Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池
Executors. newCachedThreadPool()：创建一个可根据需要创建新线程的线程池
Executors.newFⅸedthreadPool(n)；创建一个可重用固定线程数的线程池
EXecutors. newSingleThreadEXecutor()：创建一个只有一个线程的线程池
Executors. new thread Poo(n)：创建一个线程池，它可安排在给定延迟后运行命令或者定期地执行。
```

**代码示例：**

```java
class NumberThread implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 == 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

class NumberThread1 implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 != 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

public class ThreadPool {

    public static void main(String[] args) {
        //1. 提供指定线程数量的线程池
        ExecutorService service = Executors.newFixedThreadPool(10);
        ThreadPoolExecutor service1 = (ThreadPoolExecutor) service;
        //设置线程池的属性
//        System.out.println(service.getClass());
//        service1.setCorePoolSize(15);
//        service1.setKeepAliveTime();


        //2.执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
        service.execute(new NumberThread());//适合适用于Runnable
        service.execute(new NumberThread1());//适合适用于Runnable

//        service.submit(Callable callable);//适合使用于Callable
        //3.关闭连接池
        service.shutdown();
    }

}
```

**应用线程池的好处：**

1. 提高响应速度（减少了创建新线程的时间）

2. 降低资源消耗（重复利用线程池中线程，不需要每次都创建）

3. 便于线程管理

   corePoolSize：核心池的大小

   maximumPoolSize：最大线程数

   keepAliveTime：线程没任务时最多保持多长时间后会终止

**面试题：Java中多线程的创建有几种方式？四种。**

JDK 5.0以前：

- 即继承Thread类重run方法
- 实现Runnable接口实现run方法

JDK 5.0以后：

- 实现callable接口，实现call方法
- 利用线程池, firstPicture=https://picsum.photos/id/113/800/450, flag=原创, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=3, userId=null, description=合理利用多线程可以提高应用程序的响应；对图形化界面更有意义，可增强用户体验；提高计算机系统CPU的利用率；改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。, tagIds=1), org.apache.catalina.session.StandardSessionFacade@9507c34, {}]}
2021-05-01 20:33:50.908 DEBUG 16740 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.insert     : ==>  Preparing: INSERT INTO t_blog ( title, content, first_picture, flag, views, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, description, tag_ids ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-05-01 20:33:50.909 DEBUG 16740 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.insert     : ==> Parameters: java多线程(String), 在进行多线程的内容之前我们需要首先了解涉及操作系统的几个知识点。



## 一、程序、进程、线程



### 1. 程序(program)

概念：是为完成特定任务、用某种语言编写的一组指令的集合。即指一段静态的代码。



### 2. 进程(process)

概念：程序的一次执行过程，或是正在运行的一个程序。 说明：进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域



### 3. 线程(thread)

概念：进程可进一步细化为线程，是一个程序内部的一条执行路径。 说明：线程作为调度和执行的单位，每个线程拥独立的运行栈和程序计数器(pc)，线程切换的开销小。

![image-20200411195447115](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195852.png)

**内存结构：**

![image-20200411195509394](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195855.png)

> 进程可以细化为多个线程。 每个线程，拥有自己独立的：栈、程序计数器 多个线程，共享同一个进程中的结构：方法区、堆。



## 二、并行与并发



### 1. 单核CPU与多核CPU

- 单核CPU，其实是一种假的多线程，因为在一个时间单元内，也只能执行一个线程的任务。涉及到CPU处理线程的方式，CPU在单位时间（也就是说一个时间片内）内只能处理一个线程，于是就将其他的线程设置为阻塞状态，加入到阻塞队列中，等到处理完成当前线程后从就绪队列中取出新的线程进行处理，由于切换和处理时间很快用户感知不到于是用户便认为CPU在同一时间内处理多个线程。
- 多核CPU，才能更好的发挥多线程的效率。（现在的服务器都是多核的）
- 一个Java应用程序java.exe，其实至少三个线程：main()主线程，gc()垃圾回收线程，异常处理线程。当然如果发生异常，会影响主线程。



### 2. 并行与并发的理解

并行：多个CPU同时执行多个任务。比如：多个人同时做不同的事。

并发：一个CPU(采用时间片)同时执行多个任务。比如：秒杀、多个人做同一件事



## 为什么要使用多线程？

当我们在进行商品抢购的时候，在支付按钮上总是有个计时器在进行倒计时，但是我们此时仍然可以进行商品信息的查看，这个计时器和我们浏览商品信息的线程是同时进行的，这样也就实现了抢购场景，增加了用户的体验。



### 多线程程序的优点：

1. 提高应用程序的响应。对图形化界面更有意义，可增强用户体验。
2. 提高计算机系统CPU的利用率。
3. 改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。



### 应用的场景

1. 程序需要同时执行两个或多个任务。
2. 程序需要实现一些需要等待的任务时，如用户输入、文件读写操作、网络操作、搜索等
3. 需要一些后台运行的程序时



## 三、Thread类

Java语言的JVM允许程序运行多个线程，它通过 java. lang.Thread类来体现



### 1. Thread类的特性

每个线程都是通过某个特定 Thread对象的run（方法来完成操作的，经常把run()方法的主体称为线程体 通过该 Thread对象的 start（方法来启动这个线程，而非直接调用run



### 2. 构造器：

- Thread()：创建新的 Thread对象
- Thread（String threadName）：创建线程并指定线程实例名
- Thread（Runnable target）：指定创建线程的目标对象，它实现了 Runnable接口中的run方法
- Thread（Runnable target， String name）：创建新的 Thread对象



### 3. 创建多线程的两种方式

3.1. 方式一继承Thread类的方式：

1. 创建一个继承于Thread类的子类
2. 重写Thread类的run() --> 将此线程执行的操作声明在run()中
3. 创建Thread类的子类的对象
4. 通过此对象调用start()：①启动当前线程 ② 调用当前线程的run()

**注意点：**

1. 我们启动一个线程，必须调用start()，不能调用run()的方式启动线程。 如果再启动一个线程，必须重新创建一个Thread子类的对象，调用此对象的start().（注意后面的点）
2. 如果自己手动调用run()方法，那么就只是普通方法，没有启动多线程模式
3. run（方法由JVM调用，什么时候调用，执行的过程控制都有操作系统的CPU调度决定。
4. 想要启动多线程，必须调用 start方法。
5. 一个线程对象只能调用一次 start()方法启动，如果重复调用了，则将抛出异常“lllegalThreadStateException”.

**代码示例**

```java
//1.继承Thread类
class MyThread extends Thread {
    public MyThread() {
    }

    //2.重run方法
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            if (i % 2 == 0) {
                System.out.println(i);
            }
        }
    }
}

public class ThreadTest {
    public static void main(String[] args) {
//3.新建Thread对象
        MyThread myThread = new MyThread();
        //4.调用start方法
        myThread.start();
    }
}
```

![image-20200411221700419](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195859.png)

3.2. 方式二实现Runnable接口的方式：

1. 创建一个实现了Runnable接口的类
2. 实现类去实现Runnable中的抽象方法：run()
3. 创建实现类的对象
4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
5. 通过Thread类的对象调用start()

**代码示例：**

```java
//1. 创建一个实现了Runnable接口的类
public class RunnableTest implements Runnable {
    // 2. 实现类去实现Runnable中的抽象方法：run()
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            System.out.println(i);
        }
    }
}

class test {
    public static void main(String[] args) {
        //3. 创建实现类的对象
        RunnableTest runnableTest = new RunnableTest();
        //4. 将此对象作为参数传递到Thread类的构造器中，创建Thread类的对象
        Thread thread = new Thread(runnableTest);
        //5. 通过Thread类的对象调用start()
        thread.start();

    }
}
```

**两种方式的对比：**

开发中优先选择：实现Runnable接口的方式

**原因：**

1. 实现的方式没类的单继承性的局限性

 2. 实现的方式更适合来处理多个线程共享数据的情况。

**联系：**public class Thread implements Runnable

**相同点：**两种方式都需要重写run(),将线程要执行的逻辑声明在run()中。 目前两种方式，要想启动线程，都是调用的Thread类中的start()。

**也可以采用创建匿名类的方式**

```java
public class ThreadDemo {
    public static void main(String[] args) {

        //创建Thread类的匿名子类的方式
        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 == 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();

        new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; i++) {
                    if (i % 2 != 0) {
                        System.out.println(Thread.currentThread().getName() + ":" + i);
                    }
                }
            }
        }.start();


    }
}
```



### 4. Thread类的常用方法

4.1 常用方法：

1. start():启动当前线程；调用当前线程的run()，只有Thread类和他的子类才能调用start()方法
2. run(): 通常需要重写Thread类中的此方法，将创建的线程要执行的操作声明在此方法中
3. currentThread():静态方法，返回执行当前代码的线程
4. getName():获取当前线程的名字
5. setName():设置当前线程的名字
6. yield():释放当前cpu的执行权
7. join():在线程a中调用线程b的join(),此时线程a就进入阻塞状态，直到线程b完全执行完以后，线程a才结束阻塞状态。
8. stop():已过时。当执行此方法时，强制结束当前线程。
9. sleep(long millitime):让当前线程“睡眠”指定的millitime毫秒。在指定的millitime毫秒时间内，当前线程是阻塞状态。
10. isAlive():判断当前线程是否存活

4.2 线程的优先级：

- MAX_PRIORITY：10
- MIN _PRIORITY：1
- NORM_PRIORITY：5 -->默认优先级

获取和设置当前线程的优先级：

- getPriority():获取线程的优先级
- setPriority(int p):设置线程的优先级

> 说明：高优先级的线程要抢占低优先级线程CPU的执行权。但是只是从概率上讲，高优先级的线程高概率的情况下被执行。并不意味着只当高优先级的线程执行完以后，低优先级的线程才执行。

线程通信：wait() / notify() / notifyAll() :此三个方法定义在Object类中的。

**线程的分类**

- 守护线程，如：垃圾回收线程，依赖于主线程而存在
- 用户线程，如：main方法的线程



### 5. Thread的生命周期

**线程的五种状态：**

- 新建：当一个 Thread类或其子类的对象被声明并创建时，新生的线程对象处于新建状态
- 就绪：处于新建状态的线程被start()后，将进入线程队列等待CPU时间片，此时它已具备了运行的条件，只是没分配到CPU资源
- 运行：当就绪的线程被调度并获得CPU资源时，便进入运行状态，run()方法定义了线程的操作和功能
- 阻塞：在某种特殊情况下，被人为挂起或执行输入输出操作时，让出CPU并临时中止自己的执行，进入阻塞状态
- 死亡：线程完成了它的全部工作或线程被提前强制性地中止或出现异常导致结束

![image-20200414132655458](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330195904.png)

**说明：**

1. 生命周期关注两个概念：状态、相应的方法
2. 关注：状态a-->状态b:哪些方法执行了（回调方法） 某个方法主动调用：状态a-->状态b
3. 阻塞：临时状态，不可以作为最终状态
4. 死亡：最终状态。



## 四、线程的同步机制



### 1.背景

例子：创建个窗口卖票，总票数为100张.使用实现Runnable接口的方式

- 问题：卖票过程中，出现了重票、错票 -->出现了线程的安全问题
- 问题出现的原因：当某个线程操作车票的过程中，尚未操作完成时，其他线程参与进来，也操作车票。
- 如何解决：当一个线程a在操作ticket的时候，其他线程不能参与进来。直到线程a操作完ticket时，其他线程才可以开始操作ticket。这种情况即使线程a出现了阻塞，也不能被改变。



### 2. Java解决方案：同步机制

在Java中，我们通过同步机制，来解决线程的安全问题。



#### 2.1 方式一：同步代码块

```java
synchronized(同步监视器){//同步监视器就是需要同步线程的公共对象
   //需要被同步的代码
    
}
```

**说明：**

1. 操作共享数据的代码，即为需要被同步的代码。 -->不能包含代码多了，也不能包含代码少了。
2. 共享数据：多个线程共同操作的变量。比如：ticket就是共享数据。
3. 同步监视器，俗称：锁。任何一个类的对象，都可以充当锁。
4. 要求多个线程必须要共用同一把锁。

- 在实现Runnable接口创建多线程的方式中，我们可以考虑使用this充当同步监视器。
- 在继承Thread类创建多线程的方式中，慎用this充当同步监视器，考虑使用当前类充当同步监视器。

**代码示例：**

**实现Runnable接口形式同步代码块**

```java
public class Ticket implements Runnable {
    private int tick = 100;

    @Override
    public void run() {

        while (true) {
            synchronized (this) {
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
                } else {
                    break;
                }
            }
        }
    }
}

class TicketTest {
    public static void main(String[] args) {
        Ticket ticket = new Ticket();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```

**继承Thread类形式同步代码块**

```java
public class Ticket2 extends Thread {
    private static int tick = 100;
    private static Object object = new Object();

    public Ticket2() {
    }

    @Override
    public void run() {

        while (true) {
            synchronized (object) {
            //synchronized (Ticket2.class) {//通过反射调用当前类
                if (tick > 0) {
                    System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为" + tick--);
                } else {
                    break;
                }
            }

        }
    }
}

class TicketTest2 {
    public static void main(String[] args) {
        Ticket2 ticket1 = new Ticket2();
        Ticket2 ticket2 = new Ticket2();
        Ticket2 ticket3 = new Ticket2();

        ticket1.setName("窗口1");
        ticket2.setName("窗口2");
        ticket3.setName("窗口3");

        ticket1.start();
        ticket2.start();
        ticket3.start();


    }
}
```



#### 2.2 方式二：同步方法

如果操作共享数据的代码完整的声明在一个方法中，我们不妨将此方法声明同步的。

```java
public synchronized void show(String namer){
....
}
```

**代码示例：**

```java
public class Ticket3 implements Runnable {
    private int tick = 100;
    private boolean isFlag = true;

    @Override
    public void run() {
        while (isFlag) {
            show();

        }
    }

    public synchronized void show() {//同步show方法，继承Thread类方法一样，只需同步方法即可，同时需要给方法加static关键字，确保不会创建多个对象
        if (tick > 0) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println(Thread.currentThread().getName() + "号窗口买票，票号为：" + tick--);
        } else {
            isFlag = false;
        }
    }
}

class TicketTest3 {
    public static void main(String[] args) {
        Ticket3 ticket = new Ticket3();

        Thread thread1 = new Thread(ticket);
        Thread thread2 = new Thread(ticket);
        Thread thread3 = new Thread(ticket);

        thread1.setName("窗口1");
        thread2.setName("窗口2");
        thread3.setName("窗口3");

        thread1.start();
        thread2.start();
        thread3.start();

    }
}
```



#### 2.3 方式三：Lock锁 --- JDK 5.0新增

- 从JDK 5.0开始，Java提供了更强大的线程同步机制--通过显式定义同步锁对象来实现同步。同步锁使用Lock对象充当。
- java.util.concurrent.locks.Lock接口是控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次只能有一个线程对Lock对象加锁，线程开始访问共享资源之前应先获得Lock对象。
- ReentrantLock类实现了Lock，它拥有与 synchronized相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是 Reentrantlock，可以显式加锁、释放锁。

```java
class A {
	//1.实例化ReentrantLock对象
	private final ReenTrantLock lock = new ReenTrantLook();
	public void m() {
		lock.lock //2.先加锁
		try {
			//保证线程同步的代码
		} finally {
			lock.unlock(); //3.后解锁
		}
	}
}
//注意：如果同步代码块有异常，要将unlock()写入finally语句块中
```

**代码示例：**

```java
class Window implements Runnable {
    private int ticket = 100;

    //1.实例化ReentrantLock
    private ReentrantLock lock = new ReentrantLock();

    @Override
    public void run() {
        while (true) {
            try {
                //2.调用锁定方法lock()
                lock.lock();

                if (ticket > 0) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() +
                        "：售票，票号为：" + ticket);
                    ticket--;
                } else {
                    break;
                }
            } finally {
                //3.调用解锁方法：unlock()
                lock.unlock();
            }
        }
    }
}


public class LockTest {
    public static void main(String[] args) {
        Window w = new Window();
        Thread t1 = new Thread(w);
        Thread t2 = new Thread(w);
        Thread t3 = new Thread(w);
        t1.setName("窗口1");
        t2.setName("窗口2");
        t3.setName("窗口3");
        t1.start();
        t2.start();
        t3.start();
    }
}
```



### 3.同步方法的总结：

在《 Thinking in Java》中，是这么说的：对于并发工作，你需要某种方式来防止两个任务访问相同的资源（其实就是共享资源竞争）。防止这种冲突的方法就是当资源被一个任务使用时，在其上加锁。第一个访问某项资源的任务必须锁定这项资源，使其他仼务在其被解锁之前，就无法访问它了，而在其被解锁之时，另一个任务就可以锁定并使用它了。

**synchronized的锁是什么**：

1. 任意对象都可以作为同步锁。所有对象都自动含有单一的锁（监视器）
2. 同步方法的锁：静态方法（类名.class）、非静态方法（this）
3. 同步代码块：自己指定，很多时候也是指定为this或类名.class

**注意点：**

1. 必须确保使用同一个资源的多个线程共用一把锁，这个非常重要，否则就无法保证共享资源的安全
2. 一个线程类中的所有静态方法共用同一把锁（类名.class），所有非静态方法共用同一把锁（this），同步代码块（指定需谨慎）
3. 同步方法仍然涉及到同步监视器，只是不需要我们显式的声明。
4. 非静态的同步方法，同步监视器是：this
5. 静态的同步方法，同步监视器是：当前类本身



### 4. 同步的范围：

**如何找问题，即代码是否存在线程安全？（非常重要**）

（1）明确哪些代码是多线程运行的代码

（2）明确多个线程是否有共享数据

（3）明确多线程运行代码中是否有多条语句操作共享数据

**如何解决呢？（非常重要）**

对多条操作共享数据的语句，只能让一个线程都执行完，在执行过程中，其他线程不可以参与执行。 即所有操作共享数据的这些语句都要放在同步范围中

**注意点：**

范围太小：没锁住所有有安全问题的代码 范围太大：没发挥多线程的功能。



### 5. 面试题：

**1. synchronized 与 Lock的异同？**

1. 相同：二者都可以解决线程安全问题

2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器

3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）

4. 使用的优先顺序：

   Lock---> 同步代码块（已经进入了方法体，分配了相应资源 ) --->同步方法（在方法体之外)

5. 利弊： 同步的方式，解决了线程的安全问题。---好处 操作同步代码时，只能一个线程参与，其他线程等待。相当于是一个单线程的过程，效率低。

**2. Java是如何解决线程安全问题的，有几种方式？并对比几种方式的不同**

利用同步锁的方式，有三种方式同步代码块、同步方法和用lock方法

**3. synchronized和Lock方式解决线程安全问题的对比**

1. 相同：二者都可以解决线程安全问题
2. 不同：synchronized机制在执行完相应的同步代码以后，自动的释放同步监视器
3. Lock需要手动的启动同步（lock()，同时结束同步也需要手动的实现（unlock()）



### 6. 线程安全的单例模式

```java
//使用同步机制将单例模式中的懒汉式改写为线程安全的。
class Bank {
    private static Bank instance = null;

    private Bank() {
    }

    public static Bank getInstance() {
        //方式一：效率稍差
        //        synchronized (Bank.class) {
        //            if(instance == null){
        //
        //                instance = new Bank();
        //            }
        //            return instance;
        //        }
        //方式二：效率更高
        if (instance == null) {
            synchronized (Bank.class) {
                if (instance == null) {
                    instance = new Bank();
                }
            }
        }

        return instance;
    }
}
```



### 7. 死锁问题

1. 死锁的理解： 不同的线程分别占用对方需要的同步资源不放弃，都在等待对方放弃自己需要的同步资源，就形成了线程的死锁
2. 说明：

- 出现死锁后，不会出现异常，不会出现提示，只是所的线程都处于阻塞状态，无法继续

- 我们使用同步时，要避免出现死锁。

  **死锁举例：**

```java
public static void main(String[] args) {

    StringBuffer s1 = new StringBuffer();
    StringBuffer s2 = new StringBuffer();


    new Thread(){
        @Override
        public void run() {

            synchronized (s1){

                s1.append("a");
                s2.append("1");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }


                synchronized (s2){
                    s1.append("b");
                    s2.append("2");

                    System.out.println(s1);
                    System.out.println(s2);
                }


            }

        }
    }.start();


    new Thread(new Runnable() {
        @Override
        public void run() {
            synchronized (s2){

                s1.append("c");
                s2.append("3");

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                synchronized (s1){
                    s1.append("d");
                    s2.append("4");

                    System.out.println(s1);
                    System.out.println(s2);
                }
            }
        }
    }).start();
}
```



## 五、线程通讯

为了解决线程的死锁问题，引入线程通讯



### 1. 线程通信涉及到的三个方法：

- wait():一旦执行此方法，当前线程就进入阻塞状态，并释放同步监视器。
- notify():一旦执行此方法，就会唤醒被wait的一个线程。如果有多个线程被wait，就唤醒优先级高的那个。
- notifyAll():一旦执行此方法，就会唤醒所有被wait的线程。



### 2. 说明：

- wait()，notify()，notifyAll()三个方法必须使用在同步代码块或同步方法中。

- wait()，notify()，notifyAll()三个方法的调用者必须是同步代码块或同步方法中的同步监视器。

  否则，会出现IllegalMonitorStateException异常

- wait()，notify()，notifyAll()三个方法是定义在java.lang.Object类中。

**代码示例：**

使用两个线程打印 1-100，线程1, 线程2 交替打印。

```java
class MyThread implements Runnable {
    private int number = 1;
    private Object object = new Object();

    @Override
    public void run() {
        while (true) {

            synchronized (object) {
                object.notify();//调用notify()方法唤醒线程
                if (number <= 100) {
                    //线程休眠
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    System.out.println(Thread.currentThread().getName() + number);
                    number++;

                    try {
                        object.wait();//打印输出一次后调用wait()方法将线程阻塞
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                } else {
                    break;
                }
            }
        }
    }
}

public class CommunicationTest {
    public static void main(String[] args) {
        MyThread myThread = new MyThread();

        Thread thread1 = new Thread(myThread);
        Thread thread2 = new Thread(myThread);

        thread1.setName("线程1:");
        thread2.setName("线程2:");

        thread1.start();
        thread2.start();
    }
}
```



### 3. 面试题：

sleep() 和 wait()的异同？

相同点：一旦执行方法，都可以使得当前的线程进入阻塞状态。

不同点：

1）两个方法声明的位置不同：Thread类中声明sleep() , Object类中声明wait()

2）调用的要求不同：sleep()可以在任何需要的场景下调用。 wait()必须使用在同步代码块或同步方法中

3）关于是否释放同步监视器：如果两个方法都使用在同步代码块或同步方法中，sleep()不会释放锁，wait()会释放锁。



### 4. 释放锁的操作：

- 当前线程的同步方法、同步代码块执行结束
- 当前线程在同步代码块、同步方法中遇到 break、 return终止了该代码块该方法的继续执行。
- 当前线程在同步代码块、同步方法中出现了未处理的Error或 Exception，导致异常结束。
- 当前线程在同步代码块、同步方法中执行了线程对象的 wait()方法，当前线程暂停，并释放锁



### 5. 不会释放锁的操作：

- 线程执行同步代码块或同步方法时，程序调用 Thread. sleep()、Thread yield()方法暂停当前线程的执行
- 线程执行同步代码块时，其他线程调用了该线程的 suspend()方法将该线程挂起，该线程不会释放锁（同步监视器）
- 应尽量避免使用 suspend()和 resume()来控制线程



## 六、JDK 5.0新增线程创建方式



### 1. 新增方式一：实现Callable接口。

**实现方法：**

1. 创建一个实现Callable的实现类
2. 实现call方法，将此线程需要执行的操作声明在call()中
3. 创建Callable接口实现类的对象
4. 将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
5. 将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
6. 获取Callable中call方法的返回值

**代码示例：**

```java
//1.创建一个实现Callable的实现类
class NumThread implements Callable{
    //2.实现call方法，将此线程需要执行的操作声明在call()中
    @Override
    public Object call() throws Exception {
        int sum = 0;
        for (int i = 1; i <= 100; i++) {
            if(i % 2 == 0){
                System.out.println(i);
                sum += i;
            }
        }
        return sum;
    }
}


public class ThreadNew {
    public static void main(String[] args) {
        //3.创建Callable接口实现类的对象
        NumThread numThread = new NumThread();
        //4.将此Callable接口实现类的对象作为传递到FutureTask构造器中，创建FutureTask的对象
        FutureTask futureTask = new FutureTask(numThread);
        //5.将FutureTask的对象作为参数传递到Thread类的构造器中，创建Thread对象，并调用start()
        new Thread(futureTask).start();

        try {
            //6.获取Callable中call方法的返回值
            //get()返回值即为FutureTask构造器参数Callable实现类重写的call()的返回值。
            Object sum = futureTask.get();
            System.out.println("总和为：" + sum);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (ExecutionException e) {
            e.printStackTrace();
        }
    }

}
```

**如何理解实现Callable接口的方式创建多线程比实现Runnable接口创建多线程方式强大？**

1. call()可以返回值的。
2. call()可以抛出异常，被外面的操作捕获，获取异常的信息
3. Callable是支持泛型的



### 2. 新增方式二：使用线程池

背景：经常创建和销毁、使用量特别大的资源，比如并发情况下的线程对性能影响很大。

**解决方案：**

提前创建好多个线程，放入线程池中，使用时直接获取，使用完放回池中。可以避免频繁创建销毁、实现重复利用。类似生活中的公共交通工具。

**实现方法：**

1. 提供指定线程数量的线程池
2. 执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
3. 关闭连接池

**相关API：**

```java
JDK 5.0起提供了线程池相关AP|： Executor Service和 Executors

Executor Service：真正的线程池接口。常见子类 Thread Poolexecutor
void execute(Runnable command）：执行任务/命令，没有返回值，一般用来执行Runnable
<T> Future<T> submit（Callable<T>task）：执行任务，有返回值，一般又来执行Callable
void shutdown()：关闭连接池

Executors：工具类、线程池的工厂类，用于创建并返回不同类型的线程池
Executors. newCachedThreadPool()：创建一个可根据需要创建新线程的线程池
Executors.newFⅸedthreadPool(n)；创建一个可重用固定线程数的线程池
EXecutors. newSingleThreadEXecutor()：创建一个只有一个线程的线程池
Executors. new thread Poo(n)：创建一个线程池，它可安排在给定延迟后运行命令或者定期地执行。
```

**代码示例：**

```java
class NumberThread implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 == 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

class NumberThread1 implements Runnable{

    @Override
    public void run() {
        for(int i = 0;i <= 100;i++){
            if(i % 2 != 0){
                System.out.println(Thread.currentThread().getName() + ": " + i);
            }
        }
    }
}

public class ThreadPool {

    public static void main(String[] args) {
        //1. 提供指定线程数量的线程池
        ExecutorService service = Executors.newFixedThreadPool(10);
        ThreadPoolExecutor service1 = (ThreadPoolExecutor) service;
        //设置线程池的属性
//        System.out.println(service.getClass());
//        service1.setCorePoolSize(15);
//        service1.setKeepAliveTime();


        //2.执行指定的线程的操作。需要提供实现Runnable接口或Callable接口实现类的对象
        service.execute(new NumberThread());//适合适用于Runnable
        service.execute(new NumberThread1());//适合适用于Runnable

//        service.submit(Callable callable);//适合使用于Callable
        //3.关闭连接池
        service.shutdown();
    }

}
```

**应用线程池的好处：**

1. 提高响应速度（减少了创建新线程的时间）

2. 降低资源消耗（重复利用线程池中线程，不需要每次都创建）

3. 便于线程管理

   corePoolSize：核心池的大小

   maximumPoolSize：最大线程数

   keepAliveTime：线程没任务时最多保持多长时间后会终止

**面试题：Java中多线程的创建有几种方式？四种。**

JDK 5.0以前：

- 即继承Thread类重run方法
- 实现Runnable接口实现run方法

JDK 5.0以后：

- 实现callable接口，实现call方法
- 利用线程池(String), https://picsum.photos/id/113/800/450(String), 原创(String), 0(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T20:33:50.907(LocalDateTime), 2021-05-01T20:33:50.907(LocalDateTime), 3(Long), 1(Long), 合理利用多线程可以提高应用程序的响应；对图形化界面更有意义，可增强用户体验；提高计算机系统CPU的利用率；改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改。(String), 1(String)
2021-05-01 20:33:50.912 DEBUG 16740 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.insert     : <==    Updates: 1
2021-05-01 20:33:50.912 DEBUG 16740 --- [http-nio-9000-exec-2] c.m.mapper.BlogAndTagsMapper.insert      : ==>  Preparing: INSERT INTO t_blog_tags ( tag_id, blog_id ) VALUES ( ?, ? )
2021-05-01 20:33:50.913 DEBUG 16740 --- [http-nio-9000-exec-2] c.m.mapper.BlogAndTagsMapper.insert      : ==> Parameters: 1(Long), 7(Long)
2021-05-01 20:33:50.915 DEBUG 16740 --- [http-nio-9000-exec-2] c.m.mapper.BlogAndTagsMapper.insert      : <==    Updates: 1
2021-05-01 20:33:51.000  INFO 16740 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 20:33:51.003  INFO 16740 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=新增成功}]}
2021-05-01 20:33:51.006 DEBUG 16740 --- [http-nio-9000-exec-6] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 20:33:51.006 DEBUG 16740 --- [http-nio-9000-exec-6] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 20:33:51.007 DEBUG 16740 --- [http-nio-9000-exec-6] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 20:33:51.007 DEBUG 16740 --- [http-nio-9000-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 20:33:51.008 DEBUG 16740 --- [http-nio-9000-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 20:33:51.008 DEBUG 16740 --- [http-nio-9000-exec-6] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 20:33:51.011 DEBUG 16740 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 20:33:51.011 DEBUG 16740 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 20:33:51.012 DEBUG 16740 --- [http-nio-9000-exec-6] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 20:33:51.012  INFO 16740 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 21:13:59.596  INFO 21372 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 21372 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 21:13:59.598 DEBUG 21372 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 21:13:59.599  INFO 21372 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 21:13:59.637  INFO 21372 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 21:13:59.637  INFO 21372 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 21:14:00.767  INFO 21372 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 21:14:00.775  INFO 21372 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 21:14:00.775  INFO 21372 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 21:14:00.777  INFO 21372 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 21:14:00.777  INFO 21372 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 21:14:00.777  INFO 21372 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 21:14:00.781  INFO 21372 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 21:14:00.865  INFO 21372 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 21:14:00.866  INFO 21372 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1228 ms
2021-05-01 21:14:00.936  INFO 21372 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 21:14:01.179  INFO 21372 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 21:14:02.315  INFO 21372 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 21:14:02.396  INFO 21372 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 21:14:02.718  INFO 21372 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 21:14:02.819  INFO 21372 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 21:14:02.828  INFO 21372 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.622 seconds (JVM running for 4.618)
2021-05-01 21:14:07.621  INFO 21372 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 21:14:07.621  INFO 21372 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 21:14:07.622  INFO 21372 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 21:14:07.647  INFO 21372 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:14:07.673 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:14:07.690 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:14:07.710 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:14:07.726 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:14:07.726 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:14:07.729 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:14:07.732 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:14:07.732 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:14:07.735 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:14:07.738 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:14:07.738 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:14:07.740 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:14:07.765 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:14:07.765 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:14:07.768 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:14:07.768  INFO 21372 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:14:36.635  INFO 21372 --- [http-nio-8888-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:14:36.641 DEBUG 21372 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:14:36.642 DEBUG 21372 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:14:36.647 DEBUG 21372 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:14:36.654 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:14:36.654 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:14:36.657 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:14:36.664 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:14:36.664 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:14:36.667 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:14:36.674 DEBUG 21372 --- [http-nio-8888-exec-7] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:14:36.674 DEBUG 21372 --- [http-nio-8888-exec-7] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:14:36.676 DEBUG 21372 --- [http-nio-8888-exec-7] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:14:36.684 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:14:36.686 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:14:36.691 DEBUG 21372 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:14:36.691  INFO 21372 --- [http-nio-8888-exec-7] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:18:43.301  INFO 21372 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:18:43.305 DEBUG 21372 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:18:43.306 DEBUG 21372 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:18:43.308 DEBUG 21372 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:18:43.313 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:18:43.313 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:18:43.315 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:18:43.318 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:18:43.319 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:18:43.322 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:18:43.325 DEBUG 21372 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:18:43.325 DEBUG 21372 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:18:43.327 DEBUG 21372 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:18:43.332 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:18:43.333 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:18:43.335 DEBUG 21372 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:18:43.336  INFO 21372 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:19:17.369  INFO 21372 --- [http-nio-8888-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:19:17.374 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:19:17.375 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:19:17.378 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:19:17.383 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:19:17.383 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:19:17.385 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:19:17.389 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:19:17.389 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:19:17.390 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:19:17.394 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:19:17.395 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:19:17.397 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:19:17.402 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:19:17.402 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:19:17.404 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:19:17.405  INFO 21372 --- [http-nio-8888-exec-6] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:19:35.805  INFO 21372 --- [http-nio-8888-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:19:35.808 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:19:35.809 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:19:35.811 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:19:35.814 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:19:35.815 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:19:35.817 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:19:35.821 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:19:35.821 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:19:35.822 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:19:35.826 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:19:35.826 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:19:35.828 DEBUG 21372 --- [http-nio-8888-exec-6] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:19:35.832 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:19:35.832 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:19:35.834 DEBUG 21372 --- [http-nio-8888-exec-6] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:19:35.834  INFO 21372 --- [http-nio-8888-exec-6] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:20:13.577  INFO 21372 --- [http-nio-8888-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:20:13.583 DEBUG 21372 --- [http-nio-8888-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:20:13.583 DEBUG 21372 --- [http-nio-8888-exec-5] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:20:13.588 DEBUG 21372 --- [http-nio-8888-exec-5] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:20:13.593 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:20:13.593 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:20:13.596 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:20:13.600 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:20:13.601 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:20:13.603 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:20:13.608 DEBUG 21372 --- [http-nio-8888-exec-5] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:20:13.608 DEBUG 21372 --- [http-nio-8888-exec-5] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:20:13.609 DEBUG 21372 --- [http-nio-8888-exec-5] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:20:13.614 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:20:13.614 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:20:13.621 DEBUG 21372 --- [http-nio-8888-exec-5] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:20:13.621  INFO 21372 --- [http-nio-8888-exec-5] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:20:27.039  INFO 21372 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:20:27.043 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:20:27.043 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:20:27.045 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:20:27.048 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:20:27.049 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:20:27.051 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:20:27.054 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:20:27.054 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:20:27.056 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:20:27.060 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:20:27.061 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:20:27.062 DEBUG 21372 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:20:27.068 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:20:27.069 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:20:27.072 DEBUG 21372 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:20:27.072  INFO 21372 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:20:29.197  INFO 21372 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:20:29.200 DEBUG 21372 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:20:29.200 DEBUG 21372 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:20:29.202 DEBUG 21372 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:20:29.205 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:20:29.206 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:20:29.207 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:20:29.210 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:20:29.210 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:20:29.212 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:20:29.214 DEBUG 21372 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:20:29.214 DEBUG 21372 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:20:29.215 DEBUG 21372 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:20:29.218 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:20:29.219 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:20:29.220 DEBUG 21372 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:20:29.221  INFO 21372 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:22:27.759  INFO 21372 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:22:27.764 DEBUG 21372 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:22:27.765 DEBUG 21372 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:22:27.766 DEBUG 21372 --- [http-nio-8888-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:22:27.771 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:22:27.772 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:22:27.773 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:22:27.778 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:22:27.778 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:22:27.780 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:22:27.784 DEBUG 21372 --- [http-nio-8888-exec-3] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:22:27.784 DEBUG 21372 --- [http-nio-8888-exec-3] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:22:27.785 DEBUG 21372 --- [http-nio-8888-exec-3] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:22:27.790 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:22:27.791 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:22:27.793 DEBUG 21372 --- [http-nio-8888-exec-3] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:22:27.793  INFO 21372 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:52:30.785  INFO 12988 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 12988 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 21:52:30.787 DEBUG 12988 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 21:52:30.787  INFO 12988 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 21:52:30.825  INFO 12988 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 21:52:30.826  INFO 12988 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 21:52:31.932  INFO 12988 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 21:52:31.939  INFO 12988 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 21:52:31.940  INFO 12988 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 21:52:31.941  INFO 12988 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 21:52:31.942  INFO 12988 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 21:52:31.942  INFO 12988 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 21:52:31.945  INFO 12988 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 21:52:32.020  INFO 12988 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 21:52:32.020  INFO 12988 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1194 ms
2021-05-01 21:52:32.084  INFO 12988 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 21:52:32.329  INFO 12988 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 21:52:33.458  INFO 12988 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 21:52:33.540  INFO 12988 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 21:52:33.868  INFO 12988 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 21:52:33.920  INFO 12988 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 21:52:33.931  INFO 12988 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.65 seconds (JVM running for 4.804)
2021-05-01 21:52:49.202  INFO 12988 --- [http-nio-8888-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 21:52:49.202  INFO 12988 --- [http-nio-8888-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 21:52:49.203  INFO 12988 --- [http-nio-8888-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 21:52:49.218  INFO 12988 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/getTags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.getTags', args=[]}
2021-05-01 21:52:49.243 DEBUG 12988 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:52:49.260 DEBUG 12988 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:52:49.278 DEBUG 12988 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:52:49.280  INFO 12988 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : [TagVO(id=8, name=MyBatis-Plus, blogs=[Blog(id=5, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=11, name=ES6, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=12, name=微信, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=1, name=Java, blogs=[Blog(id=7, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)])]
2021-05-01 21:53:37.289  INFO 12988 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:53:37.299 DEBUG 12988 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:53:37.299 DEBUG 12988 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:53:37.310 DEBUG 12988 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:53:37.357 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:53:37.358 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:53:37.373 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:53:37.398 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:53:37.398 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:53:37.405 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:53:37.459 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:53:37.460 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:53:37.465 DEBUG 12988 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:53:37.465  INFO 12988 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:53:38.154  INFO 12988 --- [http-nio-8888-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/getTags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.getTags', args=[]}
2021-05-01 21:53:38.160 DEBUG 12988 --- [http-nio-8888-exec-9] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:53:38.161 DEBUG 12988 --- [http-nio-8888-exec-9] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:53:38.163 DEBUG 12988 --- [http-nio-8888-exec-9] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:53:38.163  INFO 12988 --- [http-nio-8888-exec-9] com.manster.aspect.LogAspect             : Result : [TagVO(id=8, name=MyBatis-Plus, blogs=[Blog(id=5, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=11, name=ES6, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=12, name=微信, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=1, name=Java, blogs=[Blog(id=7, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)])]
2021-05-01 21:55:07.849  INFO 12988 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:55:07.855 DEBUG 12988 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:55:07.855 DEBUG 12988 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:55:07.858 DEBUG 12988 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:55:07.863 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:55:07.863 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:55:07.865 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:55:07.869 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:55:07.869 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:55:07.872 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:55:07.878 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:55:07.879 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:55:07.882 DEBUG 12988 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:55:07.883  INFO 12988 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:55:08.294  INFO 12988 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/getTags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.getTags', args=[]}
2021-05-01 21:55:08.297 DEBUG 12988 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:55:08.297 DEBUG 12988 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:55:08.299 DEBUG 12988 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:55:08.299  INFO 12988 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : [TagVO(id=8, name=MyBatis-Plus, blogs=[Blog(id=5, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=11, name=ES6, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=12, name=微信, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=1, name=Java, blogs=[Blog(id=7, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)])]
2021-05-01 21:56:04.776  INFO 12988 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/getTags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.getTags', args=[]}
2021-05-01 21:56:04.780 DEBUG 12988 --- [http-nio-8888-exec-3] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:56:04.780 DEBUG 12988 --- [http-nio-8888-exec-3] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:56:04.782 DEBUG 12988 --- [http-nio-8888-exec-3] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:56:04.782  INFO 12988 --- [http-nio-8888-exec-3] com.manster.aspect.LogAspect             : Result : [TagVO(id=8, name=MyBatis-Plus, blogs=[Blog(id=5, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=11, name=ES6, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=12, name=微信, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=1, name=Java, blogs=[Blog(id=7, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)])]
2021-05-01 21:56:35.048  INFO 12988 --- [http-nio-8888-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:56:35.054 DEBUG 12988 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:56:35.054 DEBUG 12988 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:56:35.058 DEBUG 12988 --- [http-nio-8888-exec-7] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:56:35.078 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:56:35.079 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:56:35.082 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:56:35.087 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:56:35.088 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:56:35.091 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:56:35.097 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:56:35.097 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:56:35.100 DEBUG 12988 --- [http-nio-8888-exec-7] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:56:35.103  INFO 12988 --- [http-nio-8888-exec-7] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:56:35.580  INFO 12988 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/getTags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.getTags', args=[]}
2021-05-01 21:56:35.587 DEBUG 12988 --- [http-nio-8888-exec-8] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:56:35.588 DEBUG 12988 --- [http-nio-8888-exec-8] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:56:35.591 DEBUG 12988 --- [http-nio-8888-exec-8] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:56:35.592  INFO 12988 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Result : [TagVO(id=8, name=MyBatis-Plus, blogs=[Blog(id=5, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=11, name=ES6, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=12, name=微信, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=1, name=Java, blogs=[Blog(id=7, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)])]
2021-05-01 21:56:56.405  INFO 12988 --- [http-nio-8888-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 21:56:56.409 DEBUG 12988 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 21:56:56.409 DEBUG 12988 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 21:56:56.412 DEBUG 12988 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 21:56:56.415 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 21:56:56.416 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 21:56:56.418 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 21:56:56.421 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 21:56:56.422 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 21:56:56.423 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 21:56:56.429 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 21:56:56.430 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 21:56:56.434 DEBUG 12988 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 21:56:56.434  INFO 12988 --- [http-nio-8888-exec-9] com.manster.aspect.LogAspect             : Result : index
2021-05-01 21:56:56.936  INFO 12988 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/getTags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.getTags', args=[]}
2021-05-01 21:56:56.940 DEBUG 12988 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 21:56:56.940 DEBUG 12988 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 21:56:56.942 DEBUG 12988 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 21:56:56.942  INFO 12988 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : [TagVO(id=8, name=MyBatis-Plus, blogs=[Blog(id=5, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=11, name=ES6, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=12, name=微信, blogs=[Blog(id=6, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)]), TagVO(id=1, name=Java, blogs=[Blog(id=7, title=null, content=null, firstPicture=null, flag=null, views=null, appreciation=false, shareStatement=false, commentabled=false, published=false, recommend=false, createTime=null, updateTime=null, typeId=null, userId=null, description=null, tagIds=null)])]
2021-05-01 22:04:10.231  INFO 17144 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 17144 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 22:04:10.234 DEBUG 17144 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 22:04:10.234  INFO 17144 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 22:04:10.278  INFO 17144 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 22:04:10.278  INFO 17144 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 22:04:11.364  INFO 17144 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 22:04:11.371  INFO 17144 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 22:04:11.372  INFO 17144 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 22:04:11.373  INFO 17144 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 22:04:11.373  INFO 17144 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 22:04:11.374  INFO 17144 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 22:04:11.376  INFO 17144 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 22:04:11.451  INFO 17144 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 22:04:11.451  INFO 17144 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1172 ms
2021-05-01 22:04:11.512  INFO 17144 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 22:04:11.738  INFO 17144 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 22:04:12.825  INFO 17144 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 22:04:12.905  INFO 17144 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 22:04:13.211  INFO 17144 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 22:04:13.258  INFO 17144 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 22:04:13.265  INFO 17144 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.479 seconds (JVM running for 4.37)
2021-05-01 22:04:14.578  INFO 17144 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 22:04:14.578  INFO 17144 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 22:04:14.579  INFO 17144 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 22:04:14.604  INFO 17144 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:04:14.630 DEBUG 17144 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:04:14.647 DEBUG 17144 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:04:14.667 DEBUG 17144 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:04:14.683 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:04:14.684 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:04:14.686 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:04:14.689 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:04:14.689 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:04:14.691 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:04:14.694 DEBUG 17144 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:04:14.694 DEBUG 17144 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:04:14.696 DEBUG 17144 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:04:14.720 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:04:14.720 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:04:14.723 DEBUG 17144 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:04:14.723  INFO 17144 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:04:35.166  INFO 17144 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:04:35.171 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:04:35.171 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:04:35.174 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:04:35.178 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:04:35.179 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:04:35.181 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:04:35.185 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:04:35.186 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:04:35.189 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:04:35.197 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:04:35.199 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:04:35.202 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:04:35.210 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:04:35.210 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:04:35.213 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:04:35.214  INFO 17144 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:09:36.042  INFO 17144 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:09:36.047 DEBUG 17144 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:09:36.048 DEBUG 17144 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:09:36.051 DEBUG 17144 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:09:36.054 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:09:36.055 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:09:36.057 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:09:36.061 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:09:36.061 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:09:36.064 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:09:36.067 DEBUG 17144 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:09:36.068 DEBUG 17144 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:09:36.070 DEBUG 17144 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:09:36.075 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:09:36.075 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:09:36.077 DEBUG 17144 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:09:36.077  INFO 17144 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:09:52.211  INFO 17144 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:09:52.214 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:09:52.215 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:09:52.218 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:09:52.222 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:09:52.224 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:09:52.226 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:09:52.229 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:09:52.230 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:09:52.232 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:09:52.236 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:09:52.237 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:09:52.240 DEBUG 17144 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:09:52.245 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:09:52.245 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:09:52.247 DEBUG 17144 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:09:52.248  INFO 17144 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:12:12.633  INFO 17144 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:12:12.638 DEBUG 17144 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:12:12.638 DEBUG 17144 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:12:12.640 DEBUG 17144 --- [http-nio-8888-exec-8] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:12:12.644 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:12:12.645 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:12:12.646 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:12:12.650 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:12:12.650 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:12:12.651 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:12:12.656 DEBUG 17144 --- [http-nio-8888-exec-8] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:12:12.656 DEBUG 17144 --- [http-nio-8888-exec-8] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:12:12.657 DEBUG 17144 --- [http-nio-8888-exec-8] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:12:12.663 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:12:12.663 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:12:12.665 DEBUG 17144 --- [http-nio-8888-exec-8] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:12:12.665  INFO 17144 --- [http-nio-8888-exec-8] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:12:55.938  INFO 14244 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 14244 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 22:12:55.940 DEBUG 14244 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 22:12:55.940  INFO 14244 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 22:12:55.987  INFO 14244 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 22:12:55.987  INFO 14244 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 22:12:57.288  INFO 14244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 22:12:57.295  INFO 14244 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 22:12:57.295  INFO 14244 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 22:12:57.297  INFO 14244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 22:12:57.297  INFO 14244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 22:12:57.297  INFO 14244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 22:12:57.299  INFO 14244 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 22:12:57.382  INFO 14244 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 22:12:57.382  INFO 14244 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1394 ms
2021-05-01 22:12:57.443  INFO 14244 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 22:12:57.663  INFO 14244 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 22:12:58.729  INFO 14244 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 22:12:58.813  INFO 14244 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 22:12:59.115  INFO 14244 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 22:12:59.166  INFO 14244 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 22:12:59.174  INFO 14244 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.721 seconds (JVM running for 5.056)
2021-05-01 22:13:01.527  INFO 14244 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 22:13:01.527  INFO 14244 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 22:13:01.528  INFO 14244 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 22:13:01.554  INFO 14244 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:13:01.579 DEBUG 14244 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:13:01.595 DEBUG 14244 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:13:01.612 DEBUG 14244 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:13:01.628 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:13:01.628 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:13:01.631 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:13:01.634 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:13:01.634 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:13:01.636 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:13:01.639 DEBUG 14244 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:13:01.639 DEBUG 14244 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:13:01.641 DEBUG 14244 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:13:01.664 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:13:01.664 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:13:01.667 DEBUG 14244 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:13:01.668  INFO 14244 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:16:39.245  INFO 14244 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:16:39.249 DEBUG 14244 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:16:39.250 DEBUG 14244 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:16:39.252 DEBUG 14244 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:16:39.256 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:16:39.256 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:16:39.258 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:16:39.261 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:16:39.261 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:16:39.266 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:16:39.271 DEBUG 14244 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:16:39.271 DEBUG 14244 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:16:39.273 DEBUG 14244 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:16:39.281 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:16:39.282 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:16:39.285 DEBUG 14244 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:16:39.286  INFO 14244 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:20:46.289  INFO 9844 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 9844 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 22:20:46.291 DEBUG 9844 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 22:20:46.291  INFO 9844 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 22:20:46.329  INFO 9844 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 22:20:46.329  INFO 9844 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 22:20:47.323  INFO 9844 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 22:20:47.329  INFO 9844 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 22:20:47.329  INFO 9844 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 22:20:47.331  INFO 9844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 22:20:47.331  INFO 9844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 22:20:47.331  INFO 9844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 22:20:47.334  INFO 9844 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 22:20:47.407  INFO 9844 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 22:20:47.408  INFO 9844 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1078 ms
2021-05-01 22:20:47.467  INFO 9844 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 22:20:47.693  INFO 9844 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 22:20:48.776  INFO 9844 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 22:20:48.858  INFO 9844 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 22:20:49.165  INFO 9844 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 22:20:49.210  INFO 9844 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 22:20:49.218  INFO 9844 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.368 seconds (JVM running for 4.271)
2021-05-01 22:20:50.655  INFO 9844 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 22:20:50.655  INFO 9844 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 22:20:50.656  INFO 9844 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 22:20:50.679  INFO 9844 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:20:50.705 DEBUG 9844 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:20:50.722 DEBUG 9844 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:20:50.742 DEBUG 9844 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:20:50.759 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:20:50.759 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:20:50.762 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:20:50.765 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:20:50.766 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:20:50.768 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:20:50.771 DEBUG 9844 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:20:50.771 DEBUG 9844 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:20:50.772 DEBUG 9844 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:20:50.797 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:20:50.797 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:20:50.799 DEBUG 9844 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:20:50.799  INFO 9844 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:23:11.720  INFO 6884 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 6884 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 22:23:11.722 DEBUG 6884 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 22:23:11.722  INFO 6884 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 22:23:11.760  INFO 6884 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 22:23:11.760  INFO 6884 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 22:23:12.770  INFO 6884 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 22:23:12.776  INFO 6884 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 22:23:12.776  INFO 6884 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 22:23:12.778  INFO 6884 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 22:23:12.778  INFO 6884 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 22:23:12.778  INFO 6884 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 22:23:12.780  INFO 6884 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 22:23:12.851  INFO 6884 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 22:23:12.851  INFO 6884 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1090 ms
2021-05-01 22:23:12.908  INFO 6884 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 22:23:13.136  INFO 6884 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 22:23:14.317  INFO 6884 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 22:23:14.409  INFO 6884 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 22:23:14.738  INFO 6884 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 22:23:14.790  INFO 6884 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 22:23:14.798  INFO 6884 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.5 seconds (JVM running for 4.461)
2021-05-01 22:23:19.991  INFO 6884 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 22:23:19.992  INFO 6884 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 22:23:19.993  INFO 6884 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 22:23:20.020  INFO 6884 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:23:20.049 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:23:20.065 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:23:20.084 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:23:20.100 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:23:20.101 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:23:20.103 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:23:20.106 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:23:20.107 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:23:20.109 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:23:20.112 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:23:20.112 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:23:20.114 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:23:20.137 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:23:20.137 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:23:20.140 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:23:20.140  INFO 6884 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:23:46.492  INFO 6884 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:23:46.497 DEBUG 6884 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:23:46.498 DEBUG 6884 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:23:46.500 DEBUG 6884 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:23:46.506 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:23:46.506 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:23:46.508 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:23:46.513 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:23:46.513 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:23:46.517 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:23:46.522 DEBUG 6884 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:23:46.522 DEBUG 6884 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:23:46.525 DEBUG 6884 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:23:46.532 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:23:46.533 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:23:46.536 DEBUG 6884 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:23:46.536  INFO 6884 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:24:13.463  INFO 6884 --- [http-nio-8888-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:24:13.471 DEBUG 6884 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:24:13.472 DEBUG 6884 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:24:13.478 DEBUG 6884 --- [http-nio-8888-exec-9] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:24:13.485 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:24:13.486 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:24:13.494 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:24:13.502 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:24:13.503 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:24:13.509 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:24:13.516 DEBUG 6884 --- [http-nio-8888-exec-9] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:24:13.517 DEBUG 6884 --- [http-nio-8888-exec-9] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:24:13.519 DEBUG 6884 --- [http-nio-8888-exec-9] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:24:13.531 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:24:13.532 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:24:13.535 DEBUG 6884 --- [http-nio-8888-exec-9] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:24:13.535  INFO 6884 --- [http-nio-8888-exec-9] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:24:25.041  INFO 6884 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:24:25.045 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:24:25.045 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:24:25.048 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:24:25.052 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:24:25.052 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:24:25.055 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:24:25.058 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:24:25.059 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:24:25.060 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:24:25.065 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:24:25.065 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:24:25.067 DEBUG 6884 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:24:25.072 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:24:25.072 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:24:25.074 DEBUG 6884 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:24:25.075  INFO 6884 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:30:45.592  INFO 21368 --- [restartedMain] com.manster.AdminApplication             : Starting AdminApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 21368 (G:\git\mansterblog\admin\target\classes started by hp in G:\git\mansterblog)
2021-05-01 22:30:45.594 DEBUG 21368 --- [restartedMain] com.manster.AdminApplication             : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 22:30:45.594  INFO 21368 --- [restartedMain] com.manster.AdminApplication             : The following profiles are active: dev
2021-05-01 22:30:45.631  INFO 21368 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 22:30:45.631  INFO 21368 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 22:30:46.761  INFO 21368 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9000 (http)
2021-05-01 22:30:46.769  INFO 21368 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 22:30:46.769  INFO 21368 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 22:30:46.771  INFO 21368 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 22:30:46.771  INFO 21368 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 22:30:46.772  INFO 21368 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 22:30:46.775  INFO 21368 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 22:30:46.855  INFO 21368 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 22:30:46.855  INFO 21368 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1223 ms
2021-05-01 22:30:46.932  INFO 21368 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 22:30:47.169  INFO 21368 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 22:30:48.415  INFO 21368 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 22:30:48.502  INFO 21368 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 22:30:48.822  INFO 21368 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-05-01 22:30:48.852  INFO 21368 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9000 (http) with context path ''
2021-05-01 22:30:48.860  INFO 21368 --- [restartedMain] com.manster.AdminApplication             : Started AdminApplication in 3.659 seconds (JVM running for 4.572)
2021-05-01 22:30:50.334  INFO 21368 --- [http-nio-9000-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 22:30:50.335  INFO 21368 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 22:30:50.336  INFO 21368 --- [http-nio-9000-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 22:30:50.356  INFO 21368 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.loginPage', args=[]}
2021-05-01 22:30:50.361  INFO 21368 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : login
2021-05-01 22:30:54.085  INFO 21368 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/login', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.LoginController.login', args=[manster, 123456, org.apache.catalina.session.StandardSessionFacade@482d103d, {}]}
2021-05-01 22:30:54.146 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==>  Preparing: SELECT id,nickname,username,password,email,avatar,type,create_time,update_time FROM t_user WHERE (username = ? AND password = ?)
2021-05-01 22:30:54.163 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : ==> Parameters: manster(String), a448410bdcbb4d7cfb32830909f6aa08(String)
2021-05-01 22:30:54.179 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.UserMapper.selectOne  : <==      Total: 1
2021-05-01 22:30:54.182  INFO 21368 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : main
2021-05-01 22:30:55.766  INFO 21368 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs;jsessionid=3BF2CAB64D9790CF5E65819752E370C4', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 22:30:55.800 DEBUG 21368 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 22:30:55.801 DEBUG 21368 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 22:30:55.802 DEBUG 21368 --- [http-nio-9000-exec-3] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 22:30:55.807 DEBUG 21368 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 22:30:55.807 DEBUG 21368 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 22:30:55.812 DEBUG 21368 --- [http-nio-9000-exec-3] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:30:55.820 DEBUG 21368 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 22:30:55.821 DEBUG 21368 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 22:30:55.822 DEBUG 21368 --- [http-nio-9000-exec-3] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 22:30:55.823  INFO 21368 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 22:31:03.637  INFO 21368 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.input', args=[{}]}
2021-05-01 22:31:03.640 DEBUG 21368 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 22:31:03.641 DEBUG 21368 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 22:31:03.644 DEBUG 21368 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 22:31:03.651 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 22:31:03.652 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 22:31:03.653 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectList  : <==      Total: 12
2021-05-01 22:31:03.654  INFO 21368 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 22:31:32.755  INFO 21368 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.tags', args=[1, {}]}
2021-05-01 22:31:32.766 DEBUG 21368 --- [http-nio-9000-exec-10] c.m.mapper.TagMapper.selectPage_mpCount  : ==>  Preparing: SELECT COUNT(*) FROM t_tag
2021-05-01 22:31:32.766 DEBUG 21368 --- [http-nio-9000-exec-10] c.m.mapper.TagMapper.selectPage_mpCount  : ==> Parameters: 
2021-05-01 22:31:32.769 DEBUG 21368 --- [http-nio-9000-exec-10] c.m.mapper.TagMapper.selectPage_mpCount  : <==      Total: 1
2021-05-01 22:31:32.770 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectPage  : ==>  Preparing: SELECT id,name FROM t_tag LIMIT ?
2021-05-01 22:31:32.771 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectPage  : ==> Parameters: 5(Long)
2021-05-01 22:31:32.773 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.TagMapper.selectPage  : <==      Total: 5
2021-05-01 22:31:32.773  INFO 21368 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : tags
2021-05-01 22:31:38.692  INFO 21368 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 22:31:38.698 DEBUG 21368 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 22:31:38.698 DEBUG 21368 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 22:31:38.700 DEBUG 21368 --- [http-nio-9000-exec-1] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 22:31:38.700 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 22:31:38.701 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 22:31:38.703 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:31:38.709 DEBUG 21368 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 22:31:38.709 DEBUG 21368 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 22:31:38.710 DEBUG 21368 --- [http-nio-9000-exec-1] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 22:31:38.710  INFO 21368 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 22:31:43.922  INFO 21368 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.tags', args=[1, {}]}
2021-05-01 22:31:43.928 DEBUG 21368 --- [http-nio-9000-exec-3] c.m.mapper.TagMapper.selectPage_mpCount  : ==>  Preparing: SELECT COUNT(*) FROM t_tag
2021-05-01 22:31:43.928 DEBUG 21368 --- [http-nio-9000-exec-3] c.m.mapper.TagMapper.selectPage_mpCount  : ==> Parameters: 
2021-05-01 22:31:43.930 DEBUG 21368 --- [http-nio-9000-exec-3] c.m.mapper.TagMapper.selectPage_mpCount  : <==      Total: 1
2021-05-01 22:31:43.931 DEBUG 21368 --- [http-nio-9000-exec-3] com.manster.mapper.TagMapper.selectPage  : ==>  Preparing: SELECT id,name FROM t_tag LIMIT ?
2021-05-01 22:31:43.931 DEBUG 21368 --- [http-nio-9000-exec-3] com.manster.mapper.TagMapper.selectPage  : ==> Parameters: 5(Long)
2021-05-01 22:31:43.933 DEBUG 21368 --- [http-nio-9000-exec-3] com.manster.mapper.TagMapper.selectPage  : <==      Total: 5
2021-05-01 22:31:43.933  INFO 21368 --- [http-nio-9000-exec-3] com.manster.aspect.LogAspect             : Result : tags
2021-05-01 22:31:51.404  INFO 21368 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags/input', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.input', args=[{}]}
2021-05-01 22:31:51.405  INFO 21368 --- [http-nio-9000-exec-6] com.manster.aspect.LogAspect             : Result : tags-input
2021-05-01 22:32:05.326  INFO 21368 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.save', args=[Tag(id=null, name=源码), org.springframework.validation.BeanPropertyBindingResult: 0 errors, {}]}
2021-05-01 22:32:05.334 DEBUG 21368 --- [http-nio-9000-exec-7] com.manster.mapper.TagMapper.selectOne   : ==>  Preparing: SELECT id,name FROM t_tag WHERE (name = ?)
2021-05-01 22:32:05.334 DEBUG 21368 --- [http-nio-9000-exec-7] com.manster.mapper.TagMapper.selectOne   : ==> Parameters: 源码(String)
2021-05-01 22:32:05.335 DEBUG 21368 --- [http-nio-9000-exec-7] com.manster.mapper.TagMapper.selectOne   : <==      Total: 0
2021-05-01 22:32:05.349 DEBUG 21368 --- [http-nio-9000-exec-7] com.manster.mapper.TagMapper.insert      : ==>  Preparing: INSERT INTO t_tag ( name ) VALUES ( ? )
2021-05-01 22:32:05.349 DEBUG 21368 --- [http-nio-9000-exec-7] com.manster.mapper.TagMapper.insert      : ==> Parameters: 源码(String)
2021-05-01 22:32:05.350 DEBUG 21368 --- [http-nio-9000-exec-7] com.manster.mapper.TagMapper.insert      : <==    Updates: 1
2021-05-01 22:32:05.411  INFO 21368 --- [http-nio-9000-exec-7] com.manster.aspect.LogAspect             : Result : redirect:/admin/tags
2021-05-01 22:32:05.428  INFO 21368 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.tags', args=[1, {message=新增成功}]}
2021-05-01 22:32:05.434 DEBUG 21368 --- [http-nio-9000-exec-5] c.m.mapper.TagMapper.selectPage_mpCount  : ==>  Preparing: SELECT COUNT(*) FROM t_tag
2021-05-01 22:32:05.434 DEBUG 21368 --- [http-nio-9000-exec-5] c.m.mapper.TagMapper.selectPage_mpCount  : ==> Parameters: 
2021-05-01 22:32:05.437 DEBUG 21368 --- [http-nio-9000-exec-5] c.m.mapper.TagMapper.selectPage_mpCount  : <==      Total: 1
2021-05-01 22:32:05.439 DEBUG 21368 --- [http-nio-9000-exec-5] com.manster.mapper.TagMapper.selectPage  : ==>  Preparing: SELECT id,name FROM t_tag LIMIT ?
2021-05-01 22:32:05.439 DEBUG 21368 --- [http-nio-9000-exec-5] com.manster.mapper.TagMapper.selectPage  : ==> Parameters: 5(Long)
2021-05-01 22:32:05.441 DEBUG 21368 --- [http-nio-9000-exec-5] com.manster.mapper.TagMapper.selectPage  : <==      Total: 5
2021-05-01 22:32:05.442  INFO 21368 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Result : tags
2021-05-01 22:32:08.844  INFO 21368 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.tags', args=[2, {}]}
2021-05-01 22:32:08.850 DEBUG 21368 --- [http-nio-9000-exec-2] c.m.mapper.TagMapper.selectPage_mpCount  : ==>  Preparing: SELECT COUNT(*) FROM t_tag
2021-05-01 22:32:08.850 DEBUG 21368 --- [http-nio-9000-exec-2] c.m.mapper.TagMapper.selectPage_mpCount  : ==> Parameters: 
2021-05-01 22:32:08.853 DEBUG 21368 --- [http-nio-9000-exec-2] c.m.mapper.TagMapper.selectPage_mpCount  : <==      Total: 1
2021-05-01 22:32:08.854 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.TagMapper.selectPage  : ==>  Preparing: SELECT id,name FROM t_tag LIMIT ?,?
2021-05-01 22:32:08.854 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.TagMapper.selectPage  : ==> Parameters: 5(Long), 5(Long)
2021-05-01 22:32:08.856 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.TagMapper.selectPage  : <==      Total: 5
2021-05-01 22:32:08.856  INFO 21368 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : tags
2021-05-01 22:32:09.543  INFO 21368 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.tags', args=[3, {}]}
2021-05-01 22:32:09.550 DEBUG 21368 --- [http-nio-9000-exec-4] c.m.mapper.TagMapper.selectPage_mpCount  : ==>  Preparing: SELECT COUNT(*) FROM t_tag
2021-05-01 22:32:09.550 DEBUG 21368 --- [http-nio-9000-exec-4] c.m.mapper.TagMapper.selectPage_mpCount  : ==> Parameters: 
2021-05-01 22:32:09.552 DEBUG 21368 --- [http-nio-9000-exec-4] c.m.mapper.TagMapper.selectPage_mpCount  : <==      Total: 1
2021-05-01 22:32:09.554 DEBUG 21368 --- [http-nio-9000-exec-4] com.manster.mapper.TagMapper.selectPage  : ==>  Preparing: SELECT id,name FROM t_tag LIMIT ?,?
2021-05-01 22:32:09.555 DEBUG 21368 --- [http-nio-9000-exec-4] com.manster.mapper.TagMapper.selectPage  : ==> Parameters: 10(Long), 5(Long)
2021-05-01 22:32:09.556 DEBUG 21368 --- [http-nio-9000-exec-4] com.manster.mapper.TagMapper.selectPage  : <==      Total: 3
2021-05-01 22:32:09.556  INFO 21368 --- [http-nio-9000-exec-4] com.manster.aspect.LogAspect             : Result : tags
2021-05-01 22:32:10.875  INFO 21368 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.tags', args=[2, {}]}
2021-05-01 22:32:10.880 DEBUG 21368 --- [http-nio-9000-exec-9] c.m.mapper.TagMapper.selectPage_mpCount  : ==>  Preparing: SELECT COUNT(*) FROM t_tag
2021-05-01 22:32:10.880 DEBUG 21368 --- [http-nio-9000-exec-9] c.m.mapper.TagMapper.selectPage_mpCount  : ==> Parameters: 
2021-05-01 22:32:10.882 DEBUG 21368 --- [http-nio-9000-exec-9] c.m.mapper.TagMapper.selectPage_mpCount  : <==      Total: 1
2021-05-01 22:32:10.883 DEBUG 21368 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectPage  : ==>  Preparing: SELECT id,name FROM t_tag LIMIT ?,?
2021-05-01 22:32:10.883 DEBUG 21368 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectPage  : ==> Parameters: 5(Long), 5(Long)
2021-05-01 22:32:10.885 DEBUG 21368 --- [http-nio-9000-exec-9] com.manster.mapper.TagMapper.selectPage  : <==      Total: 5
2021-05-01 22:32:10.885  INFO 21368 --- [http-nio-9000-exec-9] com.manster.aspect.LogAspect             : Result : tags
2021-05-01 22:32:12.953  INFO 21368 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/tags', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.TagController.tags', args=[1, {}]}
2021-05-01 22:32:12.962 DEBUG 21368 --- [http-nio-9000-exec-1] c.m.mapper.TagMapper.selectPage_mpCount  : ==>  Preparing: SELECT COUNT(*) FROM t_tag
2021-05-01 22:32:12.963 DEBUG 21368 --- [http-nio-9000-exec-1] c.m.mapper.TagMapper.selectPage_mpCount  : ==> Parameters: 
2021-05-01 22:32:12.965 DEBUG 21368 --- [http-nio-9000-exec-1] c.m.mapper.TagMapper.selectPage_mpCount  : <==      Total: 1
2021-05-01 22:32:12.966 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectPage  : ==>  Preparing: SELECT id,name FROM t_tag LIMIT ?
2021-05-01 22:32:12.966 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectPage  : ==> Parameters: 5(Long)
2021-05-01 22:32:12.967 DEBUG 21368 --- [http-nio-9000-exec-1] com.manster.mapper.TagMapper.selectPage  : <==      Total: 5
2021-05-01 22:32:12.968  INFO 21368 --- [http-nio-9000-exec-1] com.manster.aspect.LogAspect             : Result : tags
2021-05-01 22:32:23.125  INFO 21368 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {}]}
2021-05-01 22:32:23.136 DEBUG 21368 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 22:32:23.136 DEBUG 21368 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 22:32:23.137 DEBUG 21368 --- [http-nio-9000-exec-10] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 22:32:23.138 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 22:32:23.138 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 22:32:23.141 DEBUG 21368 --- [http-nio-9000-exec-10] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:32:23.145 DEBUG 21368 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 22:32:23.145 DEBUG 21368 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 22:32:23.146 DEBUG 21368 --- [http-nio-9000-exec-10] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 22:32:23.147  INFO 21368 --- [http-nio-9000-exec-10] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 22:40:31.269  INFO 21368 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/input', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.input', args=[{}]}
2021-05-01 22:40:31.275 DEBUG 21368 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 22:40:31.275 DEBUG 21368 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 22:40:31.277 DEBUG 21368 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 22:40:31.281 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.TagMapper.selectList  : ==>  Preparing: SELECT id,name FROM t_tag
2021-05-01 22:40:31.281 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.TagMapper.selectList  : ==> Parameters: 
2021-05-01 22:40:31.283 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.TagMapper.selectList  : <==      Total: 13
2021-05-01 22:40:31.283  INFO 21368 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : blogs-input
2021-05-01 22:47:04.265  INFO 11872 --- [restartedMain] com.manster.WebApplication               : Starting WebApplication using Java 1.8.0_201 on LAPTOP-2OEBBGKT with PID 11872 (G:\git\mansterblog\web\target\classes started by hp in G:\git\mansterblog)
2021-05-01 22:47:04.267 DEBUG 11872 --- [restartedMain] com.manster.WebApplication               : Running with Spring Boot v2.4.5, Spring v5.3.6
2021-05-01 22:47:04.267  INFO 11872 --- [restartedMain] com.manster.WebApplication               : The following profiles are active: dev
2021-05-01 22:47:04.304  INFO 11872 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-05-01 22:47:04.304  INFO 11872 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-05-01 22:47:05.319  INFO 11872 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-05-01 22:47:05.326  INFO 11872 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-05-01 22:47:05.326  INFO 11872 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-05-01 22:47:05.327  INFO 11872 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2021-05-01 22:47:05.328  INFO 11872 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-05-01 22:47:05.328  INFO 11872 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-05-01 22:47:05.330  INFO 11872 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2021-05-01 22:47:05.404  INFO 11872 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-05-01 22:47:05.404  INFO 11872 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1099 ms
2021-05-01 22:47:05.461  INFO 11872 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-05-01 22:47:05.685  INFO 11872 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-05-01 22:47:06.771  INFO 11872 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-05-01 22:47:06.851  INFO 11872 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-05-01 22:47:07.153  WARN 11872 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2021-05-01 22:47:07.198  INFO 11872 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-05-01 22:47:07.205  INFO 11872 --- [restartedMain] com.manster.WebApplication               : Started WebApplication in 3.317 seconds (JVM running for 4.205)
2021-05-01 22:47:27.899  INFO 11872 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-05-01 22:47:27.899  INFO 11872 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-05-01 22:47:27.901  INFO 11872 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-05-01 22:47:27.932  INFO 11872 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:47:27.963 DEBUG 11872 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:47:27.981 DEBUG 11872 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:47:28.003 DEBUG 11872 --- [http-nio-8888-exec-1] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 3
2021-05-01 22:47:28.020 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:47:28.020 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:47:28.023 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:47:28.026 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:47:28.027 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:47:28.029 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 8
2021-05-01 22:47:28.032 DEBUG 11872 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:47:28.032 DEBUG 11872 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:47:28.034 DEBUG 11872 --- [http-nio-8888-exec-1] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 4
2021-05-01 22:47:28.057 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:47:28.058 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:47:28.061 DEBUG 11872 --- [http-nio-8888-exec-1] c.manster.mapper.BlogMapper.selectList   : <==      Total: 3
2021-05-01 22:47:28.062  INFO 11872 --- [http-nio-8888-exec-1] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:50:14.563  INFO 21368 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs/save', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.save', args=[Blog(id=null, title=java集合之map接口, content=- Map与Collection并列存在。用于保存具有映射关系的数据:key-value
- Map中的key和value都可以是任何引用类型的数据
- Map中的key用set来存放，不允许重复，即同一个Map对象所对应的类，须重写 hashCode()和 equals()方法
- 常用 String类作为Map的“键”
- key和value之间存在单向一对一关系，即通过指定的key总能找到唯一的、确定的value
- Map接口的常用实现类:HashMap、TreeMap、LinkedHashMap和Properties。其中，HashMap是Map接口使用频率最高的实现类

### 1. 常见实现类结构

![image-20200429112012230](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330171341.png)

```txt
|----Map:双列数据，存储key-value对的数据   ---类似于高中的函数：y = f(x)
     |----HashMap:作为Map的主要实现类；线程不安全的，效率高；存储null的key和value
          |----LinkedHashMap:保证在遍历map元素时，可以照添加的顺序实现遍历。
                    原因：在原的HashMap底层结构基础上，添加了一对指针，指向前一个和后一个元素。
                    对于频繁的遍历操作，此类执行效率高于HashMap。
     |----TreeMap:保证照添加的key-value对进行排序，实现排序遍历。此时考虑key的自然排序或定制排序
                      底层使用红黑树
     |----Hashtable:作为古老的实现类；线程安全的，效率低；不能存储null的key和value
          |----Properties:常用来处理配置文件。key和value都是String类型


HashMap的底层： 数组+链表  （JDK 7.0及之前)
               数组+链表+红黑树 （JDK 8.0以后)
```

#### 1.1 HashMap

- HashMap是Map接口使用频率最高的实现类。
- 允许使用null键和null值，与 HashSet一样，不保证映射的顺序。
- 所有的key构成的集合是set：无序的、不可重复的。所以，key所在的类要重写equals()和 hashCode()
- 所有的value构成的集合是Collection：无序的、可以重复的。所以，value所在的类要重写:equals()
- 一个key-value构成一个entry
- 所有的entry构成的集合是Set：无序的、不可重复的
- HashMap判断两个key相等的标准是：两个key通过equals()方法返回true，hashCode值也相等。
- HashMap判断两个value相等的标准是：两个value通过equals()方法返回true.

代码示例：

```java
@Test
public void test1(){
    Map map = new HashMap();

    map.put(null,123);

}
```

#### 1.2 LinkedHashMap

- LinkedHashMap底层使用的结构与HashMap相同，因为LinkedHashMap继承于HashMap.
- 区别就在于：LinkedHashMap内部提供了Entry，替换HashMap中的Node.
- 与Linkedhash Set类似，LinkedHashMap可以维护Map的迭代顺序：迭代顺序与Key-value对的插入顺序一致

代码示例：

```java
@Test
public void test2(){
    Map map = new LinkedHashMap();
    map.put(123,"AA");
    map.put(345,"BB");
    map.put(12,"CC");

    System.out.println(map);
} 
```

#### 1.3 TreeMap

- TreeMap存储Key-Value对时，需要根据key-value对进行排序。TreeMap可以保证所有的 Key-Value对处于有序状态。
- TreeSet底层使用红黑树结构存储数据
- TreeMap的Key的排序:
  - 自然排序： TreeMap的所有的Key必须实现Comparable接口，而且所有的Key应该是同一个类的对象，否则将会抛出ClasssCastEXception()
  - 定制排序：创建 TreeMap时，传入一个 Comparator对象，该对象负责对TreeMap中的所有key进行排序。此时不需要Map的Key实现Comparable接口
- TreeMap判断两个key相等的标准：两个key通过 compareTo()方法或者compare()方法返回0.

#### 1.4 Hashtable

- Hashtable是个古老的Map实现类，JDK1.0就提供了。不同于 HashMap，Hashtable是线程安全的.
- Hashtable实现原理和HashMap相同，功能相同。底层都使用哈希表结构，查询速度快，很多情况下可以互用
- 与HashMap.不同，Hashtable不允许使用null作为key和value.
- 与HashMap一样，Hashtable也不能保证其中Key-value对的顺序.
- Hashtable判断两个key相等、两个value相等的标准，与HashMap-致.

#### 1.5 Properties

- Properties类是Hashtable的子类，该对象用于处理属性文件
- 由于属性文件里的key、value都是字符串类型，所以Properties里的key和value都是字符串类型
- 存取数据时，建议使用setProperty(String key,String value)方法和getProperty(String key)方法

代码示例：

```java
//Properties:常用来处理配置文件。key和value都是String类型
public static void main(String[] args)  {
    FileInputStream fis = null;
    try {
        Properties pros = new Properties();

        fis = new FileInputStream("jdbc.properties");
        pros.load(fis);//加载流对应的文件

        String name = pros.getProperty("name");
        String password = pros.getProperty("password");

        System.out.println("name = " + name + ", password = " + password);
    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        if(fis != null){
            try {
                fis.close();
            } catch (IOException e) {
                e.printStackTrace();
            }

        }
    }

}
```

### 2. 存储结构的理解：

- Map中的key:无序的、不可重复的，使用Set存储所的key ---> key所在的类要重写equals()和hashCode() （以HashMap为例)
- Map中的value:无序的、可重复的，使用Collection存储所的value --->value所在的类要重写equals()
- 一个键值对：key-value构成了一个Entry对象。
- Map中的entry:无序的、不可重复的，使用Set存储所的entry

![image-20200429112432392](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330171345.png)



### 3. 常用方法



#### 3.1添加、删除、修改操作：

- Object put(Object key,Object value)：将指定key-value添加到(或修改)当前map对象中
- void putAll(Map m):将m中的所有key-value对存放到当前map中
- Object remove(Object key)：移除指定key的key-value对，并返回value
- void clear()：清空当前map中的所有数据

代码示例：

```java
@Test
public void test1() {
    Map map = new HashMap();
    //Object put(Object key,Object value)：将指定key-value添加到(或修改)当前map对象中
    map.put("AA",123);
    map.put("ZZ",251);
    map.put("CC",110);
    map.put("RR",124);
    map.put("FF",662);
    System.out.println(map);//{AA=123, ZZ=251, CC=110, RR=124, FF=662}

    //Object put(Object key,Object value)：将指定key-value添加到(或修改)当前map对象中
    map.put("ZZ",261);
    System.out.println(map);//{AA=123, ZZ=261, CC=110, RR=124, FF=662}

    //void putAll(Map m):将m中的所有key-value对存放到当前map中
    HashMap map1 = new HashMap();
    map1.put("GG",435);
    map1.put("DD",156);
    map.putAll(map1);
    System.out.println(map);//{AA=123, ZZ=261, CC=110, RR=124, FF=662, GG=435, DD=156}

    //Object remove(Object key)：移除指定key的key-value对，并返回value
    Object value = map.remove("GG");
    System.out.println(value);//435
    System.out.println(map);//{AA=123, ZZ=261, CC=110, RR=124, FF=662, DD=156}

    //void clear()：清空当前map中的所有数据
    map.clear();
    System.out.println(map.size());//0  与map = null操作不同
    System.out.println(map);//{}
}
```



#### 3.2元素查询的操作：

- Object get(Object key)：获取指定key对应的value
- boolean containsKey(Object key)：是否包含指定的key
- boolean containsValue(Object value)：是否包含指定的value
- int size()：返回map中key-value对的个数
- boolean isEmpty()：判断当前map是否为空
- boolean equals(Object obj)：判断当前map和参数对象obj是否相等

代码示例：

```java
@Test
public void test2() {
    Map map = new HashMap();
    map.put("AA", 123);
    map.put("ZZ", 251);
    map.put("CC", 110);
    map.put("RR", 124);
    map.put("FF", 662);
    System.out.println(map);//{AA=123, ZZ=251, CC=110, RR=124, FF=662}
    //Object get(Object key)：获取指定key对应的value
    System.out.println(map.get("AA"));//123

    //boolean containsKey(Object key)：是否包含指定的key
    System.out.println(map.containsKey("ZZ"));//true

    //boolean containsValue(Object value)：是否包含指定的value
    System.out.println(map.containsValue(123));//true

    //int size()：返回map中key-value对的个数
    System.out.println(map.size());//5

    //boolean isEmpty()：判断当前map是否为空
    System.out.println(map.isEmpty());//false

    //boolean equals(Object obj)：判断当前map和参数对象obj是否相等
    Map map1 = new HashMap();
    map1.put("AA", 123);
    map1.put("ZZ", 251);
    map1.put("CC", 110);
    map1.put("RR", 124);
    map1.put("FF", 662);
    System.out.println(map.equals(map1));//true
}
```



#### 3.3 元视图操作的方法：

- Set keySet()：返回所有key构成的Set集合
- Collection values()：返回所有value构成的Collection集合
- Set entrySet()：返回所有key-value对构成的Set集合

代码示例：

```java
@Test
public void test3() {
    Map map = new HashMap();
    map.put("AA", 123);
    map.put("ZZ", 251);
    map.put("CC", 110);
    map.put("RR", 124);
    map.put("FF", 662);
    System.out.println(map);//{AA=123, ZZ=251, CC=110, RR=124, FF=662}
    //遍历所有的key集:Set keySet()：返回所有key构成的Set集合
    Set set = map.keySet();
    Iterator iterator = set.iterator();
    while (iterator.hasNext()) {
        System.out.println(iterator.next());
    }
    System.out.println("--------------");
    //遍历所有的value集：Collection values()：返回所有value构成的Collection集合
    Collection values = map.values();
    for (Object obj :
         values) {
        System.out.println(obj);
    }
    System.out.println("---------------");
    //Set entrySet()：返回所有key-value对构成的Set集合
    Set entrySet = map.entrySet();
    Iterator iterator1 = entrySet.iterator();
    //方式一：
    while (iterator1.hasNext()) {
        Object obj = iterator1.next();
        //entrySet集合中的元素都是entry
        Map.Entry entry = (Map.Entry) obj;
        System.out.println(entry.getKey() + "-->" + entry.getValue());
    }
    System.out.println("--------------");

    //方式二：
    Set keySet = map.keySet();
    Iterator iterator2 = keySet.iterator();
    while (iterator2.hasNext()) {
        Object key = iterator2.next();
        Object value = map.get(key);
        System.out.println(key + "==" + value);
    }
}
```



#### 总结：常用方法：

- 添加：put(Object key,Object value)
- 删除：remove(Object key)
- 修改：put(Object key,Object value)
- 查询：get(Object key)
- 长度：size()
- 遍历：keySet() / values() / entrySet()



### 4. 内存结构说明：（难点）



#### 4.1 HashMap在JDK 7.0中实现原理：

4.1.1 HashMap的存储结构：

JDK 7.0及以前的版本：HashMap是数组+链表结构（地址链表法）

JDK 8.0版本以后：HashMap是数组+链表+红黑树实现

![image-20200429140534825](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330171351.png)

4.1.2 对象创建和添加过程：

HashMap map = new HashMap():

在实例化以后，底层创建了长度是16的一维数组Entry[] table。

>  ...可能已经执行过多次put...

map.put(key1,value1):

- 首先，调用key1所在类的hashCode()计算key1哈希值，此哈希值经过某种算法计算以后，得到在Entry数组中的存放位置。
- 如果此位置上的数据为空，此时的key1-value1添加成功。 ----情况1
- 如果此位置上的数据不为空，(意味着此位置上存在一个或多个数据(以链表形式存在)),比较key1和已经存在的一个或多个数据的哈希值：
  - 如果key1的哈希值与已经存在的数据的哈希值都不相同，此时key1-value1添加成功。----情况2
  - 如果key1的哈希值和已经存在的某一个数据(key2-value2)的哈希值相同，继续比较：调用key1所在类的equals(key2)方法，比较：
    - 如果equals()返回false:此时key1-value1添加成功。----情况3
    - 如果equals()返回true:使用value1替换value2。

> 补充：关于情况2和情况3：此时key1-value1和原来的数据以链表的方式存储。

在不断的添加过程中，会涉及到扩容问题，当超出临界值(且要存放的位置非空)时，扩容。默认的扩容方式：扩容为原来容量的2倍，并将原有的数据复制过来。

4.1.3 HashMap的扩容

当HashMap中的元素越来越多的时候，hash冲突的几率也就越来越高，因为数组的长度是固定的。所以为了提高查询的效率，就要对 HashMap的数组进行扩容，而在HashMap数组扩容之后，原数组中的数据必须重新计算其在新数组中的位置，并放进去，这就是 resize。

4.1.4 HashMap扩容时机

当HashMap中的元素个数超过数组大小（数组总大小 length，不是数组中个数）* loadFactor时，就会进行数组扩容，loadFactor的默认值(DEFAULT_LOAD_ FACTOR)为0.75，这是一个折中的取值。也就是说，默认情况下，数组大小(DEFAULT INITIAL CAPACITY)为16，那么当 HashMap中元素个数超过16 * 0.75=12（这个值就是代码中的 threshold值，也叫做临界值）的时候，就把数组的大小扩展为2 * 16=32，即扩大一倍，然后重新计算每个元素在数组中的位置，而这是一个非常消耗性能的操作，所以如果我们已经预知 HashMap中元素的个数，那么预设元素的个数能够有效的提高HashMap的性能。



#### 4.2 HashMap在JDK 8.0底层实现原理：

4.2.1 HashMap的存储结构：

HashMap的内部存储结构其实是数组+链表+红黑树的组合。

![image-20200429140606819](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330171354.png)

4.2.2 HashMap添加元素的过程：

当实例化一个HashMap时，会初始化 initialCapacity和loadFactor，在put第一对映射关系时，系统会创建一个长度为 initialCapacity的Node数组，这个长度在哈希表中被称为容量（Capacity），在这个数组中可以存放元素的位置我们称之为“桶”（ bucket），每个bucket都有自己的索引，系统可以根据索引快速的查找bucket中的元素。

每个 bucket中存储一个元素，即一个Node对象，但每一个Noe对象可以带个引用变量next，用于指向下一个元素，因此，在一个桶中，就有可能生成一个Node链。也可能是一个一个 TreeNode对象，每一个Tree node对象可以有两个叶子结点left和right，因此，在一个桶中，就有可能生成一个TreeNode树。而新添加的元素作为链表的last，或树的叶子结点。

4.2.3 HashMap的扩容机制:

- 当HashMapl中的其中一个链的对象个数没有达到8个和JDK 7.0以前的扩容方式一样。
- 当HashMapl中的其中一个链的对象个数如果达到了8个，此时如果 capacity 没有达到64，那么HashMap会先扩容解决，如果已经达到了64，那么这个链会变成树，结点类型由Node变成 Tree Node类型。当然，如果当映射关系被移除后，下次resize方法时判断树的结点个数低于6个，也会把树再转为链表。

4.2.4 JDK 8.0与JDK 7.0中HashMap底层的变化：

1. new HashMap():底层没有创建一个长度为16的数组
2. JDK 8.0底层的数组是：Node[],而非Entry[]
3. 首次调用put()方法时，底层创建长度为16的数组
4. JDK 7.0底层结构只有：数组+链表。JDK 8.0中底层结构：数组+链表+红黑树。
   - 形成链表时，七上八下（jdk7:新的元素指向旧的元素。jdk8：旧的元素指向新的元素）
   - 当数组的某一个索引位置上的元素以链表形式存在的数据个数 > 8 且当前数组的长度 > 64时，此时此索引位置上的所数据改为使用红黑树存储。



#### 4.3 HashMap底层典型属性的属性的说明：

- DEFAULT_INITIAL_CAPACITY : HashMap的默认容量，16
- DEFAULT_LOAD_FACTOR：HashMap的默认加载因子：0.75
- threshold：扩容的临界值，= 容量*填充因子：16 * 0.75 => 12
- TREEIFY_THRESHOLD：Bucket中链表长度大于该默认值，转化为红黑树:JDK 8.0引入
- MIN_TREEIFY_CAPACITY：桶中的Node被树化时最小的hash表容量:64



#### 4.4 LinkedHashMap的底层实现原理

- LinkedHashMap底层使用的结构与HashMap相同，因为LinkedHashMap继承于HashMap.
- 区别就在于：LinkedHashMap内部提供了Entry，替换HashMap中的Node.
- 与Linkedhash Set类似，LinkedHashMap可以维护Map的迭代顺序：迭代顺序与Key-value对的插入顺序一致

HashMap中内部类Node源码：

```java
static class Node<K,V> implements Map.Entry<K,V>{
    final int hash;
    final K key;
    V value;
    Node<K,V> next;
}
```

LinkedHashM中内部类Entry源码：

```java
static class Entry<K,V> extends HashMap.Node<K,V> {
    Entry<K,V> before, after;//能够记录添加的元素的先后顺序
    Entry(int hash, K key, V value, Node<K,V> next) {
        super(hash, key, value, next);
    }
}
```



### 5. TreeMap的使用

向TreeMap中添加key-value，要求key必须是由同一个类创建的对象 要照key进行排序：自然排序 、定制排序

代码示例：

```java
//自然排序
@Test
public void test() {
    TreeMap map = new TreeMap();
    User u1 = new User("Tom", 23);
    User u2 = new User("Jarry", 18);
    User u3 = new User("Bruce", 56);
    User u4 = new User("Davie", 23);

    map.put(u1, 98);
    map.put(u2, 16);
    map.put(u3, 92);
    map.put(u4, 100);

    Set entrySet = map.entrySet();
    Iterator iterator = entrySet.iterator();
    while (iterator.hasNext()) {
        Object obj = iterator.next();
        Map.Entry entry = (Map.Entry) obj;
        System.out.println(entry.getKey() + "=" + entry.getValue());
    }
}

//定制排序：按照年龄大小排
@Test
public void test2() {
    TreeMap map = new TreeMap(new Comparator() {
        @Override
        public int compare(Object o1, Object o2) {
            if (o1 instanceof User && o2 instanceof User) {
                User u1 = (User) o1;
                User u2 = (User) o2;
                return Integer.compare(u1.getAge(), u2.getAge());
            }
            throw new RuntimeException("输入数据类型错误");
        }
    });
    User u1 = new User("Tom", 23);
    User u2 = new User("Jarry", 18);
    User u3 = new User("Bruce", 56);
    User u4 = new User("Davie", 23);

    map.put(u1, 98);
    map.put(u2, 16);
    map.put(u3, 92);
    map.put(u4, 100);

    Set entrySet = map.entrySet();
    Iterator iterator = entrySet.iterator();
    while (iterator.hasNext()) {
        Object obj = iterator.next();
        Map.Entry entry = (Map.Entry) obj;
        System.out.println(entry.getKey() + "=" + entry.getValue());
    }
}
```



### 6.使用Properties读取配置文件

代码示例：

```java
//Properties:常用来处理配置文件。key和value都是String类型
public static void main(String[] args)  {
    FileInputStream fis = null;
    try {
        Properties pros = new Properties();

        fis = new FileInputStream("jdbc.properties");
        pros.load(fis);//加载流对应的文件

        String name = pros.getProperty("name");
        String password = pros.getProperty("password");

        System.out.println("name = " + name + ", password = " + password);
    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        if(fis != null){
            try {
                fis.close();
            } catch (IOException e) {
                e.printStackTrace();
            }

        }
    }

}
```



### 7.面试题

1. HashMap的底层实现原理？
2. HashMap 和 Hashtable的异同？
3. CurrentHashMap 与 Hashtable的异同？
4. 负载因子值的大小，对HashMap的影响？
   - 负载因子的大小决定了HashMap的数据密度。
   - 负载因子越大密度越大，发生碰撞的几率越高，数组中的链表越容易长，造成査询或插入时的比较次数增多，性能会下降
   - 负载因子越小，就越容易触发扩容，数据密度也越小，意味着发生碰撞的几率越小，数组中的链表也就越短，查询和插入时比较的次数也越小，性能会更高。但是会浪费一定的内容空间。而且经常扩容也会影响性能，建议初始化预设大一点的空间
   - 按照其他语言的参考及研究经验，会考虑将负载因子设置为0.7~0.75，此时平均检索长度接近于常数。, firstPicture=https://picsum.photos/id/188/800/450, flag=, views=null, appreciation=true, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=3, userId=null, description=java.util 中的集合类包含 Java 中某些最常用的类。最常用的集合类是 List 和 Map。Map 提供了一个更通用的元素存储方法。Map 集合类用于存储元素对（称作“键”和“值”），其中每个键映射到一个值。, tagIds=1), org.apache.catalina.session.StandardSessionFacade@482d103d, {}]}
2021-05-01 22:50:14.573 DEBUG 21368 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.insert     : ==>  Preparing: INSERT INTO t_blog ( title, content, first_picture, flag, views, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, description, tag_ids ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-05-01 22:50:14.577 DEBUG 21368 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.insert     : ==> Parameters: java集合之map接口(String), - Map与Collection并列存在。用于保存具有映射关系的数据:key-value
- Map中的key和value都可以是任何引用类型的数据
- Map中的key用set来存放，不允许重复，即同一个Map对象所对应的类，须重写 hashCode()和 equals()方法
- 常用 String类作为Map的“键”
- key和value之间存在单向一对一关系，即通过指定的key总能找到唯一的、确定的value
- Map接口的常用实现类:HashMap、TreeMap、LinkedHashMap和Properties。其中，HashMap是Map接口使用频率最高的实现类

### 1. 常见实现类结构

![image-20200429112012230](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330171341.png)

```txt
|----Map:双列数据，存储key-value对的数据   ---类似于高中的函数：y = f(x)
     |----HashMap:作为Map的主要实现类；线程不安全的，效率高；存储null的key和value
          |----LinkedHashMap:保证在遍历map元素时，可以照添加的顺序实现遍历。
                    原因：在原的HashMap底层结构基础上，添加了一对指针，指向前一个和后一个元素。
                    对于频繁的遍历操作，此类执行效率高于HashMap。
     |----TreeMap:保证照添加的key-value对进行排序，实现排序遍历。此时考虑key的自然排序或定制排序
                      底层使用红黑树
     |----Hashtable:作为古老的实现类；线程安全的，效率低；不能存储null的key和value
          |----Properties:常用来处理配置文件。key和value都是String类型


HashMap的底层： 数组+链表  （JDK 7.0及之前)
               数组+链表+红黑树 （JDK 8.0以后)
```

#### 1.1 HashMap

- HashMap是Map接口使用频率最高的实现类。
- 允许使用null键和null值，与 HashSet一样，不保证映射的顺序。
- 所有的key构成的集合是set：无序的、不可重复的。所以，key所在的类要重写equals()和 hashCode()
- 所有的value构成的集合是Collection：无序的、可以重复的。所以，value所在的类要重写:equals()
- 一个key-value构成一个entry
- 所有的entry构成的集合是Set：无序的、不可重复的
- HashMap判断两个key相等的标准是：两个key通过equals()方法返回true，hashCode值也相等。
- HashMap判断两个value相等的标准是：两个value通过equals()方法返回true.

代码示例：

```java
@Test
public void test1(){
    Map map = new HashMap();

    map.put(null,123);

}
```

#### 1.2 LinkedHashMap

- LinkedHashMap底层使用的结构与HashMap相同，因为LinkedHashMap继承于HashMap.
- 区别就在于：LinkedHashMap内部提供了Entry，替换HashMap中的Node.
- 与Linkedhash Set类似，LinkedHashMap可以维护Map的迭代顺序：迭代顺序与Key-value对的插入顺序一致

代码示例：

```java
@Test
public void test2(){
    Map map = new LinkedHashMap();
    map.put(123,"AA");
    map.put(345,"BB");
    map.put(12,"CC");

    System.out.println(map);
} 
```

#### 1.3 TreeMap

- TreeMap存储Key-Value对时，需要根据key-value对进行排序。TreeMap可以保证所有的 Key-Value对处于有序状态。
- TreeSet底层使用红黑树结构存储数据
- TreeMap的Key的排序:
  - 自然排序： TreeMap的所有的Key必须实现Comparable接口，而且所有的Key应该是同一个类的对象，否则将会抛出ClasssCastEXception()
  - 定制排序：创建 TreeMap时，传入一个 Comparator对象，该对象负责对TreeMap中的所有key进行排序。此时不需要Map的Key实现Comparable接口
- TreeMap判断两个key相等的标准：两个key通过 compareTo()方法或者compare()方法返回0.

#### 1.4 Hashtable

- Hashtable是个古老的Map实现类，JDK1.0就提供了。不同于 HashMap，Hashtable是线程安全的.
- Hashtable实现原理和HashMap相同，功能相同。底层都使用哈希表结构，查询速度快，很多情况下可以互用
- 与HashMap.不同，Hashtable不允许使用null作为key和value.
- 与HashMap一样，Hashtable也不能保证其中Key-value对的顺序.
- Hashtable判断两个key相等、两个value相等的标准，与HashMap-致.

#### 1.5 Properties

- Properties类是Hashtable的子类，该对象用于处理属性文件
- 由于属性文件里的key、value都是字符串类型，所以Properties里的key和value都是字符串类型
- 存取数据时，建议使用setProperty(String key,String value)方法和getProperty(String key)方法

代码示例：

```java
//Properties:常用来处理配置文件。key和value都是String类型
public static void main(String[] args)  {
    FileInputStream fis = null;
    try {
        Properties pros = new Properties();

        fis = new FileInputStream("jdbc.properties");
        pros.load(fis);//加载流对应的文件

        String name = pros.getProperty("name");
        String password = pros.getProperty("password");

        System.out.println("name = " + name + ", password = " + password);
    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        if(fis != null){
            try {
                fis.close();
            } catch (IOException e) {
                e.printStackTrace();
            }

        }
    }

}
```

### 2. 存储结构的理解：

- Map中的key:无序的、不可重复的，使用Set存储所的key ---> key所在的类要重写equals()和hashCode() （以HashMap为例)
- Map中的value:无序的、可重复的，使用Collection存储所的value --->value所在的类要重写equals()
- 一个键值对：key-value构成了一个Entry对象。
- Map中的entry:无序的、不可重复的，使用Set存储所的entry

![image-20200429112432392](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330171345.png)



### 3. 常用方法



#### 3.1添加、删除、修改操作：

- Object put(Object key,Object value)：将指定key-value添加到(或修改)当前map对象中
- void putAll(Map m):将m中的所有key-value对存放到当前map中
- Object remove(Object key)：移除指定key的key-value对，并返回value
- void clear()：清空当前map中的所有数据

代码示例：

```java
@Test
public void test1() {
    Map map = new HashMap();
    //Object put(Object key,Object value)：将指定key-value添加到(或修改)当前map对象中
    map.put("AA",123);
    map.put("ZZ",251);
    map.put("CC",110);
    map.put("RR",124);
    map.put("FF",662);
    System.out.println(map);//{AA=123, ZZ=251, CC=110, RR=124, FF=662}

    //Object put(Object key,Object value)：将指定key-value添加到(或修改)当前map对象中
    map.put("ZZ",261);
    System.out.println(map);//{AA=123, ZZ=261, CC=110, RR=124, FF=662}

    //void putAll(Map m):将m中的所有key-value对存放到当前map中
    HashMap map1 = new HashMap();
    map1.put("GG",435);
    map1.put("DD",156);
    map.putAll(map1);
    System.out.println(map);//{AA=123, ZZ=261, CC=110, RR=124, FF=662, GG=435, DD=156}

    //Object remove(Object key)：移除指定key的key-value对，并返回value
    Object value = map.remove("GG");
    System.out.println(value);//435
    System.out.println(map);//{AA=123, ZZ=261, CC=110, RR=124, FF=662, DD=156}

    //void clear()：清空当前map中的所有数据
    map.clear();
    System.out.println(map.size());//0  与map = null操作不同
    System.out.println(map);//{}
}
```



#### 3.2元素查询的操作：

- Object get(Object key)：获取指定key对应的value
- boolean containsKey(Object key)：是否包含指定的key
- boolean containsValue(Object value)：是否包含指定的value
- int size()：返回map中key-value对的个数
- boolean isEmpty()：判断当前map是否为空
- boolean equals(Object obj)：判断当前map和参数对象obj是否相等

代码示例：

```java
@Test
public void test2() {
    Map map = new HashMap();
    map.put("AA", 123);
    map.put("ZZ", 251);
    map.put("CC", 110);
    map.put("RR", 124);
    map.put("FF", 662);
    System.out.println(map);//{AA=123, ZZ=251, CC=110, RR=124, FF=662}
    //Object get(Object key)：获取指定key对应的value
    System.out.println(map.get("AA"));//123

    //boolean containsKey(Object key)：是否包含指定的key
    System.out.println(map.containsKey("ZZ"));//true

    //boolean containsValue(Object value)：是否包含指定的value
    System.out.println(map.containsValue(123));//true

    //int size()：返回map中key-value对的个数
    System.out.println(map.size());//5

    //boolean isEmpty()：判断当前map是否为空
    System.out.println(map.isEmpty());//false

    //boolean equals(Object obj)：判断当前map和参数对象obj是否相等
    Map map1 = new HashMap();
    map1.put("AA", 123);
    map1.put("ZZ", 251);
    map1.put("CC", 110);
    map1.put("RR", 124);
    map1.put("FF", 662);
    System.out.println(map.equals(map1));//true
}
```



#### 3.3 元视图操作的方法：

- Set keySet()：返回所有key构成的Set集合
- Collection values()：返回所有value构成的Collection集合
- Set entrySet()：返回所有key-value对构成的Set集合

代码示例：

```java
@Test
public void test3() {
    Map map = new HashMap();
    map.put("AA", 123);
    map.put("ZZ", 251);
    map.put("CC", 110);
    map.put("RR", 124);
    map.put("FF", 662);
    System.out.println(map);//{AA=123, ZZ=251, CC=110, RR=124, FF=662}
    //遍历所有的key集:Set keySet()：返回所有key构成的Set集合
    Set set = map.keySet();
    Iterator iterator = set.iterator();
    while (iterator.hasNext()) {
        System.out.println(iterator.next());
    }
    System.out.println("--------------");
    //遍历所有的value集：Collection values()：返回所有value构成的Collection集合
    Collection values = map.values();
    for (Object obj :
         values) {
        System.out.println(obj);
    }
    System.out.println("---------------");
    //Set entrySet()：返回所有key-value对构成的Set集合
    Set entrySet = map.entrySet();
    Iterator iterator1 = entrySet.iterator();
    //方式一：
    while (iterator1.hasNext()) {
        Object obj = iterator1.next();
        //entrySet集合中的元素都是entry
        Map.Entry entry = (Map.Entry) obj;
        System.out.println(entry.getKey() + "-->" + entry.getValue());
    }
    System.out.println("--------------");

    //方式二：
    Set keySet = map.keySet();
    Iterator iterator2 = keySet.iterator();
    while (iterator2.hasNext()) {
        Object key = iterator2.next();
        Object value = map.get(key);
        System.out.println(key + "==" + value);
    }
}
```



#### 总结：常用方法：

- 添加：put(Object key,Object value)
- 删除：remove(Object key)
- 修改：put(Object key,Object value)
- 查询：get(Object key)
- 长度：size()
- 遍历：keySet() / values() / entrySet()



### 4. 内存结构说明：（难点）



#### 4.1 HashMap在JDK 7.0中实现原理：

4.1.1 HashMap的存储结构：

JDK 7.0及以前的版本：HashMap是数组+链表结构（地址链表法）

JDK 8.0版本以后：HashMap是数组+链表+红黑树实现

![image-20200429140534825](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330171351.png)

4.1.2 对象创建和添加过程：

HashMap map = new HashMap():

在实例化以后，底层创建了长度是16的一维数组Entry[] table。

>  ...可能已经执行过多次put...

map.put(key1,value1):

- 首先，调用key1所在类的hashCode()计算key1哈希值，此哈希值经过某种算法计算以后，得到在Entry数组中的存放位置。
- 如果此位置上的数据为空，此时的key1-value1添加成功。 ----情况1
- 如果此位置上的数据不为空，(意味着此位置上存在一个或多个数据(以链表形式存在)),比较key1和已经存在的一个或多个数据的哈希值：
  - 如果key1的哈希值与已经存在的数据的哈希值都不相同，此时key1-value1添加成功。----情况2
  - 如果key1的哈希值和已经存在的某一个数据(key2-value2)的哈希值相同，继续比较：调用key1所在类的equals(key2)方法，比较：
    - 如果equals()返回false:此时key1-value1添加成功。----情况3
    - 如果equals()返回true:使用value1替换value2。

> 补充：关于情况2和情况3：此时key1-value1和原来的数据以链表的方式存储。

在不断的添加过程中，会涉及到扩容问题，当超出临界值(且要存放的位置非空)时，扩容。默认的扩容方式：扩容为原来容量的2倍，并将原有的数据复制过来。

4.1.3 HashMap的扩容

当HashMap中的元素越来越多的时候，hash冲突的几率也就越来越高，因为数组的长度是固定的。所以为了提高查询的效率，就要对 HashMap的数组进行扩容，而在HashMap数组扩容之后，原数组中的数据必须重新计算其在新数组中的位置，并放进去，这就是 resize。

4.1.4 HashMap扩容时机

当HashMap中的元素个数超过数组大小（数组总大小 length，不是数组中个数）* loadFactor时，就会进行数组扩容，loadFactor的默认值(DEFAULT_LOAD_ FACTOR)为0.75，这是一个折中的取值。也就是说，默认情况下，数组大小(DEFAULT INITIAL CAPACITY)为16，那么当 HashMap中元素个数超过16 * 0.75=12（这个值就是代码中的 threshold值，也叫做临界值）的时候，就把数组的大小扩展为2 * 16=32，即扩大一倍，然后重新计算每个元素在数组中的位置，而这是一个非常消耗性能的操作，所以如果我们已经预知 HashMap中元素的个数，那么预设元素的个数能够有效的提高HashMap的性能。



#### 4.2 HashMap在JDK 8.0底层实现原理：

4.2.1 HashMap的存储结构：

HashMap的内部存储结构其实是数组+链表+红黑树的组合。

![image-20200429140606819](https://gitee.com/manster1231/markdown/raw/master/markdownimage/20210330171354.png)

4.2.2 HashMap添加元素的过程：

当实例化一个HashMap时，会初始化 initialCapacity和loadFactor，在put第一对映射关系时，系统会创建一个长度为 initialCapacity的Node数组，这个长度在哈希表中被称为容量（Capacity），在这个数组中可以存放元素的位置我们称之为“桶”（ bucket），每个bucket都有自己的索引，系统可以根据索引快速的查找bucket中的元素。

每个 bucket中存储一个元素，即一个Node对象，但每一个Noe对象可以带个引用变量next，用于指向下一个元素，因此，在一个桶中，就有可能生成一个Node链。也可能是一个一个 TreeNode对象，每一个Tree node对象可以有两个叶子结点left和right，因此，在一个桶中，就有可能生成一个TreeNode树。而新添加的元素作为链表的last，或树的叶子结点。

4.2.3 HashMap的扩容机制:

- 当HashMapl中的其中一个链的对象个数没有达到8个和JDK 7.0以前的扩容方式一样。
- 当HashMapl中的其中一个链的对象个数如果达到了8个，此时如果 capacity 没有达到64，那么HashMap会先扩容解决，如果已经达到了64，那么这个链会变成树，结点类型由Node变成 Tree Node类型。当然，如果当映射关系被移除后，下次resize方法时判断树的结点个数低于6个，也会把树再转为链表。

4.2.4 JDK 8.0与JDK 7.0中HashMap底层的变化：

1. new HashMap():底层没有创建一个长度为16的数组
2. JDK 8.0底层的数组是：Node[],而非Entry[]
3. 首次调用put()方法时，底层创建长度为16的数组
4. JDK 7.0底层结构只有：数组+链表。JDK 8.0中底层结构：数组+链表+红黑树。
   - 形成链表时，七上八下（jdk7:新的元素指向旧的元素。jdk8：旧的元素指向新的元素）
   - 当数组的某一个索引位置上的元素以链表形式存在的数据个数 > 8 且当前数组的长度 > 64时，此时此索引位置上的所数据改为使用红黑树存储。



#### 4.3 HashMap底层典型属性的属性的说明：

- DEFAULT_INITIAL_CAPACITY : HashMap的默认容量，16
- DEFAULT_LOAD_FACTOR：HashMap的默认加载因子：0.75
- threshold：扩容的临界值，= 容量*填充因子：16 * 0.75 => 12
- TREEIFY_THRESHOLD：Bucket中链表长度大于该默认值，转化为红黑树:JDK 8.0引入
- MIN_TREEIFY_CAPACITY：桶中的Node被树化时最小的hash表容量:64



#### 4.4 LinkedHashMap的底层实现原理

- LinkedHashMap底层使用的结构与HashMap相同，因为LinkedHashMap继承于HashMap.
- 区别就在于：LinkedHashMap内部提供了Entry，替换HashMap中的Node.
- 与Linkedhash Set类似，LinkedHashMap可以维护Map的迭代顺序：迭代顺序与Key-value对的插入顺序一致

HashMap中内部类Node源码：

```java
static class Node<K,V> implements Map.Entry<K,V>{
    final int hash;
    final K key;
    V value;
    Node<K,V> next;
}
```

LinkedHashM中内部类Entry源码：

```java
static class Entry<K,V> extends HashMap.Node<K,V> {
    Entry<K,V> before, after;//能够记录添加的元素的先后顺序
    Entry(int hash, K key, V value, Node<K,V> next) {
        super(hash, key, value, next);
    }
}
```



### 5. TreeMap的使用

向TreeMap中添加key-value，要求key必须是由同一个类创建的对象 要照key进行排序：自然排序 、定制排序

代码示例：

```java
//自然排序
@Test
public void test() {
    TreeMap map = new TreeMap();
    User u1 = new User("Tom", 23);
    User u2 = new User("Jarry", 18);
    User u3 = new User("Bruce", 56);
    User u4 = new User("Davie", 23);

    map.put(u1, 98);
    map.put(u2, 16);
    map.put(u3, 92);
    map.put(u4, 100);

    Set entrySet = map.entrySet();
    Iterator iterator = entrySet.iterator();
    while (iterator.hasNext()) {
        Object obj = iterator.next();
        Map.Entry entry = (Map.Entry) obj;
        System.out.println(entry.getKey() + "=" + entry.getValue());
    }
}

//定制排序：按照年龄大小排
@Test
public void test2() {
    TreeMap map = new TreeMap(new Comparator() {
        @Override
        public int compare(Object o1, Object o2) {
            if (o1 instanceof User && o2 instanceof User) {
                User u1 = (User) o1;
                User u2 = (User) o2;
                return Integer.compare(u1.getAge(), u2.getAge());
            }
            throw new RuntimeException("输入数据类型错误");
        }
    });
    User u1 = new User("Tom", 23);
    User u2 = new User("Jarry", 18);
    User u3 = new User("Bruce", 56);
    User u4 = new User("Davie", 23);

    map.put(u1, 98);
    map.put(u2, 16);
    map.put(u3, 92);
    map.put(u4, 100);

    Set entrySet = map.entrySet();
    Iterator iterator = entrySet.iterator();
    while (iterator.hasNext()) {
        Object obj = iterator.next();
        Map.Entry entry = (Map.Entry) obj;
        System.out.println(entry.getKey() + "=" + entry.getValue());
    }
}
```



### 6.使用Properties读取配置文件

代码示例：

```java
//Properties:常用来处理配置文件。key和value都是String类型
public static void main(String[] args)  {
    FileInputStream fis = null;
    try {
        Properties pros = new Properties();

        fis = new FileInputStream("jdbc.properties");
        pros.load(fis);//加载流对应的文件

        String name = pros.getProperty("name");
        String password = pros.getProperty("password");

        System.out.println("name = " + name + ", password = " + password);
    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        if(fis != null){
            try {
                fis.close();
            } catch (IOException e) {
                e.printStackTrace();
            }

        }
    }

}
```



### 7.面试题

1. HashMap的底层实现原理？
2. HashMap 和 Hashtable的异同？
3. CurrentHashMap 与 Hashtable的异同？
4. 负载因子值的大小，对HashMap的影响？
   - 负载因子的大小决定了HashMap的数据密度。
   - 负载因子越大密度越大，发生碰撞的几率越高，数组中的链表越容易长，造成査询或插入时的比较次数增多，性能会下降
   - 负载因子越小，就越容易触发扩容，数据密度也越小，意味着发生碰撞的几率越小，数组中的链表也就越短，查询和插入时比较的次数也越小，性能会更高。但是会浪费一定的内容空间。而且经常扩容也会影响性能，建议初始化预设大一点的空间
   - 按照其他语言的参考及研究经验，会考虑将负载因子设置为0.7~0.75，此时平均检索长度接近于常数。(String), https://picsum.photos/id/188/800/450(String), (String), 0(Integer), true(Boolean), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2021-05-01T22:50:14.571(LocalDateTime), 2021-05-01T22:50:14.571(LocalDateTime), 3(Long), 1(Long), java.util 中的集合类包含 Java 中某些最常用的类。最常用的集合类是 List 和 Map。Map 提供了一个更通用的元素存储方法。Map 集合类用于存储元素对（称作“键”和“值”），其中每个键映射到一个值。(String), 1(String)
2021-05-01 22:50:14.580 DEBUG 21368 --- [http-nio-9000-exec-5] com.manster.mapper.BlogMapper.insert     : <==    Updates: 1
2021-05-01 22:50:14.583 DEBUG 21368 --- [http-nio-9000-exec-5] c.m.mapper.BlogAndTagsMapper.insert      : ==>  Preparing: INSERT INTO t_blog_tags ( tag_id, blog_id ) VALUES ( ?, ? )
2021-05-01 22:50:14.583 DEBUG 21368 --- [http-nio-9000-exec-5] c.m.mapper.BlogAndTagsMapper.insert      : ==> Parameters: 1(Long), 8(Long)
2021-05-01 22:50:14.584 DEBUG 21368 --- [http-nio-9000-exec-5] c.m.mapper.BlogAndTagsMapper.insert      : <==    Updates: 1
2021-05-01 22:50:14.728  INFO 21368 --- [http-nio-9000-exec-5] com.manster.aspect.LogAspect             : Result : redirect:/admin/blogs
2021-05-01 22:50:14.731  INFO 21368 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:9000/admin/blogs', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.BlogController.blogs', args=[1, {message=新增成功}]}
2021-05-01 22:50:14.735 DEBUG 21368 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==>  Preparing: SELECT COUNT(*) FROM t_blog b, t_type t WHERE b.type_id = t.id
2021-05-01 22:50:14.736 DEBUG 21368 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : ==> Parameters: 
2021-05-01 22:50:14.736 DEBUG 21368 --- [http-nio-9000-exec-2] c.m.mapper.BlogMapper.listBlog_mpCount   : <==      Total: 1
2021-05-01 22:50:14.737 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, t.id typeid, t.name typename from t_blog b ,t_type t where b.type_id = t.id LIMIT ?
2021-05-01 22:50:14.737 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 5(Long)
2021-05-01 22:50:14.739 DEBUG 21368 --- [http-nio-9000-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 4
2021-05-01 22:50:14.742 DEBUG 21368 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==>  Preparing: SELECT id,name FROM t_type
2021-05-01 22:50:14.742 DEBUG 21368 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : ==> Parameters: 
2021-05-01 22:50:14.743 DEBUG 21368 --- [http-nio-9000-exec-2] c.manster.mapper.TypeMapper.selectList   : <==      Total: 7
2021-05-01 22:50:14.743  INFO 21368 --- [http-nio-9000-exec-2] com.manster.aspect.LogAspect             : Result : blogs
2021-05-01 22:50:19.079  INFO 11872 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:50:19.084 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:50:19.084 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:50:19.088 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 4
2021-05-01 22:50:19.091 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:50:19.091 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:50:19.093 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:50:19.097 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:50:19.098 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:50:19.101 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 9
2021-05-01 22:50:19.103 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:50:19.103 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:50:19.105 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 5
2021-05-01 22:50:19.112 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:50:19.112 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:50:19.116 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : <==      Total: 4
2021-05-01 22:50:19.117  INFO 11872 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:52:56.738  INFO 11872 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:52:56.743 DEBUG 11872 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:52:56.743 DEBUG 11872 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:52:56.747 DEBUG 11872 --- [http-nio-8888-exec-2] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 4
2021-05-01 22:52:56.750 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:52:56.751 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:52:56.754 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:52:56.757 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:52:56.757 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:52:56.760 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 9
2021-05-01 22:52:56.764 DEBUG 11872 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:52:56.764 DEBUG 11872 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:52:56.766 DEBUG 11872 --- [http-nio-8888-exec-2] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 5
2021-05-01 22:52:56.771 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:52:56.771 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:52:56.774 DEBUG 11872 --- [http-nio-8888-exec-2] c.manster.mapper.BlogMapper.selectList   : <==      Total: 4
2021-05-01 22:52:56.775  INFO 11872 --- [http-nio-8888-exec-2] com.manster.aspect.LogAspect             : Result : index
2021-05-01 22:53:50.076  INFO 11872 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Request : {url='http://localhost:8888/', ip='0:0:0:0:0:0:0:1', classMethod='com.manster.controller.IndexController.index', args=[1, {}]}
2021-05-01 22:53:50.081 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==>  Preparing: select b.id id, b.title title, b.first_picture first_picture, b.views views, b.update_time update_time, b.recommend recommend, b.published published, b.type_id type_id, b.user_id userId, b.description description, t.id typeid, t.name typename, u.id uid, u.nickname nickname, u.avatar avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and b.user_id = u.id and b.published = 1
2021-05-01 22:53:50.083 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : ==> Parameters: 
2021-05-01 22:53:50.087 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.BlogMapper.listBlog   : <==      Total: 4
2021-05-01 22:53:50.094 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==>  Preparing: SELECT COUNT( * ) FROM t_blog
2021-05-01 22:53:50.094 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : ==> Parameters: 
2021-05-01 22:53:50.097 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectCount  : <==      Total: 1
2021-05-01 22:53:50.101 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==>  Preparing: select t.id id, t.name name, b.id bid, b.type_id typeId from t_type t left join t_blog b on t.id = b.type_id
2021-05-01 22:53:50.101 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : ==> Parameters: 
2021-05-01 22:53:50.104 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.TypeMapper.listTypeVO   : <==      Total: 9
2021-05-01 22:53:50.109 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==>  Preparing: select t.id id, t.name name, b.id bid from t_tag t, t_blog_tags bt, t_blog b where t.id = bt.tag_id and bt.blog_id = b.id;
2021-05-01 22:53:50.109 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : ==> Parameters: 
2021-05-01 22:53:50.112 DEBUG 11872 --- [http-nio-8888-exec-4] com.manster.mapper.TagMapper.listTagVO   : <==      Total: 5
2021-05-01 22:53:50.116 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==>  Preparing: SELECT id,title,content,first_picture,flag,views,appreciation,share_statement,commentabled,published,recommend,create_time,update_time,type_id,user_id,description,tag_ids FROM t_blog WHERE (published = ? AND recommend = ?)
2021-05-01 22:53:50.118 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : ==> Parameters: 1(Integer), 1(Integer)
2021-05-01 22:53:50.120 DEBUG 11872 --- [http-nio-8888-exec-4] c.manster.mapper.BlogMapper.selectList   : <==      Total: 4
2021-05-01 22:53:50.121  INFO 11872 --- [http-nio-8888-exec-4] com.manster.aspect.LogAspect             : Result : index
